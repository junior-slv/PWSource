<?xml version="1.0"?>
<Assembly>
  <Type Name="RECT">
    <Method Sig="instance void .ctor(int , int , int , int )" />
    <Method Sig="instance void .ctor(struct Rectangle )" />
    <Method Sig="struct RECT FromXYWH(int , int , int , int )" />
    <Method Sig="instance struct Size get_Size()" />
    <Method Sig="instance struct Rectangle ToRectangle()" />
    <Method Sig="instance void .ctor(int , int , int , int )" />
    <Method Sig="instance void .ctor(struct Rectangle )" />
    <Method Sig="struct RECT FromXYWH(int , int , int , int )" />
    <Method Sig="instance struct Size get_Size()" />
  </Type>
  <Type Name="POINT">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(int , int )" />
    <Method Sig="instance struct Point ToPoint()" />
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(int , int )" />
  </Type>
  <Type Name="DRAWTEXTPARAMS">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(class DRAWTEXTPARAMS )" />
    <Method Sig="instance void .ctor(int , int )" />
  </Type>
  <Type Name="LOGBRUSH">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LOGFONT">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(class LOGFONT )" />
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(class LOGFONT )" />
  </Type>
  <Type Name="SIZE">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(int , int )" />
    <Method Sig="instance struct Size ToSize()" />
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(int , int )" />
  </Type>
  <Type Name="CommonHandles">
    <Method Sig="void .cctor()" />
    <Method Sig="instance void .ctor()" />
    <Method Sig="void .cctor()" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Namespace Name="System">
    <Namespace Name="Resources">
      <Type Name="ResXDataNode">
        <Method Sig="instance void .ctor(string , object )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(string , class ResXFileRef )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance string get_Comment()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void set_Comment(string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance string get_Name()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void set_Name(string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance class ResXFileRef get_FileRef()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance struct Point GetNodePosition()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance string GetValueTypeName(class ITypeResolutionService )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance string GetValueTypeName([] class AssemblyName )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance object GetValue(class ITypeResolutionService )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance object GetValue([] class AssemblyName )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="void .cctor()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
      </Type>
      <Type Name="ResXFileRef">
        <Method Sig="instance void .ctor(string , string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(string , string , class Encoding )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance string get_FileName()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance string get_TypeName()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance class Encoding get_TextFileEncoding()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance string ToString()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
      </Type>
      <Type Name="ResXResourceReader">
        <Method Sig="instance void .ctor(string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(string , class ITypeResolutionService )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(class TextReader )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(class TextReader , class ITypeResolutionService )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(class Stream )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(class Stream , class ITypeResolutionService )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(class Stream , [] class AssemblyName )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(class TextReader , [] class AssemblyName )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(string , [] class AssemblyName )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance string get_BasePath()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void set_BasePath(string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance bool get_UseResXDataNodes()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void set_UseResXDataNodes(bool )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void Close()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="class ResXResourceReader FromFileContents(string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="class ResXResourceReader FromFileContents(string , class ITypeResolutionService )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="class ResXResourceReader FromFileContents(string , [] class AssemblyName )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance class IDictionaryEnumerator GetEnumerator()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance class IDictionaryEnumerator GetMetadataEnumerator()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
      </Type>
      <Type Name="ResXResourceSet">
        <Method Sig="instance void .ctor(string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(class Stream )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance class Type GetDefaultReader()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance class Type GetDefaultWriter()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
      </Type>
      <Type Name="ResXResourceWriter">
        <Method Sig="instance string get_BasePath()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void set_BasePath(string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(class Stream )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void .ctor(class TextWriter )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void AddAlias(string , class AssemblyName )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void AddMetadata(string , [] byte )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void AddMetadata(string , string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void AddMetadata(string , object )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void AddResource(string , [] byte )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void AddResource(string , object )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void AddResource(string , string )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void AddResource(class ResXDataNode )">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void Close()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void Dispose()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="instance void Generate()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
        <Method Sig="void .cctor()">
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
          </LinkDemand>
        </Method>
      </Type>
    </Namespace>
    <Namespace Name="Windows">
      <Namespace Name="Forms">
        <Type Name="AccessibleObject">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance string get_DefaultAction()" />
          <Method Sig="instance string get_Description()" />
          <Method Sig="instance string get_Help()" />
          <Method Sig="instance string get_KeyboardShortcut()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance class AccessibleObject get_Parent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AccessibleRole get_Role()" />
          <Method Sig="instance struct AccessibleStates get_State()" />
          <Method Sig="instance string get_Value()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Value(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class AccessibleObject GetChild(int )" />
          <Method Sig="instance int GetChildCount()" />
          <Method Sig="instance class AccessibleObject GetFocused()" />
          <Method Sig="instance int GetHelpTopic(&amp; string )" />
          <Method Sig="instance class AccessibleObject GetSelected()" />
          <Method Sig="instance class AccessibleObject HitTest(int , int )" />
          <Method Sig="instance void DoDefaultAction()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class AccessibleObject Navigate(struct AccessibleNavigation )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Select(struct AccessibleSelection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="AmbientProperties">
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance class Cursor get_Cursor()" />
          <Method Sig="instance void set_Cursor(class Cursor )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="Application">
          <Method Sig="bool get_AllowQuit()" />
          <Method Sig="class RegistryKey get_CommonAppDataRegistry()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="string get_CommonAppDataPath()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="string get_CompanyName()" />
          <Method Sig="class CultureInfo get_CurrentCulture()" />
          <Method Sig="void set_CurrentCulture(class CultureInfo )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlThread" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class InputLanguage get_CurrentInputLanguage()" />
          <Method Sig="void set_CurrentInputLanguage(class InputLanguage )" />
          <Method Sig="string get_ExecutablePath()" />
          <Method Sig="string get_LocalUserAppDataPath()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool get_MessageLoop()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class FormCollection get_OpenForms()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="string get_ProductName()" />
          <Method Sig="string get_ProductVersion()" />
          <Method Sig="void RegisterMessageLoop(class MessageLoopCallback )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="bool get_RenderWithVisualStyles()" />
          <Method Sig="string get_SafeTopLevelCaptionFormat()" />
          <Method Sig="void set_SafeTopLevelCaptionFormat(string )" />
          <Method Sig="string get_StartupPath()" />
          <Method Sig="void UnregisterMessageLoop()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="bool get_UseWaitCursor()" />
          <Method Sig="void set_UseWaitCursor(bool )" />
          <Method Sig="string get_UserAppDataPath()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class RegistryKey get_UserAppDataRegistry()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct VisualStyleState get_VisualStyleState()" />
          <Method Sig="void set_VisualStyleState(struct VisualStyleState )" />
          <Method Sig="void add_ApplicationExit(class EventHandler )" />
          <Method Sig="void remove_ApplicationExit(class EventHandler )" />
          <Method Sig="void AddMessageFilter(class IMessageFilter )" />
          <Method Sig="bool FilterMessage(&amp; struct Message )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void add_Idle(class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void remove_Idle(class EventHandler )" />
          <Method Sig="void add_EnterThreadModal(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void remove_EnterThreadModal(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void add_LeaveThreadModal(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void remove_LeaveThreadModal(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void add_ThreadException(class ThreadExceptionEventHandler )" />
          <Method Sig="void remove_ThreadException(class ThreadExceptionEventHandler )" />
          <Method Sig="void add_ThreadExit(class EventHandler )" />
          <Method Sig="void remove_ThreadExit(class EventHandler )" />
          <Method Sig="void DoEvents()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void EnableVisualStyles()" />
          <Method Sig="void Exit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void Exit(class CancelEventArgs )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ExitThread()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct ApartmentState OleRequired()" />
          <Method Sig="void OnThreadException(class Exception )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void RaiseIdle(class EventArgs )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void RemoveMessageFilter(class IMessageFilter )" />
          <Method Sig="void Restart()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void Run()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void Run(class Form )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void Run(class ApplicationContext )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetCompatibleTextRenderingDefault(bool )" />
          <Method Sig="bool SetSuspendState(struct PowerState , bool , bool )" />
          <Method Sig="void SetUnhandledExceptionMode(struct UnhandledExceptionMode )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="Control">
          <Method Sig="void .cctor()" />
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , int , int , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Control , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Control , string , int , int , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class AccessibleObject get_AccessibilityObject()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_AccessibleDefaultActionDescription()" />
          <Method Sig="instance void set_AccessibleDefaultActionDescription(string )" />
          <Method Sig="instance string get_AccessibleDescription()" />
          <Method Sig="instance void set_AccessibleDescription(string )" />
          <Method Sig="instance string get_AccessibleName()" />
          <Method Sig="instance void set_AccessibleName(string )" />
          <Method Sig="instance struct AccessibleRole get_AccessibleRole()" />
          <Method Sig="instance void set_AccessibleRole(struct AccessibleRole )" />
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AnchorStyles get_Anchor()" />
          <Method Sig="instance void set_Anchor(struct AnchorStyles )" />
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct Point get_AutoScrollOffset()" />
          <Method Sig="instance void set_AutoScrollOffset(struct Point )" />
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void ResetBindings()" />
          <Method Sig="instance class BindingContext get_BindingContext()" />
          <Method Sig="instance void set_BindingContext(class BindingContext )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_BindingContextChanged(class EventHandler )" />
          <Method Sig="instance void remove_BindingContextChanged(class EventHandler )" />
          <Method Sig="instance int get_Bottom()" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance void set_Bounds(struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CanFocus()" />
          <Method Sig="instance bool get_CanSelect()" />
          <Method Sig="instance bool get_Capture()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Capture(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CausesValidation()" />
          <Method Sig="instance void set_CausesValidation(bool )" />
          <Method Sig="instance void add_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance void remove_CausesValidationChanged(class EventHandler )" />
          <Method Sig="bool get_CheckForIllegalCrossThreadCalls()" />
          <Method Sig="void set_CheckForIllegalCrossThreadCalls(bool )" />
          <Method Sig="instance struct Rectangle get_ClientRectangle()" />
          <Method Sig="instance struct Size get_ClientSize()" />
          <Method Sig="instance void set_ClientSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ClientSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ClientSizeChanged(class EventHandler )" />
          <Method Sig="instance string get_CompanyName()" />
          <Method Sig="instance bool get_ContainsFocus()" />
          <Method Sig="instance class ContextMenu get_ContextMenu()" />
          <Method Sig="instance void set_ContextMenu(class ContextMenu )" />
          <Method Sig="instance void add_ContextMenuChanged(class EventHandler )" />
          <Method Sig="instance void remove_ContextMenuChanged(class EventHandler )" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance void add_ContextMenuStripChanged(class EventHandler )" />
          <Method Sig="instance void remove_ContextMenuStripChanged(class EventHandler )" />
          <Method Sig="instance class ControlCollection get_Controls()" />
          <Method Sig="instance bool get_Created()" />
          <Method Sig="instance class Cursor get_Cursor()" />
          <Method Sig="instance void set_Cursor(class Cursor )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CursorChanged(class EventHandler )" />
          <Method Sig="instance void remove_CursorChanged(class EventHandler )" />
          <Method Sig="instance class ControlBindingsCollection get_DataBindings()" />
          <Method Sig="struct Color get_DefaultBackColor()" />
          <Method Sig="class Font get_DefaultFont()" />
          <Method Sig="struct Color get_DefaultForeColor()" />
          <Method Sig="instance struct Rectangle get_DisplayRectangle()" />
          <Method Sig="instance bool get_IsDisposed()" />
          <Method Sig="instance bool get_Disposing()" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )" />
          <Method Sig="instance void add_DockChanged(class EventHandler )" />
          <Method Sig="instance void remove_DockChanged(class EventHandler )" />
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )" />
          <Method Sig="instance void add_EnabledChanged(class EventHandler )" />
          <Method Sig="instance void remove_EnabledChanged(class EventHandler )" />
          <Method Sig="instance bool get_Focused()" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
          <Method Sig="instance intptr get_Handle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_HasChildren()" />
          <Method Sig="instance int get_Height()" />
          <Method Sig="instance void set_Height(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsHandleCreated()" />
          <Method Sig="instance bool get_InvokeRequired()" />
          <Method Sig="instance bool get_IsAccessible()" />
          <Method Sig="instance void set_IsAccessible(bool )" />
          <Method Sig="instance bool get_IsMirrored()" />
          <Method Sig="instance int get_Left()" />
          <Method Sig="instance void set_Left(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Point get_Location()" />
          <Method Sig="instance void set_Location(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_LocationChanged(class EventHandler )" />
          <Method Sig="instance void remove_LocationChanged(class EventHandler )" />
          <Method Sig="instance struct Padding get_Margin()" />
          <Method Sig="instance void set_Margin(struct Padding )" />
          <Method Sig="instance void add_MarginChanged(class EventHandler )" />
          <Method Sig="instance void remove_MarginChanged(class EventHandler )" />
          <Method Sig="instance struct Size get_MaximumSize()" />
          <Method Sig="instance void set_MaximumSize(struct Size )" />
          <Method Sig="instance struct Size get_MinimumSize()" />
          <Method Sig="instance void set_MinimumSize(struct Size )" />
          <Method Sig="struct Keys get_ModifierKeys()" />
          <Method Sig="struct MouseButtons get_MouseButtons()" />
          <Method Sig="struct Point get_MousePosition()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance class Control get_Parent()" />
          <Method Sig="instance void set_Parent(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ProductName()" />
          <Method Sig="instance string get_ProductVersion()" />
          <Method Sig="instance bool get_RecreatingHandle()" />
          <Method Sig="instance class Region get_Region()" />
          <Method Sig="instance void set_Region(class Region )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RegionChanged(class EventHandler )" />
          <Method Sig="instance void remove_RegionChanged(class EventHandler )" />
          <Method Sig="instance int get_Right()" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance class ISite get_Site()" />
          <Method Sig="instance void set_Site(class ISite )" />
          <Method Sig="instance struct Size get_Size()" />
          <Method Sig="instance void set_Size(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_SizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_SizeChanged(class EventHandler )" />
          <Method Sig="instance int get_TabIndex()" />
          <Method Sig="instance void set_TabIndex(int )" />
          <Method Sig="instance void add_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance int get_Top()" />
          <Method Sig="instance void set_Top(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Control get_TopLevelControl()" />
          <Method Sig="instance bool get_UseWaitCursor()" />
          <Method Sig="instance void set_UseWaitCursor(bool )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_VisibleChanged(class EventHandler )" />
          <Method Sig="instance void remove_VisibleChanged(class EventHandler )" />
          <Method Sig="instance int get_Width()" />
          <Method Sig="instance void set_Width(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IWindowTarget get_WindowTarget()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_WindowTarget(class IWindowTarget )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_ControlAdded(class ControlEventHandler )" />
          <Method Sig="instance void remove_ControlAdded(class ControlEventHandler )" />
          <Method Sig="instance void add_ControlRemoved(class ControlEventHandler )" />
          <Method Sig="instance void remove_ControlRemoved(class ControlEventHandler )" />
          <Method Sig="instance void add_DragDrop(class DragEventHandler )" />
          <Method Sig="instance void remove_DragDrop(class DragEventHandler )" />
          <Method Sig="instance void add_DragEnter(class DragEventHandler )" />
          <Method Sig="instance void remove_DragEnter(class DragEventHandler )" />
          <Method Sig="instance void add_DragOver(class DragEventHandler )" />
          <Method Sig="instance void remove_DragOver(class DragEventHandler )" />
          <Method Sig="instance void add_DragLeave(class EventHandler )" />
          <Method Sig="instance void remove_DragLeave(class EventHandler )" />
          <Method Sig="instance void add_GiveFeedback(class GiveFeedbackEventHandler )" />
          <Method Sig="instance void remove_GiveFeedback(class GiveFeedbackEventHandler )" />
          <Method Sig="instance void add_HandleCreated(class EventHandler )" />
          <Method Sig="instance void remove_HandleCreated(class EventHandler )" />
          <Method Sig="instance void add_HandleDestroyed(class EventHandler )" />
          <Method Sig="instance void remove_HandleDestroyed(class EventHandler )" />
          <Method Sig="instance void add_HelpRequested(class HelpEventHandler )" />
          <Method Sig="instance void remove_HelpRequested(class HelpEventHandler )" />
          <Method Sig="instance void add_Invalidated(class InvalidateEventHandler )" />
          <Method Sig="instance void remove_Invalidated(class InvalidateEventHandler )" />
          <Method Sig="instance struct Size get_PreferredSize()" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void add_QueryContinueDrag(class QueryContinueDragEventHandler )" />
          <Method Sig="instance void remove_QueryContinueDrag(class QueryContinueDragEventHandler )" />
          <Method Sig="instance void add_QueryAccessibilityHelp(class QueryAccessibilityHelpEventHandler )" />
          <Method Sig="instance void remove_QueryAccessibilityHelp(class QueryAccessibilityHelpEventHandler )" />
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_Enter(class EventHandler )" />
          <Method Sig="instance void remove_Enter(class EventHandler )" />
          <Method Sig="instance void add_GotFocus(class EventHandler )" />
          <Method Sig="instance void remove_GotFocus(class EventHandler )" />
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void add_Layout(class LayoutEventHandler )" />
          <Method Sig="instance void remove_Layout(class LayoutEventHandler )" />
          <Method Sig="instance void add_Leave(class EventHandler )" />
          <Method Sig="instance void remove_Leave(class EventHandler )" />
          <Method Sig="instance void add_LostFocus(class EventHandler )" />
          <Method Sig="instance void remove_LostFocus(class EventHandler )" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseCaptureChanged(class EventHandler )" />
          <Method Sig="instance void remove_MouseCaptureChanged(class EventHandler )" />
          <Method Sig="instance void add_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseEnter(class EventHandler )" />
          <Method Sig="instance void remove_MouseEnter(class EventHandler )" />
          <Method Sig="instance void add_MouseLeave(class EventHandler )" />
          <Method Sig="instance void remove_MouseLeave(class EventHandler )" />
          <Method Sig="instance void add_MouseHover(class EventHandler )" />
          <Method Sig="instance void remove_MouseHover(class EventHandler )" />
          <Method Sig="instance void add_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseWheel(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseWheel(class MouseEventHandler )" />
          <Method Sig="instance void add_Move(class EventHandler )" />
          <Method Sig="instance void remove_Move(class EventHandler )" />
          <Method Sig="instance void add_PreviewKeyDown(class PreviewKeyDownEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_PreviewKeyDown(class PreviewKeyDownEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Resize(class EventHandler )" />
          <Method Sig="instance void remove_Resize(class EventHandler )" />
          <Method Sig="instance void add_ChangeUICues(class UICuesEventHandler )" />
          <Method Sig="instance void remove_ChangeUICues(class UICuesEventHandler )" />
          <Method Sig="instance void add_StyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_StyleChanged(class EventHandler )" />
          <Method Sig="instance void add_SystemColorsChanged(class EventHandler )" />
          <Method Sig="instance void remove_SystemColorsChanged(class EventHandler )" />
          <Method Sig="instance void add_Validating(class CancelEventHandler )" />
          <Method Sig="instance void remove_Validating(class CancelEventHandler )" />
          <Method Sig="instance void add_Validated(class EventHandler )" />
          <Method Sig="instance void remove_Validated(class EventHandler )" />
          <Method Sig="instance void add_ParentChanged(class EventHandler )" />
          <Method Sig="instance void remove_ParentChanged(class EventHandler )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(class Delegate )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IAsyncResult BeginInvoke(class Delegate , [] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void BringToFront()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Contains(class Control )" />
          <Method Sig="instance class Graphics CreateGraphics()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void CreateControl()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DragDropEffects DoDragDrop(object , struct DragDropEffects )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DrawToBitmap(class Bitmap , struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object EndInvoke(class IAsyncResult )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Form FindForm()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Focus()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class Control FromChildHandle(intptr )" />
          <Method Sig="class Control FromHandle(intptr )" />
          <Method Sig="instance class Control GetChildAtPoint(struct Point , struct GetChildAtPointSkip )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Control GetChildAtPoint(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IContainerControl GetContainerControl()" />
          <Method Sig="instance class Control GetNextControl(class Control , bool )" />
          <Method Sig="instance void Hide()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Invalidate(class Region )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Invalidate(class Region , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Invalidate()" />
          <Method Sig="instance void Invalidate(bool )" />
          <Method Sig="instance void Invalidate(struct Rectangle )" />
          <Method Sig="instance void Invalidate(struct Rectangle , bool )" />
          <Method Sig="instance object Invoke(class Delegate )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object Invoke(class Delegate , [] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool IsKeyLocked(struct Keys )" />
          <Method Sig="bool IsMnemonic(char , string )" />
          <Method Sig="instance void PerformLayout()" />
          <Method Sig="instance void PerformLayout(class Control , string )" />
          <Method Sig="instance struct Point PointToClient(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Point PointToScreen(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool PreProcessMessage(&amp; struct Message )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance struct PreProcessControlState PreProcessControlMessage(&amp; struct Message )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void ResetBackColor()" />
          <Method Sig="instance void ResetCursor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetFont()" />
          <Method Sig="instance void ResetForeColor()" />
          <Method Sig="instance void ResetRightToLeft()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle RectangleToClient(struct Rectangle )" />
          <Method Sig="instance struct Rectangle RectangleToScreen(struct Rectangle )" />
          <Method Sig="instance void Refresh()" />
          <Method Sig="instance void ResetText()" />
          <Method Sig="instance void ResumeLayout()" />
          <Method Sig="instance void ResumeLayout(bool )" />
          <Method Sig="instance void Scale(float )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Scale(float , float )" />
          <Method Sig="instance void Scale(struct SizeF )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Select()" />
          <Method Sig="instance bool SelectNextControl(class Control , bool , bool , bool , bool )" />
          <Method Sig="instance void SendToBack()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetBounds(int , int , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetBounds(int , int , int , int , struct BoundsSpecified )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SuspendLayout()" />
          <Method Sig="instance void Update()" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void ResetImeMode()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="NativeWindow">
          <Method Sig="void .cctor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void .ctor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance intptr get_Handle()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void AssignHandle(intptr )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void CreateHandle(class CreateParams )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void DefWndProc(&amp; struct Message )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void DestroyHandle()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="class NativeWindow FromHandle(intptr )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void ReleaseHandle()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
        </Type>
        <Namespace Name="Layout">
          <Type Name="ArrangedElementCollection">
            <Method Sig="instance bool Equals(object )" />
            <Method Sig="instance int GetHashCode()" />
            <Method Sig="instance bool get_IsReadOnly()" />
            <Method Sig="instance int get_Count()" />
            <Method Sig="instance void CopyTo(class Array , int )" />
            <Method Sig="instance class IEnumerator GetEnumerator()" />
            <Method Sig="void .cctor()" />
          </Type>
          <Type Name="LayoutEngine">
            <Method Sig="instance void InitLayout(object , struct BoundsSpecified )" />
            <Method Sig="instance bool Layout(object , class LayoutEventArgs )" />
          </Type>
          <Type Name="TableLayoutSettingsTypeConverter">
            <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
            <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
            <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                </PermissionSet>
              </Demand>
            </Method>
            <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
            <Method Sig="instance void .ctor()" />
          </Type>
        </Namespace>
        <Type Name="PaintEventArgs">
          <Method Sig="instance void .ctor(class Graphics , struct Rectangle )" />
          <Method Sig="instance struct Rectangle get_ClipRectangle()" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance void Dispose()" />
        </Type>
        <Type Name="ScrollableControl">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoScroll()" />
          <Method Sig="instance void set_AutoScroll(bool )" />
          <Method Sig="instance struct Size get_AutoScrollMargin()" />
          <Method Sig="instance void set_AutoScrollMargin(struct Size )" />
          <Method Sig="instance struct Point get_AutoScrollPosition()" />
          <Method Sig="instance void set_AutoScrollPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_AutoScrollMinSize()" />
          <Method Sig="instance void set_AutoScrollMinSize(struct Size )" />
          <Method Sig="instance struct Rectangle get_DisplayRectangle()" />
          <Method Sig="instance class HScrollProperties get_HorizontalScroll()" />
          <Method Sig="instance class VScrollProperties get_VerticalScroll()" />
          <Method Sig="instance class DockPaddingEdges get_DockPadding()" />
          <Method Sig="instance void ScrollControlIntoView(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Scroll(class ScrollEventHandler )" />
          <Method Sig="instance void remove_Scroll(class ScrollEventHandler )" />
          <Method Sig="instance void SetAutoScrollMargin(int , int )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ContainerControl">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SizeF get_AutoScaleDimensions()" />
          <Method Sig="instance void set_AutoScaleDimensions(struct SizeF )" />
          <Method Sig="instance struct AutoScaleMode get_AutoScaleMode()" />
          <Method Sig="instance void set_AutoScaleMode(struct AutoScaleMode )" />
          <Method Sig="instance struct AutoValidate get_AutoValidate()" />
          <Method Sig="instance void set_AutoValidate(struct AutoValidate )" />
          <Method Sig="instance void add_AutoValidateChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoValidateChanged(class EventHandler )" />
          <Method Sig="instance class BindingContext get_BindingContext()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_BindingContext(class BindingContext )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Control get_ActiveControl()" />
          <Method Sig="instance void set_ActiveControl(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SizeF get_CurrentAutoScaleDimensions()" />
          <Method Sig="instance class Form get_ParentForm()" />
          <Method Sig="instance void PerformAutoScale()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Validate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Validate(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool ValidateChildren()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool ValidateChildren(struct ValidationConstraints )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ApplicationContext">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class Form )" />
          <Method Sig="instance class Form get_MainForm()" />
          <Method Sig="instance void set_MainForm(class Form )" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance void add_ThreadExit(class EventHandler )" />
          <Method Sig="instance void remove_ThreadExit(class EventHandler )" />
          <Method Sig="instance void Dispose()" />
          <Method Sig="instance void ExitThread()" />
        </Type>
        <Type Name="AutoCompleteStringCollection">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance string get_Item(int )" />
          <Method Sig="instance void set_Item(int , string )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance int Add(string )" />
          <Method Sig="instance void AddRange([] string )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance void CopyTo([] string , int )" />
          <Method Sig="instance int IndexOf(string )" />
          <Method Sig="instance void Insert(int , string )" />
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance bool get_IsSynchronized()" />
          <Method Sig="instance void Remove(string )" />
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance object get_SyncRoot()" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
        </Type>
        <Type Name="AxHost">
          <Method Sig="instance struct Color get_BackColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackgroundImage(class Image )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct ImeMode get_ImeMode()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseClick(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseClick(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseDoubleClick(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseDoubleClick(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Cursor get_Cursor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Cursor(class Cursor )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class ContextMenu get_ContextMenu()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ContextMenu(class ContextMenu )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_Enabled()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Enabled(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Font get_Font()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Font(class Font )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ForeColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_RightToLeft()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_RightToLeft(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Text()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Text(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void BeginInit()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void EndInit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_EditMode()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_HasAboutBox()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ShowAboutBox()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BackColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BindingContextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BindingContextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ContextMenuChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ContextMenuChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_CursorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_CursorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_EnabledChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_EnabledChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_FontChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_FontChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_RightToLeftChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_RightToLeftChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_TextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_TextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Click(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Click(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragDrop(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragDrop(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragEnter(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragEnter(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragOver(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragOver(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_GiveFeedback(class GiveFeedbackEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_GiveFeedback(class GiveFeedbackEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_HelpRequested(class HelpEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_HelpRequested(class HelpEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Paint(class PaintEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Paint(class PaintEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_QueryContinueDrag(class QueryContinueDragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_QueryContinueDrag(class QueryContinueDragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_QueryAccessibilityHelp(class QueryAccessibilityHelpEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_QueryAccessibilityHelp(class QueryAccessibilityHelpEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DoubleClick(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DoubleClick(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Layout(class LayoutEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Layout(class LayoutEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseDown(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseDown(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseEnter(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseEnter(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseHover(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseHover(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseMove(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseMove(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseUp(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseUp(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseWheel(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseWheel(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ChangeUICues(class UICuesEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ChangeUICues(class UICuesEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_StyleChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_StyleChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Site(class ISite )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void DrawToBitmap(class Bitmap , struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool PreProcessMessage(&amp; struct Message )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class State get_OcxState()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_OcxState(class State )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class ContainerControl get_ContainingControl()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ContainingControl(class ContainerControl )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void DoVerb(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void InvokeEditMode()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object GetOcx()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool HasPropertyPages()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void MakeDirty()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ShowPropertyPages()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ShowPropertyPages(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="void .cctor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Namespace Name="Design">
          <Type Name="WindowsFormsComponentEditor">
            <Method Sig="instance bool EditComponent(class ITypeDescriptorContext , object )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
            </Method>
            <Method Sig="instance bool EditComponent(object , class IWin32Window )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
            </Method>
            <Method Sig="instance bool EditComponent(class ITypeDescriptorContext , object , class IWin32Window )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
            </Method>
          </Type>
          <Type Name="ComponentEditorForm">
            <Method Sig="instance void .ctor(object , [] class Type )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance bool get_AutoSize()">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance void set_AutoSize(bool )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance void add_AutoSizeChanged(class EventHandler )">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance bool PreProcessMessage(&amp; struct Message )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance struct DialogResult ShowForm()">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance struct DialogResult ShowForm(int )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance struct DialogResult ShowForm(class IWin32Window )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance struct DialogResult ShowForm(class IWin32Window , int )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
          </Type>
          <Type Name="ComponentEditorPage">
            <Method Sig="instance void .ctor()">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
            </Method>
            <Method Sig="instance bool get_AutoSize()" />
            <Method Sig="instance void set_AutoSize(bool )" />
            <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
            <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
            <Method Sig="instance bool get_CommitOnDeactivate()" />
            <Method Sig="instance void set_CommitOnDeactivate(bool )" />
            <Method Sig="instance class Icon get_Icon()" />
            <Method Sig="instance void set_Icon(class Icon )" />
            <Method Sig="instance string get_Title()" />
            <Method Sig="instance void Activate()">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
            </Method>
            <Method Sig="instance void ApplyChanges()" />
            <Method Sig="instance void Deactivate()">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
            </Method>
            <Method Sig="instance class Control GetControl()" />
            <Method Sig="instance bool IsPageMessage(&amp; struct Message )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
            </Method>
            <Method Sig="instance void OnApplyComplete()" />
            <Method Sig="instance void SetComponent(class IComponent )" />
            <Method Sig="instance void SetSite(class IComponentEditorPageSite )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
            </Method>
            <Method Sig="instance void ShowHelp()" />
            <Method Sig="instance bool SupportsHelp()" />
          </Type>
          <Type Name="PropertyTab">
            <Method Sig="instance class Bitmap get_Bitmap()" />
            <Method Sig="instance [] object get_Components()" />
            <Method Sig="instance void set_Components([] object )" />
            <Method Sig="instance string get_TabName()" />
            <Method Sig="instance string get_HelpKeyword()" />
            <Method Sig="instance bool CanExtend(object )" />
            <Method Sig="instance void Dispose()" />
            <Method Sig="instance class PropertyDescriptor GetDefaultProperty(object )" />
            <Method Sig="instance class PropertyDescriptorCollection GetProperties(object )" />
            <Method Sig="instance class PropertyDescriptorCollection GetProperties(object , [] class Attribute )" />
            <Method Sig="instance class PropertyDescriptorCollection GetProperties(class ITypeDescriptorContext , object , [] class Attribute )" />
          </Type>
          <Type Name="EventsTab">
            <Method Sig="instance void .ctor(class IServiceProvider )">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance string get_TabName()">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance string get_HelpKeyword()">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance bool CanExtend(object )">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance class PropertyDescriptor GetDefaultProperty(object )">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance class PropertyDescriptorCollection GetProperties(object , [] class Attribute )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance class PropertyDescriptorCollection GetProperties(class ITypeDescriptorContext , object , [] class Attribute )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
          </Type>
          <Type Name="ToolStripItemDesignerAvailabilityAttribute">
            <Method Sig="instance void .ctor()" />
            <Method Sig="instance void .ctor(struct ToolStripItemDesignerAvailability )" />
            <Method Sig="instance struct ToolStripItemDesignerAvailability get_ItemAdditionVisibility()" />
            <Method Sig="instance bool Equals(object )" />
            <Method Sig="instance int GetHashCode()" />
            <Method Sig="instance bool IsDefaultAttribute()" />
            <Method Sig="void .cctor()" />
          </Type>
        </Namespace>
        <Type Name="BaseCollection">
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance bool get_IsSynchronized()" />
          <Method Sig="instance object get_SyncRoot()" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="Binding">
          <Method Sig="instance void .ctor(string , object , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , object , string , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , object , string , bool , struct DataSourceUpdateMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , object , string , bool , struct DataSourceUpdateMode , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , object , string , bool , struct DataSourceUpdateMode , object , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , object , string , bool , struct DataSourceUpdateMode , object , string , class IFormatProvider )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance struct BindingMemberInfo get_BindingMemberInfo()" />
          <Method Sig="instance class IBindableComponent get_BindableComponent()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance class Control get_Control()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_IsBinding()" />
          <Method Sig="instance class BindingManagerBase get_BindingManagerBase()" />
          <Method Sig="instance string get_PropertyName()" />
          <Method Sig="instance void add_BindingComplete(class BindingCompleteEventHandler )" />
          <Method Sig="instance void remove_BindingComplete(class BindingCompleteEventHandler )" />
          <Method Sig="instance void add_Parse(class ConvertEventHandler )" />
          <Method Sig="instance void remove_Parse(class ConvertEventHandler )" />
          <Method Sig="instance void add_Format(class ConvertEventHandler )" />
          <Method Sig="instance void remove_Format(class ConvertEventHandler )" />
          <Method Sig="instance bool get_FormattingEnabled()" />
          <Method Sig="instance void set_FormattingEnabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IFormatProvider get_FormatInfo()" />
          <Method Sig="instance void set_FormatInfo(class IFormatProvider )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_FormatString()" />
          <Method Sig="instance void set_FormatString(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_NullValue()" />
          <Method Sig="instance void set_NullValue(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_DataSourceNullValue()" />
          <Method Sig="instance void set_DataSourceNullValue(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ControlUpdateMode get_ControlUpdateMode()" />
          <Method Sig="instance void set_ControlUpdateMode(struct ControlUpdateMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataSourceUpdateMode get_DataSourceUpdateMode()" />
          <Method Sig="instance void set_DataSourceUpdateMode(struct DataSourceUpdateMode )" />
          <Method Sig="instance void ReadValue()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void WriteValue()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="BindingCompleteEventArgs">
          <Method Sig="instance void .ctor(class Binding , struct BindingCompleteState , struct BindingCompleteContext , string , class Exception , bool )" />
          <Method Sig="instance void .ctor(class Binding , struct BindingCompleteState , struct BindingCompleteContext , string , class Exception )" />
          <Method Sig="instance void .ctor(class Binding , struct BindingCompleteState , struct BindingCompleteContext , string )" />
          <Method Sig="instance void .ctor(class Binding , struct BindingCompleteState , struct BindingCompleteContext )" />
          <Method Sig="instance class Binding get_Binding()" />
          <Method Sig="instance struct BindingCompleteState get_BindingCompleteState()" />
          <Method Sig="instance struct BindingCompleteContext get_BindingCompleteContext()" />
          <Method Sig="instance string get_ErrorText()" />
          <Method Sig="instance class Exception get_Exception()" />
        </Type>
        <Type Name="BindingCompleteEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class BindingCompleteEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class BindingCompleteEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="BindingContext">
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance class BindingManagerBase get_Item(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class BindingManagerBase get_Item(object , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance bool Contains(object )" />
          <Method Sig="instance bool Contains(object , string )" />
          <Method Sig="void UpdateBinding(class BindingContext , class Binding )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="BindingManagerBase">
          <Method Sig="instance class BindingsCollection get_Bindings()" />
          <Method Sig="instance object get_Current()" />
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance class PropertyDescriptorCollection GetItemProperties()" />
          <Method Sig="instance void add_BindingComplete(class BindingCompleteEventHandler )" />
          <Method Sig="instance void remove_BindingComplete(class BindingCompleteEventHandler )" />
          <Method Sig="instance void add_CurrentChanged(class EventHandler )" />
          <Method Sig="instance void remove_CurrentChanged(class EventHandler )" />
          <Method Sig="instance void add_CurrentItemChanged(class EventHandler )" />
          <Method Sig="instance void remove_CurrentItemChanged(class EventHandler )" />
          <Method Sig="instance void add_DataError(class BindingManagerDataErrorEventHandler )" />
          <Method Sig="instance void remove_DataError(class BindingManagerDataErrorEventHandler )" />
          <Method Sig="instance void CancelCurrentEdit()" />
          <Method Sig="instance void EndCurrentEdit()" />
          <Method Sig="instance void AddNew()" />
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance int get_Position()" />
          <Method Sig="instance void set_Position(int )" />
          <Method Sig="instance void add_PositionChanged(class EventHandler )" />
          <Method Sig="instance void remove_PositionChanged(class EventHandler )" />
          <Method Sig="instance void SuspendBinding()" />
          <Method Sig="instance void ResumeBinding()" />
          <Method Sig="instance bool get_IsBindingSuspended()" />
          <Method Sig="instance int get_Count()" />
        </Type>
        <Type Name="BindingManagerDataErrorEventArgs">
          <Method Sig="instance void .ctor(class Exception )" />
          <Method Sig="instance class Exception get_Exception()" />
        </Type>
        <Type Name="BindingManagerDataErrorEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class BindingManagerDataErrorEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class BindingManagerDataErrorEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="BindingMemberInfo">
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance string get_BindingPath()" />
          <Method Sig="instance string get_BindingField()" />
          <Method Sig="instance string get_BindingMember()" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="bool op_Equality(struct BindingMemberInfo , struct BindingMemberInfo )" />
          <Method Sig="bool op_Inequality(struct BindingMemberInfo , struct BindingMemberInfo )" />
          <Method Sig="instance int GetHashCode()" />
        </Type>
        <Type Name="ToolStrip">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor([] class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance bool get_AutoScroll()" />
          <Method Sig="instance void set_AutoScroll(bool )" />
          <Method Sig="instance struct Size get_AutoScrollMargin()" />
          <Method Sig="instance void set_AutoScrollMargin(struct Size )" />
          <Method Sig="instance struct Size get_AutoScrollMinSize()" />
          <Method Sig="instance void set_AutoScrollMinSize(struct Size )" />
          <Method Sig="instance struct Point get_AutoScrollPosition()" />
          <Method Sig="instance void set_AutoScrollPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowItemReorder()" />
          <Method Sig="instance void set_AllowItemReorder(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowMerge()" />
          <Method Sig="instance void set_AllowMerge(bool )" />
          <Method Sig="instance struct AnchorStyles get_Anchor()" />
          <Method Sig="instance void set_Anchor(struct AnchorStyles )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BeginDrag(class EventHandler )" />
          <Method Sig="instance void remove_BeginDrag(class EventHandler )" />
          <Method Sig="instance class BindingContext get_BindingContext()" />
          <Method Sig="instance void set_BindingContext(class BindingContext )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CanOverflow()" />
          <Method Sig="instance void set_CanOverflow(bool )" />
          <Method Sig="instance bool get_CausesValidation()" />
          <Method Sig="instance void set_CausesValidation(bool )" />
          <Method Sig="instance void add_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance void remove_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance class ControlCollection get_Controls()" />
          <Method Sig="instance void add_ControlAdded(class ControlEventHandler )" />
          <Method Sig="instance void remove_ControlAdded(class ControlEventHandler )" />
          <Method Sig="instance class Cursor get_Cursor()" />
          <Method Sig="instance void set_Cursor(class Cursor )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CursorChanged(class EventHandler )" />
          <Method Sig="instance void remove_CursorChanged(class EventHandler )" />
          <Method Sig="instance void add_ControlRemoved(class ControlEventHandler )" />
          <Method Sig="instance void remove_ControlRemoved(class ControlEventHandler )" />
          <Method Sig="instance void add_EndDrag(class EventHandler )" />
          <Method Sig="instance void remove_EndDrag(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance struct ToolStripDropDownDirection get_DefaultDropDownDirection()" />
          <Method Sig="instance void set_DefaultDropDownDirection(struct ToolStripDropDownDirection )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_DisplayRectangle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance struct ToolStripGripStyle get_GripStyle()" />
          <Method Sig="instance void set_GripStyle(struct ToolStripGripStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolStripGripDisplayStyle get_GripDisplayStyle()" />
          <Method Sig="instance struct Padding get_GripMargin()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_GripMargin(struct Padding )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_GripRectangle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_HasChildren()" />
          <Method Sig="instance class HScrollProperties get_HorizontalScroll()" />
          <Method Sig="instance struct Size get_ImageScalingSize()" />
          <Method Sig="instance void set_ImageScalingSize(struct Size )" />
          <Method Sig="instance class ImageList get_ImageList()" />
          <Method Sig="instance void set_ImageList(class ImageList )" />
          <Method Sig="instance bool get_IsCurrentlyDragging()" />
          <Method Sig="instance class ToolStripItemCollection get_Items()" />
          <Method Sig="instance void add_ItemAdded(class ToolStripItemEventHandler )" />
          <Method Sig="instance void remove_ItemAdded(class ToolStripItemEventHandler )" />
          <Method Sig="instance void add_ItemClicked(class ToolStripItemClickedEventHandler )" />
          <Method Sig="instance void remove_ItemClicked(class ToolStripItemClickedEventHandler )" />
          <Method Sig="instance void add_ItemRemoved(class ToolStripItemEventHandler )" />
          <Method Sig="instance void remove_ItemRemoved(class ToolStripItemEventHandler )" />
          <Method Sig="instance bool get_IsDropDown()" />
          <Method Sig="instance class LayoutSettings get_LayoutSettings()" />
          <Method Sig="instance void set_LayoutSettings(class LayoutSettings )" />
          <Method Sig="instance struct ToolStripLayoutStyle get_LayoutStyle()" />
          <Method Sig="instance void set_LayoutStyle(struct ToolStripLayoutStyle )" />
          <Method Sig="instance void add_LayoutCompleted(class EventHandler )" />
          <Method Sig="instance void remove_LayoutCompleted(class EventHandler )" />
          <Method Sig="instance void add_LayoutStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_LayoutStyleChanged(class EventHandler )" />
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance class ToolStripOverflowButton get_OverflowButton()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Orientation get_Orientation()" />
          <Method Sig="instance void add_PaintGrip(class PaintEventHandler )" />
          <Method Sig="instance void remove_PaintGrip(class PaintEventHandler )" />
          <Method Sig="instance bool get_Stretch()" />
          <Method Sig="instance void set_Stretch(bool )" />
          <Method Sig="instance class ToolStripRenderer get_Renderer()" />
          <Method Sig="instance void set_Renderer(class ToolStripRenderer )" />
          <Method Sig="instance void add_RendererChanged(class EventHandler )" />
          <Method Sig="instance void remove_RendererChanged(class EventHandler )" />
          <Method Sig="instance struct ToolStripRenderMode get_RenderMode()" />
          <Method Sig="instance void set_RenderMode(struct ToolStripRenderMode )" />
          <Method Sig="instance bool get_ShowItemToolTips()" />
          <Method Sig="instance void set_ShowItemToolTips(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolStripTextDirection get_TextDirection()" />
          <Method Sig="instance void set_TextDirection(struct ToolStripTextDirection )" />
          <Method Sig="instance class VScrollProperties get_VerticalScroll()" />
          <Method Sig="instance class ToolStripItem GetNextItem(class ToolStripItem , struct ArrowDirection )" />
          <Method Sig="instance class Control GetChildAtPoint(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Control GetChildAtPoint(struct Point , struct GetChildAtPointSkip )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem GetItemAt(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem GetItemAt(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetMinimumSize()" />
          <Method Sig="instance void SetAutoScrollMargin(int , int )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripItem">
          <Method Sig="instance class AccessibleObject get_AccessibilityObject()" />
          <Method Sig="instance string get_AccessibleDefaultActionDescription()" />
          <Method Sig="instance void set_AccessibleDefaultActionDescription(string )" />
          <Method Sig="instance string get_AccessibleDescription()" />
          <Method Sig="instance void set_AccessibleDescription(string )" />
          <Method Sig="instance string get_AccessibleName()" />
          <Method Sig="instance void set_AccessibleName(string )" />
          <Method Sig="instance struct AccessibleRole get_AccessibleRole()" />
          <Method Sig="instance void set_AccessibleRole(struct AccessibleRole )" />
          <Method Sig="instance struct ToolStripItemAlignment get_Alignment()" />
          <Method Sig="instance void set_Alignment(struct ToolStripItemAlignment )" />
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance bool get_AutoToolTip()" />
          <Method Sig="instance void set_AutoToolTip(bool )" />
          <Method Sig="instance bool get_Available()" />
          <Method Sig="instance void set_Available(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AvailableChanged(class EventHandler )" />
          <Method Sig="instance void remove_AvailableChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance struct Rectangle get_ContentRectangle()" />
          <Method Sig="instance bool get_CanSelect()" />
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance struct AnchorStyles get_Anchor()" />
          <Method Sig="instance void set_Anchor(struct AnchorStyles )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )" />
          <Method Sig="instance struct ToolStripItemDisplayStyle get_DisplayStyle()" />
          <Method Sig="instance void set_DisplayStyle(struct ToolStripItemDisplayStyle )" />
          <Method Sig="instance void add_DisplayStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_DisplayStyleChanged(class EventHandler )" />
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance bool get_DoubleClickEnabled()" />
          <Method Sig="instance void set_DoubleClickEnabled(bool )" />
          <Method Sig="instance void add_DragDrop(class DragEventHandler )" />
          <Method Sig="instance void remove_DragDrop(class DragEventHandler )" />
          <Method Sig="instance void add_DragEnter(class DragEventHandler )" />
          <Method Sig="instance void remove_DragEnter(class DragEventHandler )" />
          <Method Sig="instance void add_DragOver(class DragEventHandler )" />
          <Method Sig="instance void remove_DragOver(class DragEventHandler )" />
          <Method Sig="instance void add_DragLeave(class EventHandler )" />
          <Method Sig="instance void remove_DragLeave(class EventHandler )" />
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_EnabledChanged(class EventHandler )" />
          <Method Sig="instance void remove_EnabledChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_GiveFeedback(class GiveFeedbackEventHandler )" />
          <Method Sig="instance void remove_GiveFeedback(class GiveFeedbackEventHandler )" />
          <Method Sig="instance int get_Height()" />
          <Method Sig="instance void set_Height(int )" />
          <Method Sig="instance struct ContentAlignment get_ImageAlign()" />
          <Method Sig="instance void set_ImageAlign(struct ContentAlignment )" />
          <Method Sig="instance class Image get_Image()" />
          <Method Sig="instance void set_Image(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ImageTransparentColor()" />
          <Method Sig="instance void set_ImageTransparentColor(struct Color )" />
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )" />
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )" />
          <Method Sig="instance struct ToolStripItemImageScaling get_ImageScaling()" />
          <Method Sig="instance void set_ImageScaling(struct ToolStripItemImageScaling )" />
          <Method Sig="instance bool get_IsDisposed()" />
          <Method Sig="instance bool get_IsOnDropDown()" />
          <Method Sig="instance bool get_IsOnOverflow()" />
          <Method Sig="instance void add_LocationChanged(class EventHandler )" />
          <Method Sig="instance void remove_LocationChanged(class EventHandler )" />
          <Method Sig="instance struct Padding get_Margin()" />
          <Method Sig="instance void set_Margin(struct Padding )" />
          <Method Sig="instance struct MergeAction get_MergeAction()" />
          <Method Sig="instance void set_MergeAction(struct MergeAction )" />
          <Method Sig="instance int get_MergeIndex()" />
          <Method Sig="instance void set_MergeIndex(int )" />
          <Method Sig="instance void add_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseEnter(class EventHandler )" />
          <Method Sig="instance void remove_MouseEnter(class EventHandler )" />
          <Method Sig="instance void add_MouseLeave(class EventHandler )" />
          <Method Sig="instance void remove_MouseLeave(class EventHandler )" />
          <Method Sig="instance void add_MouseHover(class EventHandler )" />
          <Method Sig="instance void remove_MouseHover(class EventHandler )" />
          <Method Sig="instance void add_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance class ToolStrip get_Owner()" />
          <Method Sig="instance void set_Owner(class ToolStrip )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_OwnerItem()" />
          <Method Sig="instance void add_OwnerChanged(class EventHandler )" />
          <Method Sig="instance void remove_OwnerChanged(class EventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance struct ToolStripItemOverflow get_Overflow()" />
          <Method Sig="instance void set_Overflow(struct ToolStripItemOverflow )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance struct ToolStripItemPlacement get_Placement()" />
          <Method Sig="instance bool get_Pressed()" />
          <Method Sig="instance void add_QueryContinueDrag(class QueryContinueDragEventHandler )" />
          <Method Sig="instance void remove_QueryContinueDrag(class QueryContinueDragEventHandler )" />
          <Method Sig="instance void add_QueryAccessibilityHelp(class QueryAccessibilityHelpEventHandler )" />
          <Method Sig="instance void remove_QueryAccessibilityHelp(class QueryAccessibilityHelpEventHandler )" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )" />
          <Method Sig="instance bool get_RightToLeftAutoMirrorImage()" />
          <Method Sig="instance void set_RightToLeftAutoMirrorImage(bool )" />
          <Method Sig="instance void add_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance bool get_Selected()" />
          <Method Sig="instance struct Size get_Size()" />
          <Method Sig="instance void set_Size(struct Size )" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance struct ContentAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct ContentAlignment )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance struct ToolStripTextDirection get_TextDirection()" />
          <Method Sig="instance void set_TextDirection(struct ToolStripTextDirection )" />
          <Method Sig="instance struct TextImageRelation get_TextImageRelation()" />
          <Method Sig="instance void set_TextImageRelation(struct TextImageRelation )" />
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance void set_ToolTipText(string )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_VisibleChanged(class EventHandler )" />
          <Method Sig="instance void remove_VisibleChanged(class EventHandler )" />
          <Method Sig="instance int get_Width()" />
          <Method Sig="instance void set_Width(int )" />
          <Method Sig="instance struct DragDropEffects DoDragDrop(object , struct DragDropEffects )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStrip GetCurrentParent()" />
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
          <Method Sig="instance void Invalidate()" />
          <Method Sig="instance void Invalidate(struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PerformClick()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Select()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetBackColor()" />
          <Method Sig="instance void ResetDisplayStyle()" />
          <Method Sig="instance void ResetForeColor()" />
          <Method Sig="instance void ResetFont()" />
          <Method Sig="instance void ResetImage()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetMargin()" />
          <Method Sig="instance void ResetPadding()" />
          <Method Sig="instance void ResetRightToLeft()" />
          <Method Sig="instance void ResetTextDirection()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="BindingNavigator">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class BindingSource )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class IContainer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void BeginInit()" />
          <Method Sig="instance void EndInit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddStandardItems()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class BindingSource get_BindingSource()" />
          <Method Sig="instance void set_BindingSource(class BindingSource )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_MoveFirstItem()" />
          <Method Sig="instance void set_MoveFirstItem(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_MovePreviousItem()" />
          <Method Sig="instance void set_MovePreviousItem(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_MoveNextItem()" />
          <Method Sig="instance void set_MoveNextItem(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_MoveLastItem()" />
          <Method Sig="instance void set_MoveLastItem(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_AddNewItem()" />
          <Method Sig="instance void set_AddNewItem(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_DeleteItem()" />
          <Method Sig="instance void set_DeleteItem(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_PositionItem()" />
          <Method Sig="instance void set_PositionItem(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_CountItem()" />
          <Method Sig="instance void set_CountItem(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_CountItemFormat()" />
          <Method Sig="instance void set_CountItemFormat(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RefreshItems(class EventHandler )" />
          <Method Sig="instance void remove_RefreshItems(class EventHandler )" />
          <Method Sig="instance bool Validate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="BindingsCollection">
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class Binding get_Item(int )" />
          <Method Sig="instance void add_CollectionChanging(class CollectionChangeEventHandler )" />
          <Method Sig="instance void remove_CollectionChanging(class CollectionChangeEventHandler )" />
          <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
        </Type>
        <Type Name="BindingSource">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(object , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class IContainer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class CurrencyManager get_CurrencyManager()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class CurrencyManager GetRelatedCurrencyManager(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Current()" />
          <Method Sig="instance string get_DataMember()" />
          <Method Sig="instance void set_DataMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance void set_DataSource(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsBindingSuspended()" />
          <Method Sig="instance class IList get_List()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Position()" />
          <Method Sig="instance void set_Position(int )" />
          <Method Sig="instance bool get_RaiseListChangedEvents()" />
          <Method Sig="instance void set_RaiseListChangedEvents(bool )" />
          <Method Sig="instance string get_Sort()" />
          <Method Sig="instance void set_Sort(string )" />
          <Method Sig="instance void add_AddingNew(class AddingNewEventHandler )" />
          <Method Sig="instance void remove_AddingNew(class AddingNewEventHandler )" />
          <Method Sig="instance void add_BindingComplete(class BindingCompleteEventHandler )" />
          <Method Sig="instance void remove_BindingComplete(class BindingCompleteEventHandler )" />
          <Method Sig="instance void add_DataError(class BindingManagerDataErrorEventHandler )" />
          <Method Sig="instance void remove_DataError(class BindingManagerDataErrorEventHandler )" />
          <Method Sig="instance void add_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance void remove_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance void add_DataMemberChanged(class EventHandler )" />
          <Method Sig="instance void remove_DataMemberChanged(class EventHandler )" />
          <Method Sig="instance void add_CurrentChanged(class EventHandler )" />
          <Method Sig="instance void remove_CurrentChanged(class EventHandler )" />
          <Method Sig="instance void add_CurrentItemChanged(class EventHandler )" />
          <Method Sig="instance void remove_CurrentItemChanged(class EventHandler )" />
          <Method Sig="instance void add_ListChanged(class ListChangedEventHandler )" />
          <Method Sig="instance void remove_ListChanged(class ListChangedEventHandler )" />
          <Method Sig="instance void add_PositionChanged(class EventHandler )" />
          <Method Sig="instance void remove_PositionChanged(class EventHandler )" />
          <Method Sig="instance void CancelEdit()" />
          <Method Sig="instance void EndEdit()" />
          <Method Sig="instance int Find(string , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void MoveFirst()" />
          <Method Sig="instance void MoveLast()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void MoveNext()" />
          <Method Sig="instance void MovePrevious()" />
          <Method Sig="instance void RemoveCurrent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetAllowNew()" />
          <Method Sig="instance void ResetBindings(bool )" />
          <Method Sig="instance void ResetCurrentItem()" />
          <Method Sig="instance void ResetItem(int )" />
          <Method Sig="instance void ResumeBinding()" />
          <Method Sig="instance void SuspendBinding()" />
          <Method Sig="instance class IEnumerator GetEnumerator()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void CopyTo(class Array , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Count()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsSynchronized()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_SyncRoot()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Add(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Contains(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int IndexOf(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Insert(int , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Remove(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAt(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Item(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Item(int , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsFixedSize()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsReadOnly()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string GetListName([] class PropertyDescriptor )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class PropertyDescriptorCollection GetItemProperties([] class PropertyDescriptor )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object AddNew()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowNew()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_AllowNew(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowRemove()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_SupportsChangeNotification()" />
          <Method Sig="instance bool get_SupportsSearching()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_SupportsSorting()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsSorted()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class PropertyDescriptor get_SortProperty()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ListSortDirection get_SortDirection()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ApplySort(class PropertyDescriptor , struct ListSortDirection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Find(class PropertyDescriptor , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveSort()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ApplySort(class ListSortDescriptionCollection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListSortDescriptionCollection get_SortDescriptions()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Filter()" />
          <Method Sig="instance void set_Filter(string )" />
          <Method Sig="instance void RemoveFilter()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_SupportsAdvancedSorting()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_SupportsFiltering()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ButtonBase">
          <Method Sig="instance bool get_AutoEllipsis()" />
          <Method Sig="instance void set_AutoEllipsis(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class FlatButtonAppearance get_FlatAppearance()" />
          <Method Sig="instance class Image get_Image()" />
          <Method Sig="instance void set_Image(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ContentAlignment get_ImageAlign()" />
          <Method Sig="instance void set_ImageAlign(struct ContentAlignment )" />
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )" />
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )" />
          <Method Sig="instance class ImageList get_ImageList()" />
          <Method Sig="instance void set_ImageList(class ImageList )" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance struct ContentAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct ContentAlignment )" />
          <Method Sig="instance struct TextImageRelation get_TextImageRelation()" />
          <Method Sig="instance void set_TextImageRelation(struct TextImageRelation )" />
          <Method Sig="instance bool get_UseMnemonic()" />
          <Method Sig="instance void set_UseMnemonic(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
          <Method Sig="instance bool get_UseCompatibleTextRendering()" />
          <Method Sig="instance void set_UseCompatibleTextRendering(bool )" />
          <Method Sig="instance bool get_UseVisualStyleBackColor()" />
          <Method Sig="instance void set_UseVisualStyleBackColor(bool )" />
        </Type>
        <Type Name="Button">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoSizeMode get_AutoSizeMode()" />
          <Method Sig="instance void set_AutoSizeMode(struct AutoSizeMode )" />
          <Method Sig="instance struct DialogResult get_DialogResult()" />
          <Method Sig="instance void set_DialogResult(struct DialogResult )" />
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void NotifyDefault(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PerformClick()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="ButtonRenderer">
          <Method Sig="bool get_RenderMatchingApplicationState()" />
          <Method Sig="void set_RenderMatchingApplicationState(bool )" />
          <Method Sig="bool IsBackgroundPartiallyTransparent(struct PushButtonState )" />
          <Method Sig="void DrawParentBackground(class Graphics , struct Rectangle , class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void DrawButton(class Graphics , struct Rectangle , struct PushButtonState )" />
          <Method Sig="void DrawButton(class Graphics , struct Rectangle , bool , struct PushButtonState )" />
          <Method Sig="void DrawButton(class Graphics , struct Rectangle , string , class Font , bool , struct PushButtonState )" />
          <Method Sig="void DrawButton(class Graphics , struct Rectangle , string , class Font , struct TextFormatFlags , bool , struct PushButtonState )" />
          <Method Sig="void DrawButton(class Graphics , struct Rectangle , class Image , struct Rectangle , bool , struct PushButtonState )" />
          <Method Sig="void DrawButton(class Graphics , struct Rectangle , string , class Font , class Image , struct Rectangle , bool , struct PushButtonState )" />
          <Method Sig="void DrawButton(class Graphics , struct Rectangle , string , class Font , struct TextFormatFlags , class Image , struct Rectangle , bool , struct PushButtonState )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="CacheVirtualItemsEventArgs">
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance int get_StartIndex()" />
          <Method Sig="instance int get_EndIndex()" />
        </Type>
        <Type Name="CacheVirtualItemsEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class CacheVirtualItemsEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class CacheVirtualItemsEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="CheckBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Appearance get_Appearance()" />
          <Method Sig="instance void set_Appearance(struct Appearance )" />
          <Method Sig="instance void add_AppearanceChanged(class EventHandler )" />
          <Method Sig="instance void remove_AppearanceChanged(class EventHandler )" />
          <Method Sig="instance bool get_AutoCheck()" />
          <Method Sig="instance void set_AutoCheck(bool )" />
          <Method Sig="instance struct ContentAlignment get_CheckAlign()" />
          <Method Sig="instance void set_CheckAlign(struct ContentAlignment )" />
          <Method Sig="instance bool get_Checked()" />
          <Method Sig="instance void set_Checked(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct CheckState get_CheckState()" />
          <Method Sig="instance void set_CheckState(struct CheckState )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance struct ContentAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct ContentAlignment )" />
          <Method Sig="instance bool get_ThreeState()" />
          <Method Sig="instance void set_ThreeState(bool )" />
          <Method Sig="instance void add_CheckedChanged(class EventHandler )" />
          <Method Sig="instance void remove_CheckedChanged(class EventHandler )" />
          <Method Sig="instance void add_CheckStateChanged(class EventHandler )" />
          <Method Sig="instance void remove_CheckStateChanged(class EventHandler )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="CheckBoxRenderer">
          <Method Sig="bool get_RenderMatchingApplicationState()" />
          <Method Sig="void set_RenderMatchingApplicationState(bool )" />
          <Method Sig="bool IsBackgroundPartiallyTransparent(struct CheckBoxState )" />
          <Method Sig="void DrawParentBackground(class Graphics , struct Rectangle , class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void DrawCheckBox(class Graphics , struct Point , struct CheckBoxState )" />
          <Method Sig="void DrawCheckBox(class Graphics , struct Point , struct Rectangle , string , class Font , bool , struct CheckBoxState )" />
          <Method Sig="void DrawCheckBox(class Graphics , struct Point , struct Rectangle , string , class Font , struct TextFormatFlags , bool , struct CheckBoxState )" />
          <Method Sig="void DrawCheckBox(class Graphics , struct Point , struct Rectangle , string , class Font , class Image , struct Rectangle , bool , struct CheckBoxState )" />
          <Method Sig="void DrawCheckBox(class Graphics , struct Point , struct Rectangle , string , class Font , struct TextFormatFlags , class Image , struct Rectangle , bool , struct CheckBoxState )" />
          <Method Sig="struct Size GetGlyphSize(class Graphics , struct CheckBoxState )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ListControl">
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance void set_DataSource(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance void remove_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance string get_DisplayMember()" />
          <Method Sig="instance void set_DisplayMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DisplayMemberChanged(class EventHandler )" />
          <Method Sig="instance void remove_DisplayMemberChanged(class EventHandler )" />
          <Method Sig="instance void add_Format(class ListControlConvertEventHandler )" />
          <Method Sig="instance void remove_Format(class ListControlConvertEventHandler )" />
          <Method Sig="instance class IFormatProvider get_FormatInfo()" />
          <Method Sig="instance void set_FormatInfo(class IFormatProvider )" />
          <Method Sig="instance void add_FormatInfoChanged(class EventHandler )" />
          <Method Sig="instance void remove_FormatInfoChanged(class EventHandler )" />
          <Method Sig="instance string get_FormatString()" />
          <Method Sig="instance void set_FormatString(string )" />
          <Method Sig="instance void add_FormatStringChanged(class EventHandler )" />
          <Method Sig="instance void remove_FormatStringChanged(class EventHandler )" />
          <Method Sig="instance bool get_FormattingEnabled()" />
          <Method Sig="instance void set_FormattingEnabled(bool )" />
          <Method Sig="instance void add_FormattingEnabledChanged(class EventHandler )" />
          <Method Sig="instance void remove_FormattingEnabledChanged(class EventHandler )" />
          <Method Sig="instance string get_ValueMember()" />
          <Method Sig="instance void set_ValueMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ValueMemberChanged(class EventHandler )" />
          <Method Sig="instance void remove_ValueMemberChanged(class EventHandler )" />
          <Method Sig="instance int get_SelectedIndex()" />
          <Method Sig="instance void set_SelectedIndex(int )" />
          <Method Sig="instance object get_SelectedValue()" />
          <Method Sig="instance void set_SelectedValue(object )" />
          <Method Sig="instance void add_SelectedValueChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectedValueChanged(class EventHandler )" />
          <Method Sig="instance string GetItemText(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ListBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ColumnWidth()" />
          <Method Sig="instance void set_ColumnWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseCustomTabOffsets()" />
          <Method Sig="instance void set_UseCustomTabOffsets(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DrawMode get_DrawMode()" />
          <Method Sig="instance void set_DrawMode(struct DrawMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance int get_HorizontalExtent()" />
          <Method Sig="instance void set_HorizontalExtent(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_HorizontalScrollbar()" />
          <Method Sig="instance void set_HorizontalScrollbar(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IntegralHeight()" />
          <Method Sig="instance void set_IntegralHeight(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ItemHeight()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_ItemHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ObjectCollection get_Items()" />
          <Method Sig="instance bool get_MultiColumn()" />
          <Method Sig="instance void set_MultiColumn(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_PreferredHeight()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ScrollAlwaysVisible()" />
          <Method Sig="instance void set_ScrollAlwaysVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectedIndex()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SelectedIndexCollection get_SelectedIndices()" />
          <Method Sig="instance object get_SelectedItem()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedItem(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SelectedObjectCollection get_SelectedItems()" />
          <Method Sig="instance struct SelectionMode get_SelectionMode()" />
          <Method Sig="instance void set_SelectionMode(struct SelectionMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Sorted()" />
          <Method Sig="instance void set_Sorted(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance int get_TopIndex()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_TopIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseTabStops()" />
          <Method Sig="instance void set_UseTabStops(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IntegerCollection get_CustomTabOffsets()" />
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void add_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void remove_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void add_MeasureItem(class MeasureItemEventHandler )" />
          <Method Sig="instance void remove_MeasureItem(class MeasureItemEventHandler )" />
          <Method Sig="instance void add_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance void BeginUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ClearSelected()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EndUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindString(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindString(string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindStringExact(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindStringExact(string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetItemHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle GetItemRectangle(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool GetSelected(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int IndexFromPoint(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int IndexFromPoint(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Refresh()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetBackColor()" />
          <Method Sig="instance void ResetForeColor()" />
          <Method Sig="instance void SetSelected(int , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="CheckedListBox">
          <Method Sig="void .cctor()" />
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CheckOnClick()" />
          <Method Sig="instance void set_CheckOnClick(bool )" />
          <Method Sig="instance class CheckedIndexCollection get_CheckedIndices()" />
          <Method Sig="instance class CheckedItemCollection get_CheckedItems()" />
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance void set_DataSource(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_DisplayMember()" />
          <Method Sig="instance void set_DisplayMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DrawMode get_DrawMode()" />
          <Method Sig="instance void set_DrawMode(struct DrawMode )" />
          <Method Sig="instance int get_ItemHeight()" />
          <Method Sig="instance void set_ItemHeight(int )" />
          <Method Sig="instance class ObjectCollection get_Items()" />
          <Method Sig="instance struct SelectionMode get_SelectionMode()" />
          <Method Sig="instance void set_SelectionMode(struct SelectionMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ThreeDCheckBoxes()" />
          <Method Sig="instance void set_ThreeDCheckBoxes(bool )" />
          <Method Sig="instance bool get_UseCompatibleTextRendering()" />
          <Method Sig="instance void set_UseCompatibleTextRendering(bool )" />
          <Method Sig="instance string get_ValueMember()" />
          <Method Sig="instance void set_ValueMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance void remove_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance void add_DisplayMemberChanged(class EventHandler )" />
          <Method Sig="instance void remove_DisplayMemberChanged(class EventHandler )" />
          <Method Sig="instance void add_ItemCheck(class ItemCheckEventHandler )" />
          <Method Sig="instance void remove_ItemCheck(class ItemCheckEventHandler )" />
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void add_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void remove_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void add_MeasureItem(class MeasureItemEventHandler )" />
          <Method Sig="instance void remove_MeasureItem(class MeasureItemEventHandler )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_ValueMemberChanged(class EventHandler )" />
          <Method Sig="instance void remove_ValueMemberChanged(class EventHandler )" />
          <Method Sig="instance struct CheckState GetItemCheckState(int )" />
          <Method Sig="instance bool GetItemChecked(int )" />
          <Method Sig="instance void SetItemCheckState(int , struct CheckState )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetItemChecked(int , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="Clipboard">
          <Method Sig="void SetDataObject(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetDataObject(object , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetDataObject(object , bool , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class IDataObject GetDataObject()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool ContainsAudio()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool ContainsData(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool ContainsFileDropList()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool ContainsImage()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool ContainsText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool ContainsText(struct TextDataFormat )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class Stream GetAudioStream()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="object GetData(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class StringCollection GetFileDropList()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class Image GetImage()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="string GetText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="string GetText(struct TextDataFormat )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetAudio([] byte )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetAudio(class Stream )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetData(string , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetFileDropList(class StringCollection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetImage(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SetText(string , struct TextDataFormat )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="CommonDialog">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance void add_HelpRequest(class EventHandler )" />
          <Method Sig="instance void remove_HelpRequest(class EventHandler )" />
          <Method Sig="instance void Reset()" />
          <Method Sig="instance struct DialogResult ShowDialog()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DialogResult ShowDialog(class IWin32Window )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ColorDialog">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_AllowFullOpen()" />
          <Method Sig="instance void set_AllowFullOpen(bool )" />
          <Method Sig="instance bool get_AnyColor()" />
          <Method Sig="instance void set_AnyColor(bool )" />
          <Method Sig="instance struct Color get_Color()" />
          <Method Sig="instance void set_Color(struct Color )" />
          <Method Sig="instance [] int get_CustomColors()" />
          <Method Sig="instance void set_CustomColors([] int )" />
          <Method Sig="instance bool get_FullOpen()" />
          <Method Sig="instance void set_FullOpen(bool )" />
          <Method Sig="instance bool get_ShowHelp()" />
          <Method Sig="instance void set_ShowHelp(bool )" />
          <Method Sig="instance bool get_SolidColorOnly()" />
          <Method Sig="instance void set_SolidColorOnly(bool )" />
          <Method Sig="instance void Reset()" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="ColumnClickEventArgs">
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance int get_Column()" />
        </Type>
        <Type Name="ColumnClickEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ColumnClickEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ColumnClickEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ColumnHeader">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_DisplayIndex()" />
          <Method Sig="instance void set_DisplayIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Index()" />
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ImageList get_ImageList()" />
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListView get_ListView()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct HorizontalAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct HorizontalAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance int get_Width()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Width(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResize(struct ColumnHeaderAutoResizeStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="ImageList">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class IContainer )" />
          <Method Sig="instance struct ColorDepth get_ColorDepth()" />
          <Method Sig="instance void set_ColorDepth(struct ColorDepth )" />
          <Method Sig="instance intptr get_Handle()" />
          <Method Sig="instance bool get_HandleCreated()" />
          <Method Sig="instance class ImageCollection get_Images()" />
          <Method Sig="instance struct Size get_ImageSize()" />
          <Method Sig="instance void set_ImageSize(struct Size )" />
          <Method Sig="instance class ImageListStreamer get_ImageStream()" />
          <Method Sig="instance void set_ImageStream(class ImageListStreamer )" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance struct Color get_TransparentColor()" />
          <Method Sig="instance void set_TransparentColor(struct Color )" />
          <Method Sig="instance void add_RecreateHandle(class EventHandler )" />
          <Method Sig="instance void remove_RecreateHandle(class EventHandler )" />
          <Method Sig="instance void Draw(class Graphics , struct Point , int )" />
          <Method Sig="instance void Draw(class Graphics , int , int , int )" />
          <Method Sig="instance void Draw(class Graphics , int , int , int , int , int )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ColumnHeaderConverter">
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="ColumnReorderedEventArgs">
          <Method Sig="instance void .ctor(int , int , class ColumnHeader )" />
          <Method Sig="instance int get_OldDisplayIndex()" />
          <Method Sig="instance int get_NewDisplayIndex()" />
          <Method Sig="instance class ColumnHeader get_Header()" />
        </Type>
        <Type Name="ColumnReorderedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ColumnReorderedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ColumnReorderedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ColumnWidthChangedEventArgs">
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance int get_ColumnIndex()" />
        </Type>
        <Type Name="ColumnWidthChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ColumnWidthChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ColumnWidthChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ColumnWidthChangingEventArgs">
          <Method Sig="instance void .ctor(int , int , bool )" />
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance int get_NewWidth()" />
          <Method Sig="instance void set_NewWidth(int )" />
        </Type>
        <Type Name="ColumnWidthChangingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ColumnWidthChangingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ColumnWidthChangingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ComboBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoCompleteMode get_AutoCompleteMode()" />
          <Method Sig="instance void set_AutoCompleteMode(struct AutoCompleteMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoCompleteSource get_AutoCompleteSource()" />
          <Method Sig="instance void set_AutoCompleteSource(struct AutoCompleteSource )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class AutoCompleteStringCollection get_AutoCompleteCustomSource()" />
          <Method Sig="instance void set_AutoCompleteCustomSource(class AutoCompleteStringCollection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance void set_DataSource(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DrawMode get_DrawMode()" />
          <Method Sig="instance void set_DrawMode(struct DrawMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_DropDownWidth()" />
          <Method Sig="instance void set_DropDownWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_DropDownHeight()" />
          <Method Sig="instance void set_DropDownHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_DroppedDown()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_DroppedDown(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )" />
          <Method Sig="instance bool get_Focused()" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance bool get_IntegralHeight()" />
          <Method Sig="instance void set_IntegralHeight(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ItemHeight()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_ItemHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ObjectCollection get_Items()" />
          <Method Sig="instance int get_MaxDropDownItems()" />
          <Method Sig="instance void set_MaxDropDownItems(int )" />
          <Method Sig="instance struct Size get_MaximumSize()" />
          <Method Sig="instance void set_MaximumSize(struct Size )" />
          <Method Sig="instance struct Size get_MinimumSize()" />
          <Method Sig="instance void set_MinimumSize(struct Size )" />
          <Method Sig="instance int get_MaxLength()" />
          <Method Sig="instance void set_MaxLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance int get_PreferredHeight()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectedIndex()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_SelectedItem()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedItem(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_SelectedText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionLength()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionStart()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionStart(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Sorted()" />
          <Method Sig="instance void set_Sorted(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ComboBoxStyle get_DropDownStyle()" />
          <Method Sig="instance void set_DropDownStyle(struct ComboBoxStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void remove_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void add_DropDown(class EventHandler )" />
          <Method Sig="instance void remove_DropDown(class EventHandler )" />
          <Method Sig="instance void add_MeasureItem(class MeasureItemEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_MeasureItem(class MeasureItemEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance void add_SelectionChangeCommitted(class EventHandler )" />
          <Method Sig="instance void remove_SelectionChangeCommitted(class EventHandler )" />
          <Method Sig="instance void add_DropDownStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_DropDownStyleChanged(class EventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void add_TextUpdate(class EventHandler )" />
          <Method Sig="instance void remove_TextUpdate(class EventHandler )" />
          <Method Sig="instance void add_DropDownClosed(class EventHandler )" />
          <Method Sig="instance void remove_DropDownClosed(class EventHandler )" />
          <Method Sig="instance void BeginUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EndUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindString(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindString(string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindStringExact(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindStringExact(string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetItemHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetText()" />
          <Method Sig="instance void Select(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SelectAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ComboBoxRenderer">
          <Method Sig="bool get_IsSupported()" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , struct ComboBoxState )" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , string , class Font , struct ComboBoxState )" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , string , class Font , struct Rectangle , struct ComboBoxState )" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , string , class Font , struct TextFormatFlags , struct ComboBoxState )" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , string , class Font , struct Rectangle , struct TextFormatFlags , struct ComboBoxState )" />
          <Method Sig="void DrawDropDownButton(class Graphics , struct Rectangle , struct ComboBoxState )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="Menu">
          <Method Sig="instance intptr get_Handle()" />
          <Method Sig="instance bool get_IsParent()" />
          <Method Sig="instance class MenuItem get_MdiListItem()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance class MenuItemCollection get_MenuItems()" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance class MenuItem FindMenuItem(int , intptr )" />
          <Method Sig="instance class ContextMenu GetContextMenu()" />
          <Method Sig="instance class MainMenu GetMainMenu()" />
          <Method Sig="instance void MergeMenu(class Menu )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="ContextMenu">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor([] class MenuItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Control get_SourceControl()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Popup(class EventHandler )" />
          <Method Sig="instance void remove_Popup(class EventHandler )" />
          <Method Sig="instance void add_Collapse(class EventHandler )" />
          <Method Sig="instance void remove_Collapse(class EventHandler )" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )" />
          <Method Sig="instance void Show(class Control , struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(class Control , struct Point , struct LeftRightAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="ToolStripDropDown">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowItemReorder()" />
          <Method Sig="instance void set_AllowItemReorder(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowTransparency()" />
          <Method Sig="instance void set_AllowTransparency(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AnchorStyles get_Anchor()" />
          <Method Sig="instance void set_Anchor(struct AnchorStyles )" />
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance bool get_AutoClose()" />
          <Method Sig="instance void set_AutoClose(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void add_BindingContextChanged(class EventHandler )" />
          <Method Sig="instance void remove_BindingContextChanged(class EventHandler )" />
          <Method Sig="instance bool get_CanOverflow()" />
          <Method Sig="instance void set_CanOverflow(bool )" />
          <Method Sig="instance void add_ChangeUICues(class UICuesEventHandler )" />
          <Method Sig="instance void remove_ChangeUICues(class UICuesEventHandler )" />
          <Method Sig="instance class ContextMenu get_ContextMenu()" />
          <Method Sig="instance void set_ContextMenu(class ContextMenu )" />
          <Method Sig="instance void add_ContextMenuChanged(class EventHandler )" />
          <Method Sig="instance void remove_ContextMenuChanged(class EventHandler )" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance void add_ContextMenuStripChanged(class EventHandler )" />
          <Method Sig="instance void remove_ContextMenuStripChanged(class EventHandler )" />
          <Method Sig="instance struct ToolStripDropDownDirection get_DefaultDropDownDirection()" />
          <Method Sig="instance void set_DefaultDropDownDirection(struct ToolStripDropDownDirection )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DockChanged(class EventHandler )" />
          <Method Sig="instance void remove_DockChanged(class EventHandler )" />
          <Method Sig="instance bool get_DropShadowEnabled()" />
          <Method Sig="instance void set_DropShadowEnabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Closed(class ToolStripDropDownClosedEventHandler )" />
          <Method Sig="instance void remove_Closed(class ToolStripDropDownClosedEventHandler )" />
          <Method Sig="instance void add_Closing(class ToolStripDropDownClosingEventHandler )" />
          <Method Sig="instance void remove_Closing(class ToolStripDropDownClosingEventHandler )" />
          <Method Sig="instance void add_Enter(class EventHandler )" />
          <Method Sig="instance void remove_Enter(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void add_GiveFeedback(class GiveFeedbackEventHandler )" />
          <Method Sig="instance void remove_GiveFeedback(class GiveFeedbackEventHandler )" />
          <Method Sig="instance struct ToolStripGripDisplayStyle get_GripDisplayStyle()" />
          <Method Sig="instance struct Rectangle get_GripRectangle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Padding get_GripMargin()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_GripMargin(struct Padding )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolStripGripStyle get_GripStyle()" />
          <Method Sig="instance void set_GripStyle(struct ToolStripGripStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_HelpRequested(class HelpEventHandler )" />
          <Method Sig="instance void remove_HelpRequested(class HelpEventHandler )" />
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance bool get_IsAutoGenerated()" />
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void add_Leave(class EventHandler )" />
          <Method Sig="instance void remove_Leave(class EventHandler )" />
          <Method Sig="instance struct Point get_Location()" />
          <Method Sig="instance void set_Location(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Opening(class CancelEventHandler )" />
          <Method Sig="instance void remove_Opening(class CancelEventHandler )" />
          <Method Sig="instance void add_Opened(class EventHandler )" />
          <Method Sig="instance void remove_Opened(class EventHandler )" />
          <Method Sig="instance double get_Opacity()" />
          <Method Sig="instance void set_Opacity(double )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripOverflowButton get_OverflowButton()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_OwnerItem()" />
          <Method Sig="instance void set_OwnerItem(class ToolStripItem )" />
          <Method Sig="instance class Region get_Region()" />
          <Method Sig="instance void set_Region(class Region )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RegionChanged(class EventHandler )" />
          <Method Sig="instance void remove_RegionChanged(class EventHandler )" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Scroll(class ScrollEventHandler )" />
          <Method Sig="instance void remove_Scroll(class ScrollEventHandler )" />
          <Method Sig="instance bool get_Stretch()" />
          <Method Sig="instance void set_Stretch(bool )" />
          <Method Sig="instance void add_StyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_StyleChanged(class EventHandler )" />
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance struct ToolStripTextDirection get_TextDirection()" />
          <Method Sig="instance void set_TextDirection(struct ToolStripTextDirection )" />
          <Method Sig="instance bool get_TopLevel()" />
          <Method Sig="instance void set_TopLevel(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_TabIndex()" />
          <Method Sig="instance void set_TabIndex(int )" />
          <Method Sig="instance void add_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void add_Validated(class EventHandler )" />
          <Method Sig="instance void remove_Validated(class EventHandler )" />
          <Method Sig="instance void add_Validating(class CancelEventHandler )" />
          <Method Sig="instance void remove_Validating(class CancelEventHandler )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Close()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Close(struct ToolStripDropDownCloseReason )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(class Control , struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(class Control , struct Point , struct ToolStripDropDownDirection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(class Control , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(struct Point , struct ToolStripDropDownDirection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripDropDownMenu">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_DisplayRectangle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance struct ToolStripLayoutStyle get_LayoutStyle()" />
          <Method Sig="instance void set_LayoutStyle(struct ToolStripLayoutStyle )" />
          <Method Sig="instance bool get_ShowImageMargin()" />
          <Method Sig="instance void set_ShowImageMargin(bool )" />
          <Method Sig="instance bool get_ShowCheckMargin()" />
          <Method Sig="instance void set_ShowCheckMargin(bool )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ContextMenuStrip">
          <Method Sig="instance void .ctor(class IContainer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Control get_SourceControl()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="ControlBindingsCollection">
          <Method Sig="instance void .ctor(class IBindableComponent )" />
          <Method Sig="instance class IBindableComponent get_BindableComponent()" />
          <Method Sig="instance class Control get_Control()" />
          <Method Sig="instance class Binding get_Item(string )" />
          <Method Sig="instance void Add(class Binding )" />
          <Method Sig="instance class Binding Add(string , object , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Binding Add(string , object , string , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Binding Add(string , object , string , bool , struct DataSourceUpdateMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Binding Add(string , object , string , bool , struct DataSourceUpdateMode , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Binding Add(string , object , string , bool , struct DataSourceUpdateMode , object , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Binding Add(string , object , string , bool , struct DataSourceUpdateMode , object , string , class IFormatProvider )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()" />
          <Method Sig="instance struct DataSourceUpdateMode get_DefaultDataSourceUpdateMode()" />
          <Method Sig="instance void set_DefaultDataSourceUpdateMode(struct DataSourceUpdateMode )" />
          <Method Sig="instance void Remove(class Binding )" />
          <Method Sig="instance void RemoveAt(int )" />
        </Type>
        <Type Name="ControlEventArgs">
          <Method Sig="instance class Control get_Control()" />
          <Method Sig="instance void .ctor(class Control )" />
        </Type>
        <Type Name="ControlEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ControlEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ControlEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ControlPaint">
          <Method Sig="struct Color get_ContrastControlDark()" />
          <Method Sig="intptr CreateHBitmap16Bit(class Bitmap , struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="intptr CreateHBitmapTransparencyMask(class Bitmap )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="intptr CreateHBitmapColorMask(class Bitmap , intptr )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="struct Color Dark(struct Color , float )" />
          <Method Sig="struct Color Dark(struct Color )" />
          <Method Sig="struct Color DarkDark(struct Color )" />
          <Method Sig="void DrawBorder(class Graphics , struct Rectangle , struct Color , struct ButtonBorderStyle )" />
          <Method Sig="void DrawBorder(class Graphics , struct Rectangle , struct Color , int , struct ButtonBorderStyle , struct Color , int , struct ButtonBorderStyle , struct Color , int , struct ButtonBorderStyle , struct Color , int , struct ButtonBorderStyle )" />
          <Method Sig="void DrawBorder3D(class Graphics , struct Rectangle )" />
          <Method Sig="void DrawBorder3D(class Graphics , struct Rectangle , struct Border3DStyle )" />
          <Method Sig="void DrawBorder3D(class Graphics , struct Rectangle , struct Border3DStyle , struct Border3DSide )" />
          <Method Sig="void DrawBorder3D(class Graphics , int , int , int , int )" />
          <Method Sig="void DrawBorder3D(class Graphics , int , int , int , int , struct Border3DStyle )" />
          <Method Sig="void DrawBorder3D(class Graphics , int , int , int , int , struct Border3DStyle , struct Border3DSide )" />
          <Method Sig="void DrawButton(class Graphics , struct Rectangle , struct ButtonState )" />
          <Method Sig="void DrawButton(class Graphics , int , int , int , int , struct ButtonState )" />
          <Method Sig="void DrawCaptionButton(class Graphics , struct Rectangle , struct CaptionButton , struct ButtonState )" />
          <Method Sig="void DrawCaptionButton(class Graphics , int , int , int , int , struct CaptionButton , struct ButtonState )" />
          <Method Sig="void DrawCheckBox(class Graphics , struct Rectangle , struct ButtonState )" />
          <Method Sig="void DrawCheckBox(class Graphics , int , int , int , int , struct ButtonState )" />
          <Method Sig="void DrawComboButton(class Graphics , struct Rectangle , struct ButtonState )" />
          <Method Sig="void DrawComboButton(class Graphics , int , int , int , int , struct ButtonState )" />
          <Method Sig="void DrawContainerGrabHandle(class Graphics , struct Rectangle )" />
          <Method Sig="void DrawFocusRectangle(class Graphics , struct Rectangle )" />
          <Method Sig="void DrawFocusRectangle(class Graphics , struct Rectangle , struct Color , struct Color )" />
          <Method Sig="void DrawGrabHandle(class Graphics , struct Rectangle , bool , bool )" />
          <Method Sig="void DrawGrid(class Graphics , struct Rectangle , struct Size , struct Color )" />
          <Method Sig="void DrawImageDisabled(class Graphics , class Image , int , int , struct Color )" />
          <Method Sig="void DrawLockedFrame(class Graphics , struct Rectangle , bool )" />
          <Method Sig="void DrawMenuGlyph(class Graphics , struct Rectangle , struct MenuGlyph )" />
          <Method Sig="void DrawMenuGlyph(class Graphics , struct Rectangle , struct MenuGlyph , struct Color , struct Color )" />
          <Method Sig="void DrawMenuGlyph(class Graphics , int , int , int , int , struct MenuGlyph )" />
          <Method Sig="void DrawMenuGlyph(class Graphics , int , int , int , int , struct MenuGlyph , struct Color , struct Color )" />
          <Method Sig="void DrawMixedCheckBox(class Graphics , struct Rectangle , struct ButtonState )" />
          <Method Sig="void DrawMixedCheckBox(class Graphics , int , int , int , int , struct ButtonState )" />
          <Method Sig="void DrawRadioButton(class Graphics , struct Rectangle , struct ButtonState )" />
          <Method Sig="void DrawRadioButton(class Graphics , int , int , int , int , struct ButtonState )" />
          <Method Sig="void DrawReversibleFrame(struct Rectangle , struct Color , struct FrameStyle )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void DrawReversibleLine(struct Point , struct Point , struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void DrawScrollButton(class Graphics , struct Rectangle , struct ScrollButton , struct ButtonState )" />
          <Method Sig="void DrawScrollButton(class Graphics , int , int , int , int , struct ScrollButton , struct ButtonState )" />
          <Method Sig="void DrawSelectionFrame(class Graphics , bool , struct Rectangle , struct Rectangle , struct Color )" />
          <Method Sig="void DrawSizeGrip(class Graphics , struct Color , struct Rectangle )" />
          <Method Sig="void DrawSizeGrip(class Graphics , struct Color , int , int , int , int )" />
          <Method Sig="void DrawStringDisabled(class Graphics , string , class Font , struct Color , struct RectangleF , class StringFormat )" />
          <Method Sig="void DrawStringDisabled(class IDeviceContext , string , class Font , struct Color , struct Rectangle , struct TextFormatFlags )" />
          <Method Sig="void DrawVisualStyleBorder(class Graphics , struct Rectangle )" />
          <Method Sig="void FillReversibleRectangle(struct Rectangle , struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="struct Color Light(struct Color , float )" />
          <Method Sig="struct Color Light(struct Color )" />
          <Method Sig="struct Color LightLight(struct Color )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ConvertEventArgs">
          <Method Sig="instance void .ctor(object , class Type )" />
          <Method Sig="instance object get_Value()" />
          <Method Sig="instance void set_Value(object )" />
          <Method Sig="instance class Type get_DesiredType()" />
        </Type>
        <Type Name="ConvertEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ConvertEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ConvertEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="CreateParams">
          <Method Sig="instance string get_ClassName()" />
          <Method Sig="instance void set_ClassName(string )" />
          <Method Sig="instance string get_Caption()" />
          <Method Sig="instance void set_Caption(string )" />
          <Method Sig="instance int get_Style()" />
          <Method Sig="instance void set_Style(int )" />
          <Method Sig="instance int get_ExStyle()" />
          <Method Sig="instance void set_ExStyle(int )" />
          <Method Sig="instance int get_ClassStyle()" />
          <Method Sig="instance void set_ClassStyle(int )" />
          <Method Sig="instance int get_X()" />
          <Method Sig="instance void set_X(int )" />
          <Method Sig="instance int get_Y()" />
          <Method Sig="instance void set_Y(int )" />
          <Method Sig="instance int get_Width()" />
          <Method Sig="instance void set_Width(int )" />
          <Method Sig="instance int get_Height()" />
          <Method Sig="instance void set_Height(int )" />
          <Method Sig="instance intptr get_Parent()" />
          <Method Sig="instance void set_Parent(intptr )" />
          <Method Sig="instance object get_Param()" />
          <Method Sig="instance void set_Param(object )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="CurrencyManager">
          <Method Sig="instance void add_ItemChanged(class ItemChangedEventHandler )" />
          <Method Sig="instance void remove_ItemChanged(class ItemChangedEventHandler )" />
          <Method Sig="instance void add_ListChanged(class ListChangedEventHandler )" />
          <Method Sig="instance void remove_ListChanged(class ListChangedEventHandler )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance object get_Current()" />
          <Method Sig="instance class IList get_List()" />
          <Method Sig="instance int get_Position()" />
          <Method Sig="instance void set_Position(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddNew()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void CancelCurrentEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance void EndCurrentEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class PropertyDescriptorCollection GetItemProperties()" />
          <Method Sig="instance void add_MetaDataChanged(class EventHandler )" />
          <Method Sig="instance void remove_MetaDataChanged(class EventHandler )" />
          <Method Sig="instance void Refresh()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResumeBinding()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SuspendBinding()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="Cursor">
          <Method Sig="instance void .ctor(intptr )" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(class Type , string )" />
          <Method Sig="instance void .ctor(class Stream )" />
          <Method Sig="struct Rectangle get_Clip()" />
          <Method Sig="void set_Clip(struct Rectangle )" />
          <Method Sig="class Cursor get_Current()" />
          <Method Sig="void set_Current(class Cursor )" />
          <Method Sig="instance intptr get_Handle()" />
          <Method Sig="instance struct Point get_HotSpot()" />
          <Method Sig="struct Point get_Position()" />
          <Method Sig="void set_Position(struct Point )" />
          <Method Sig="instance struct Size get_Size()" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance intptr CopyHandle()" />
          <Method Sig="instance void Dispose()" />
          <Method Sig="instance void Draw(class Graphics , struct Rectangle )" />
          <Method Sig="instance void DrawStretched(class Graphics , struct Rectangle )" />
          <Method Sig="void Hide()" />
          <Method Sig="void Show()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="bool op_Equality(class Cursor , class Cursor )" />
          <Method Sig="bool op_Inequality(class Cursor , class Cursor )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="CursorConverter">
          <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance class StandardValuesCollection GetStandardValues(class ITypeDescriptorContext )" />
          <Method Sig="instance bool GetStandardValuesSupported(class ITypeDescriptorContext )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="Cursors">
          <Method Sig="class Cursor get_AppStarting()" />
          <Method Sig="class Cursor get_Arrow()" />
          <Method Sig="class Cursor get_Cross()" />
          <Method Sig="class Cursor get_Default()" />
          <Method Sig="class Cursor get_IBeam()" />
          <Method Sig="class Cursor get_No()" />
          <Method Sig="class Cursor get_SizeAll()" />
          <Method Sig="class Cursor get_SizeNESW()" />
          <Method Sig="class Cursor get_SizeNS()" />
          <Method Sig="class Cursor get_SizeNWSE()" />
          <Method Sig="class Cursor get_SizeWE()" />
          <Method Sig="class Cursor get_UpArrow()" />
          <Method Sig="class Cursor get_WaitCursor()" />
          <Method Sig="class Cursor get_Help()" />
          <Method Sig="class Cursor get_HSplit()" />
          <Method Sig="class Cursor get_VSplit()" />
          <Method Sig="class Cursor get_NoMove2D()" />
          <Method Sig="class Cursor get_NoMoveHoriz()" />
          <Method Sig="class Cursor get_NoMoveVert()" />
          <Method Sig="class Cursor get_PanEast()" />
          <Method Sig="class Cursor get_PanNE()" />
          <Method Sig="class Cursor get_PanNorth()" />
          <Method Sig="class Cursor get_PanNW()" />
          <Method Sig="class Cursor get_PanSE()" />
          <Method Sig="class Cursor get_PanSouth()" />
          <Method Sig="class Cursor get_PanSW()" />
          <Method Sig="class Cursor get_PanWest()" />
          <Method Sig="class Cursor get_Hand()" />
        </Type>
        <Type Name="DataFormats">
          <Method Sig="class Format GetFormat(string )" />
          <Method Sig="class Format GetFormat(int )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGrid">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowSorting()" />
          <Method Sig="instance void set_AllowSorting(bool )" />
          <Method Sig="instance struct Color get_AlternatingBackColor()" />
          <Method Sig="instance void set_AlternatingBackColor(struct Color )" />
          <Method Sig="instance void ResetAlternatingBackColor()" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void ResetBackColor()" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void ResetForeColor()" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )" />
          <Method Sig="instance void add_BorderStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_BorderStyleChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_CaptionBackColor()" />
          <Method Sig="instance void set_CaptionBackColor(struct Color )" />
          <Method Sig="instance struct Color get_CaptionForeColor()" />
          <Method Sig="instance void set_CaptionForeColor(struct Color )" />
          <Method Sig="instance class Font get_CaptionFont()" />
          <Method Sig="instance void set_CaptionFont(class Font )" />
          <Method Sig="instance string get_CaptionText()" />
          <Method Sig="instance void set_CaptionText(string )" />
          <Method Sig="instance bool get_CaptionVisible()" />
          <Method Sig="instance void set_CaptionVisible(bool )" />
          <Method Sig="instance void add_CaptionVisibleChanged(class EventHandler )" />
          <Method Sig="instance void remove_CaptionVisibleChanged(class EventHandler )" />
          <Method Sig="instance struct DataGridCell get_CurrentCell()" />
          <Method Sig="instance void set_CurrentCell(struct DataGridCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CurrentCellChanged(class EventHandler )" />
          <Method Sig="instance void remove_CurrentCellChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_SelectionBackColor()" />
          <Method Sig="instance void set_SelectionBackColor(struct Color )" />
          <Method Sig="instance void ResetSelectionBackColor()" />
          <Method Sig="instance struct Color get_SelectionForeColor()" />
          <Method Sig="instance void set_SelectionForeColor(struct Color )" />
          <Method Sig="instance void ResetSelectionForeColor()" />
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance void set_DataSource(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance void remove_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance string get_DataMember()" />
          <Method Sig="instance void set_DataMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetDataBinding(object , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_CurrentRowIndex()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_CurrentRowIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class GridTableStylesCollection get_TableStyles()" />
          <Method Sig="instance struct Color get_GridLineColor()" />
          <Method Sig="instance void set_GridLineColor(struct Color )" />
          <Method Sig="instance void ResetGridLineColor()" />
          <Method Sig="instance struct DataGridLineStyle get_GridLineStyle()" />
          <Method Sig="instance void set_GridLineStyle(struct DataGridLineStyle )" />
          <Method Sig="instance struct DataGridParentRowsLabelStyle get_ParentRowsLabelStyle()" />
          <Method Sig="instance void set_ParentRowsLabelStyle(struct DataGridParentRowsLabelStyle )" />
          <Method Sig="instance void add_ParentRowsLabelStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_ParentRowsLabelStyleChanged(class EventHandler )" />
          <Method Sig="instance int get_FirstVisibleColumn()" />
          <Method Sig="instance bool get_FlatMode()" />
          <Method Sig="instance void set_FlatMode(bool )" />
          <Method Sig="instance void add_FlatModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_FlatModeChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_HeaderBackColor()" />
          <Method Sig="instance void set_HeaderBackColor(struct Color )" />
          <Method Sig="instance void ResetHeaderBackColor()" />
          <Method Sig="instance struct Color get_BackgroundColor()" />
          <Method Sig="instance void set_BackgroundColor(struct Color )" />
          <Method Sig="instance void add_BackgroundColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundColorChanged(class EventHandler )" />
          <Method Sig="instance class Font get_HeaderFont()" />
          <Method Sig="instance void set_HeaderFont(class Font )" />
          <Method Sig="instance void ResetHeaderFont()" />
          <Method Sig="instance struct Color get_HeaderForeColor()" />
          <Method Sig="instance void set_HeaderForeColor(struct Color )" />
          <Method Sig="instance void ResetHeaderForeColor()" />
          <Method Sig="instance struct Color get_LinkColor()" />
          <Method Sig="instance void set_LinkColor(struct Color )" />
          <Method Sig="instance void ResetLinkColor()" />
          <Method Sig="instance struct Color get_LinkHoverColor()" />
          <Method Sig="instance void set_LinkHoverColor(struct Color )" />
          <Method Sig="instance void ResetLinkHoverColor()" />
          <Method Sig="instance bool get_AllowNavigation()" />
          <Method Sig="instance void set_AllowNavigation(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AllowNavigationChanged(class EventHandler )" />
          <Method Sig="instance void remove_AllowNavigationChanged(class EventHandler )" />
          <Method Sig="instance class Cursor get_Cursor()" />
          <Method Sig="instance void set_Cursor(class Cursor )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CursorChanged(class EventHandler )" />
          <Method Sig="instance void remove_CursorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_ParentRowsBackColor()" />
          <Method Sig="instance void set_ParentRowsBackColor(struct Color )" />
          <Method Sig="instance struct Color get_ParentRowsForeColor()" />
          <Method Sig="instance void set_ParentRowsForeColor(struct Color )" />
          <Method Sig="instance int get_PreferredColumnWidth()" />
          <Method Sig="instance void set_PreferredColumnWidth(int )" />
          <Method Sig="instance int get_PreferredRowHeight()" />
          <Method Sig="instance void set_PreferredRowHeight(int )" />
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance void remove_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance bool get_ColumnHeadersVisible()" />
          <Method Sig="instance void set_ColumnHeadersVisible(bool )" />
          <Method Sig="instance bool get_ParentRowsVisible()" />
          <Method Sig="instance void set_ParentRowsVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ParentRowsVisibleChanged(class EventHandler )" />
          <Method Sig="instance void remove_ParentRowsVisibleChanged(class EventHandler )" />
          <Method Sig="instance bool get_RowHeadersVisible()" />
          <Method Sig="instance void set_RowHeadersVisible(bool )" />
          <Method Sig="instance int get_RowHeaderWidth()" />
          <Method Sig="instance void set_RowHeaderWidth(int )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance int get_VisibleColumnCount()" />
          <Method Sig="instance int get_VisibleRowCount()" />
          <Method Sig="instance object get_Item(int , int )" />
          <Method Sig="instance void set_Item(int , int , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Item(struct DataGridCell )" />
          <Method Sig="instance void set_Item(struct DataGridCell , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Navigate(class NavigateEventHandler )" />
          <Method Sig="instance void remove_Navigate(class NavigateEventHandler )" />
          <Method Sig="instance void add_Scroll(class EventHandler )" />
          <Method Sig="instance void remove_Scroll(class EventHandler )" />
          <Method Sig="instance class ISite get_Site()" />
          <Method Sig="instance void set_Site(class ISite )" />
          <Method Sig="instance bool BeginEdit(class DataGridColumnStyle , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void BeginInit()" />
          <Method Sig="instance void Collapse(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool EndEdit(class DataGridColumnStyle , int , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Expand(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EndInit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle GetCurrentCellBounds()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle GetCellBounds(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle GetCellBounds(struct DataGridCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class HitTestInfo HitTest(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class HitTestInfo HitTest(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool IsExpanded(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool IsSelected(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void NavigateBack()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void NavigateTo(int , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_BackButtonClick(class EventHandler )" />
          <Method Sig="instance void remove_BackButtonClick(class EventHandler )" />
          <Method Sig="instance void add_ShowParentDetailsButtonClick(class EventHandler )" />
          <Method Sig="instance void remove_ShowParentDetailsButtonClick(class EventHandler )" />
          <Method Sig="instance void Select(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SubObjectsSiteChange(bool )" />
          <Method Sig="instance void UnSelect(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridColumnStyle">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class PropertyDescriptor )" />
          <Method Sig="instance struct HorizontalAlignment get_Alignment()" />
          <Method Sig="instance void set_Alignment(struct HorizontalAlignment )" />
          <Method Sig="instance void add_AlignmentChanged(class EventHandler )" />
          <Method Sig="instance void remove_AlignmentChanged(class EventHandler )" />
          <Method Sig="instance class AccessibleObject get_HeaderAccessibleObject()" />
          <Method Sig="instance class PropertyDescriptor get_PropertyDescriptor()" />
          <Method Sig="instance void set_PropertyDescriptor(class PropertyDescriptor )" />
          <Method Sig="instance void add_PropertyDescriptorChanged(class EventHandler )" />
          <Method Sig="instance void remove_PropertyDescriptorChanged(class EventHandler )" />
          <Method Sig="instance class DataGridTableStyle get_DataGridTableStyle()" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance string get_HeaderText()" />
          <Method Sig="instance void set_HeaderText(string )" />
          <Method Sig="instance void add_HeaderTextChanged(class EventHandler )" />
          <Method Sig="instance void remove_HeaderTextChanged(class EventHandler )" />
          <Method Sig="instance string get_MappingName()" />
          <Method Sig="instance void set_MappingName(string )" />
          <Method Sig="instance void add_MappingNameChanged(class EventHandler )" />
          <Method Sig="instance void remove_MappingNameChanged(class EventHandler )" />
          <Method Sig="instance void ResetHeaderText()" />
          <Method Sig="instance string get_NullText()" />
          <Method Sig="instance void set_NullText(string )" />
          <Method Sig="instance void add_NullTextChanged(class EventHandler )" />
          <Method Sig="instance void remove_NullTextChanged(class EventHandler )" />
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )" />
          <Method Sig="instance void add_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance void remove_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance int get_Width()" />
          <Method Sig="instance void set_Width(int )" />
          <Method Sig="instance void add_WidthChanged(class EventHandler )" />
          <Method Sig="instance void remove_WidthChanged(class EventHandler )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridBoolColumn">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class PropertyDescriptor )" />
          <Method Sig="instance void .ctor(class PropertyDescriptor , bool )" />
          <Method Sig="instance object get_TrueValue()" />
          <Method Sig="instance void set_TrueValue(object )" />
          <Method Sig="instance void add_TrueValueChanged(class EventHandler )" />
          <Method Sig="instance void remove_TrueValueChanged(class EventHandler )" />
          <Method Sig="instance object get_FalseValue()" />
          <Method Sig="instance void set_FalseValue(object )" />
          <Method Sig="instance void add_FalseValueChanged(class EventHandler )" />
          <Method Sig="instance void remove_FalseValueChanged(class EventHandler )" />
          <Method Sig="instance object get_NullValue()" />
          <Method Sig="instance void set_NullValue(object )" />
          <Method Sig="instance bool get_AllowNull()" />
          <Method Sig="instance void set_AllowNull(bool )" />
          <Method Sig="instance void add_AllowNullChanged(class EventHandler )" />
          <Method Sig="instance void remove_AllowNullChanged(class EventHandler )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridCell">
          <Method Sig="instance int get_ColumnNumber()" />
          <Method Sig="instance void set_ColumnNumber(int )" />
          <Method Sig="instance int get_RowNumber()" />
          <Method Sig="instance void set_RowNumber(int )" />
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="GridColumnStylesCollection">
          <Method Sig="instance class DataGridColumnStyle get_Item(int )" />
          <Method Sig="instance class DataGridColumnStyle get_Item(string )" />
          <Method Sig="instance class DataGridColumnStyle get_Item(class PropertyDescriptor )" />
          <Method Sig="instance int Add(class DataGridColumnStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddRange([] class DataGridColumnStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(class PropertyDescriptor )" />
          <Method Sig="instance bool Contains(class DataGridColumnStyle )" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance int IndexOf(class DataGridColumnStyle )" />
          <Method Sig="instance void Remove(class DataGridColumnStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAt(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetPropertyDescriptors()" />
        </Type>
        <Type Name="DataGridPreferredColumnWidthTypeConverter">
          <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="DataGridTableStyle">
          <Method Sig="instance bool get_AllowSorting()" />
          <Method Sig="instance void set_AllowSorting(bool )" />
          <Method Sig="instance void add_AllowSortingChanged(class EventHandler )" />
          <Method Sig="instance void remove_AllowSortingChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_AlternatingBackColor()" />
          <Method Sig="instance void set_AlternatingBackColor(struct Color )" />
          <Method Sig="instance void add_AlternatingBackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_AlternatingBackColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetAlternatingBackColor()" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetBackColor()" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetForeColor()" />
          <Method Sig="instance struct Color get_GridLineColor()" />
          <Method Sig="instance void set_GridLineColor(struct Color )" />
          <Method Sig="instance void add_GridLineColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_GridLineColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetGridLineColor()" />
          <Method Sig="instance struct DataGridLineStyle get_GridLineStyle()" />
          <Method Sig="instance void set_GridLineStyle(struct DataGridLineStyle )" />
          <Method Sig="instance void add_GridLineStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_GridLineStyleChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_HeaderBackColor()" />
          <Method Sig="instance void set_HeaderBackColor(struct Color )" />
          <Method Sig="instance void add_HeaderBackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_HeaderBackColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetHeaderBackColor()" />
          <Method Sig="instance class Font get_HeaderFont()" />
          <Method Sig="instance void set_HeaderFont(class Font )" />
          <Method Sig="instance void add_HeaderFontChanged(class EventHandler )" />
          <Method Sig="instance void remove_HeaderFontChanged(class EventHandler )" />
          <Method Sig="instance void ResetHeaderFont()" />
          <Method Sig="instance struct Color get_HeaderForeColor()" />
          <Method Sig="instance void set_HeaderForeColor(struct Color )" />
          <Method Sig="instance void add_HeaderForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_HeaderForeColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetHeaderForeColor()" />
          <Method Sig="instance struct Color get_LinkColor()" />
          <Method Sig="instance void set_LinkColor(struct Color )" />
          <Method Sig="instance void add_LinkColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_LinkColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetLinkColor()" />
          <Method Sig="instance struct Color get_LinkHoverColor()" />
          <Method Sig="instance void set_LinkHoverColor(struct Color )" />
          <Method Sig="instance void add_LinkHoverColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_LinkHoverColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetLinkHoverColor()" />
          <Method Sig="instance int get_PreferredColumnWidth()" />
          <Method Sig="instance void set_PreferredColumnWidth(int )" />
          <Method Sig="instance void add_PreferredColumnWidthChanged(class EventHandler )" />
          <Method Sig="instance void remove_PreferredColumnWidthChanged(class EventHandler )" />
          <Method Sig="instance int get_PreferredRowHeight()" />
          <Method Sig="instance void set_PreferredRowHeight(int )" />
          <Method Sig="instance void add_PreferredRowHeightChanged(class EventHandler )" />
          <Method Sig="instance void remove_PreferredRowHeightChanged(class EventHandler )" />
          <Method Sig="instance bool get_ColumnHeadersVisible()" />
          <Method Sig="instance void set_ColumnHeadersVisible(bool )" />
          <Method Sig="instance void add_ColumnHeadersVisibleChanged(class EventHandler )" />
          <Method Sig="instance void remove_ColumnHeadersVisibleChanged(class EventHandler )" />
          <Method Sig="instance bool get_RowHeadersVisible()" />
          <Method Sig="instance void set_RowHeadersVisible(bool )" />
          <Method Sig="instance void add_RowHeadersVisibleChanged(class EventHandler )" />
          <Method Sig="instance void remove_RowHeadersVisibleChanged(class EventHandler )" />
          <Method Sig="instance int get_RowHeaderWidth()" />
          <Method Sig="instance void set_RowHeaderWidth(int )" />
          <Method Sig="instance void add_RowHeaderWidthChanged(class EventHandler )" />
          <Method Sig="instance void remove_RowHeaderWidthChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_SelectionBackColor()" />
          <Method Sig="instance void set_SelectionBackColor(struct Color )" />
          <Method Sig="instance void add_SelectionBackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectionBackColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetSelectionBackColor()" />
          <Method Sig="instance struct Color get_SelectionForeColor()" />
          <Method Sig="instance void set_SelectionForeColor(struct Color )" />
          <Method Sig="instance void add_SelectionForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectionForeColorChanged(class EventHandler )" />
          <Method Sig="instance void ResetSelectionForeColor()" />
          <Method Sig="instance void .ctor(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class CurrencyManager )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_MappingName()" />
          <Method Sig="instance void set_MappingName(string )" />
          <Method Sig="instance void add_MappingNameChanged(class EventHandler )" />
          <Method Sig="instance void remove_MappingNameChanged(class EventHandler )" />
          <Method Sig="instance class GridColumnStylesCollection get_GridColumnStyles()" />
          <Method Sig="instance class DataGrid get_DataGrid()" />
          <Method Sig="instance void set_DataGrid(class DataGrid )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )" />
          <Method Sig="instance void add_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance void remove_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance bool BeginEdit(class DataGridColumnStyle , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool EndEdit(class DataGridColumnStyle , int , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="GridTableStylesCollection">
          <Method Sig="instance class DataGridTableStyle get_Item(int )" />
          <Method Sig="instance class DataGridTableStyle get_Item(string )" />
          <Method Sig="instance int Add(class DataGridTableStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddRange([] class DataGridTableStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(class DataGridTableStyle )" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance void Remove(class DataGridTableStyle )" />
          <Method Sig="instance void RemoveAt(int )" />
        </Type>
        <Type Name="GridTablesFactory">
          <Method Sig="[] class DataGridTableStyle CreateGridTables(class DataGridTableStyle , object , string , class BindingContext )" />
        </Type>
        <Type Name="TextBoxBase">
          <Method Sig="instance bool get_AcceptsTab()" />
          <Method Sig="instance void set_AcceptsTab(bool )" />
          <Method Sig="instance void add_AcceptsTabChanged(class EventHandler )" />
          <Method Sig="instance void remove_AcceptsTabChanged(class EventHandler )" />
          <Method Sig="instance bool get_ShortcutsEnabled()" />
          <Method Sig="instance void set_ShortcutsEnabled(bool )" />
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_BorderStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_BorderStyleChanged(class EventHandler )" />
          <Method Sig="instance bool get_CanUndo()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance bool get_HideSelection()" />
          <Method Sig="instance void set_HideSelection(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_HideSelectionChanged(class EventHandler )" />
          <Method Sig="instance void remove_HideSelectionChanged(class EventHandler )" />
          <Method Sig="instance [] string get_Lines()" />
          <Method Sig="instance void set_Lines([] string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_MaxLength()" />
          <Method Sig="instance void set_MaxLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Modified()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Modified(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ModifiedChanged(class EventHandler )" />
          <Method Sig="instance void remove_ModifiedChanged(class EventHandler )" />
          <Method Sig="instance bool get_Multiline()" />
          <Method Sig="instance void set_Multiline(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MultilineChanged(class EventHandler )" />
          <Method Sig="instance void remove_MultilineChanged(class EventHandler )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance int get_PreferredHeight()" />
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance void remove_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance string get_SelectedText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionLength()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionStart()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionStart(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_TextLength()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_WordWrap()" />
          <Method Sig="instance void set_WordWrap(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AppendText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ClearUndo()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Copy()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Cut()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Paste()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance char GetCharFromPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetCharIndexFromPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetLineFromCharIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Point GetPositionFromCharIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetFirstCharIndexFromLine(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetFirstCharIndexOfCurrentLine()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ScrollToCaret()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DeselectAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Select(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SelectAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="instance void Undo()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="TextBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AcceptsReturn()" />
          <Method Sig="instance void set_AcceptsReturn(bool )" />
          <Method Sig="instance struct AutoCompleteMode get_AutoCompleteMode()" />
          <Method Sig="instance void set_AutoCompleteMode(struct AutoCompleteMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoCompleteSource get_AutoCompleteSource()" />
          <Method Sig="instance void set_AutoCompleteSource(struct AutoCompleteSource )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class AutoCompleteStringCollection get_AutoCompleteCustomSource()" />
          <Method Sig="instance void set_AutoCompleteCustomSource(class AutoCompleteStringCollection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct CharacterCasing get_CharacterCasing()" />
          <Method Sig="instance void set_CharacterCasing(struct CharacterCasing )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Multiline()" />
          <Method Sig="instance void set_Multiline(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance char get_PasswordChar()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_PasswordChar(char )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ScrollBars get_ScrollBars()" />
          <Method Sig="instance void set_ScrollBars(struct ScrollBars )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct HorizontalAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct HorizontalAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseSystemPasswordChar()" />
          <Method Sig="instance void set_UseSystemPasswordChar(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TextAlignChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextAlignChanged(class EventHandler )" />
          <Method Sig="instance void Paste(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridTextBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetDataGrid(class DataGrid )" />
          <Method Sig="instance bool get_IsInEditOrNavigateMode()" />
          <Method Sig="instance void set_IsInEditOrNavigateMode(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="DataGridTextBoxColumn">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class PropertyDescriptor )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class PropertyDescriptor , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class PropertyDescriptor , string , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class PropertyDescriptor , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TextBox get_TextBox()" />
          <Method Sig="instance void set_PropertyDescriptor(class PropertyDescriptor )" />
          <Method Sig="instance string get_Format()" />
          <Method Sig="instance void set_Format(string )" />
          <Method Sig="instance class IFormatProvider get_FormatInfo()" />
          <Method Sig="instance void set_FormatInfo(class IFormatProvider )" />
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )" />
        </Type>
        <Type Name="DataGridView">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewAdvancedBorderStyle get_AdjustedTopLeftHeaderBorderStyle()" />
          <Method Sig="instance class DataGridViewAdvancedBorderStyle get_AdvancedCellBorderStyle()" />
          <Method Sig="instance class DataGridViewAdvancedBorderStyle get_AdvancedColumnHeadersBorderStyle()" />
          <Method Sig="instance class DataGridViewAdvancedBorderStyle get_AdvancedRowHeadersBorderStyle()" />
          <Method Sig="instance bool get_AllowUserToAddRows()" />
          <Method Sig="instance void set_AllowUserToAddRows(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AllowUserToAddRowsChanged(class EventHandler )" />
          <Method Sig="instance void remove_AllowUserToAddRowsChanged(class EventHandler )" />
          <Method Sig="instance bool get_AllowUserToDeleteRows()" />
          <Method Sig="instance void set_AllowUserToDeleteRows(bool )" />
          <Method Sig="instance void add_AllowUserToDeleteRowsChanged(class EventHandler )" />
          <Method Sig="instance void remove_AllowUserToDeleteRowsChanged(class EventHandler )" />
          <Method Sig="instance bool get_AllowUserToOrderColumns()" />
          <Method Sig="instance void set_AllowUserToOrderColumns(bool )" />
          <Method Sig="instance void add_AllowUserToOrderColumnsChanged(class EventHandler )" />
          <Method Sig="instance void remove_AllowUserToOrderColumnsChanged(class EventHandler )" />
          <Method Sig="instance bool get_AllowUserToResizeColumns()" />
          <Method Sig="instance void set_AllowUserToResizeColumns(bool )" />
          <Method Sig="instance void add_AllowUserToResizeColumnsChanged(class EventHandler )" />
          <Method Sig="instance void remove_AllowUserToResizeColumnsChanged(class EventHandler )" />
          <Method Sig="instance bool get_AllowUserToResizeRows()" />
          <Method Sig="instance void set_AllowUserToResizeRows(bool )" />
          <Method Sig="instance void add_AllowUserToResizeRowsChanged(class EventHandler )" />
          <Method Sig="instance void remove_AllowUserToResizeRowsChanged(class EventHandler )" />
          <Method Sig="instance class DataGridViewCellStyle get_AlternatingRowsDefaultCellStyle()" />
          <Method Sig="instance void set_AlternatingRowsDefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AlternatingRowsDefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_AlternatingRowsDefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance bool get_AutoGenerateColumns()" />
          <Method Sig="instance void set_AutoGenerateColumns(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoGenerateColumnsChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoGenerateColumnsChanged(class EventHandler )" />
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance struct DataGridViewAutoSizeColumnsMode get_AutoSizeColumnsMode()" />
          <Method Sig="instance void set_AutoSizeColumnsMode(struct DataGridViewAutoSizeColumnsMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoSizeColumnsModeChanged(class DataGridViewAutoSizeColumnsModeEventHandler )" />
          <Method Sig="instance void remove_AutoSizeColumnsModeChanged(class DataGridViewAutoSizeColumnsModeEventHandler )" />
          <Method Sig="instance struct DataGridViewAutoSizeRowsMode get_AutoSizeRowsMode()" />
          <Method Sig="instance void set_AutoSizeRowsMode(struct DataGridViewAutoSizeRowsMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoSizeRowsModeChanged(class DataGridViewAutoSizeModeEventHandler )" />
          <Method Sig="instance void remove_AutoSizeRowsModeChanged(class DataGridViewAutoSizeModeEventHandler )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_BackgroundColor()" />
          <Method Sig="instance void set_BackgroundColor(struct Color )" />
          <Method Sig="instance void add_BackgroundColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundColorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_BorderStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_BorderStyleChanged(class EventHandler )" />
          <Method Sig="instance struct DataGridViewCellBorderStyle get_CellBorderStyle()" />
          <Method Sig="instance void set_CellBorderStyle(struct DataGridViewCellBorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CellBorderStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_CellBorderStyleChanged(class EventHandler )" />
          <Method Sig="instance struct DataGridViewClipboardCopyMode get_ClipboardCopyMode()" />
          <Method Sig="instance void set_ClipboardCopyMode(struct DataGridViewClipboardCopyMode )" />
          <Method Sig="instance int get_ColumnCount()" />
          <Method Sig="instance void set_ColumnCount(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewHeaderBorderStyle get_ColumnHeadersBorderStyle()" />
          <Method Sig="instance void set_ColumnHeadersBorderStyle(struct DataGridViewHeaderBorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ColumnHeadersBorderStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_ColumnHeadersBorderStyleChanged(class EventHandler )" />
          <Method Sig="instance class DataGridViewCellStyle get_ColumnHeadersDefaultCellStyle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_ColumnHeadersDefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ColumnHeadersDefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_ColumnHeadersDefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance int get_ColumnHeadersHeight()" />
          <Method Sig="instance void set_ColumnHeadersHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ColumnHeadersHeightChanged(class EventHandler )" />
          <Method Sig="instance void remove_ColumnHeadersHeightChanged(class EventHandler )" />
          <Method Sig="instance struct DataGridViewColumnHeadersHeightSizeMode get_ColumnHeadersHeightSizeMode()" />
          <Method Sig="instance void set_ColumnHeadersHeightSizeMode(struct DataGridViewColumnHeadersHeightSizeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ColumnHeadersHeightSizeModeChanged(class DataGridViewAutoSizeModeEventHandler )" />
          <Method Sig="instance void remove_ColumnHeadersHeightSizeModeChanged(class DataGridViewAutoSizeModeEventHandler )" />
          <Method Sig="instance bool get_ColumnHeadersVisible()" />
          <Method Sig="instance void set_ColumnHeadersVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewColumnCollection get_Columns()" />
          <Method Sig="instance class DataGridViewCell get_CurrentCell()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_CurrentCell(class DataGridViewCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Point get_CurrentCellAddress()" />
          <Method Sig="instance class DataGridViewRow get_CurrentRow()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_DataMember()" />
          <Method Sig="instance void set_DataMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DataMemberChanged(class EventHandler )" />
          <Method Sig="instance void remove_DataMemberChanged(class EventHandler )" />
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance void set_DataSource(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance void remove_DataSourceChanged(class EventHandler )" />
          <Method Sig="instance class DataGridViewCellStyle get_DefaultCellStyle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_DefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_DefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance struct Rectangle get_DisplayRectangle()" />
          <Method Sig="instance struct DataGridViewEditMode get_EditMode()" />
          <Method Sig="instance void set_EditMode(struct DataGridViewEditMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_EditModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_EditModeChanged(class EventHandler )" />
          <Method Sig="instance class Control get_EditingControl()" />
          <Method Sig="instance class Panel get_EditingPanel()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_EnableHeadersVisualStyles()" />
          <Method Sig="instance void set_EnableHeadersVisualStyles(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCell get_FirstDisplayedCell()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_FirstDisplayedCell(class DataGridViewCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_FirstDisplayedScrollingColumnHiddenWidth()" />
          <Method Sig="instance int get_FirstDisplayedScrollingColumnIndex()" />
          <Method Sig="instance void set_FirstDisplayedScrollingColumnIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_FirstDisplayedScrollingRowIndex()" />
          <Method Sig="instance void set_FirstDisplayedScrollingRowIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_GridColor()" />
          <Method Sig="instance void set_GridColor(struct Color )" />
          <Method Sig="instance void add_GridColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_GridColorChanged(class EventHandler )" />
          <Method Sig="instance int get_HorizontalScrollingOffset()" />
          <Method Sig="instance void set_HorizontalScrollingOffset(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsCurrentCellDirty()" />
          <Method Sig="instance bool get_IsCurrentCellInEditMode()" />
          <Method Sig="instance bool get_IsCurrentRowDirty()" />
          <Method Sig="instance bool get_MultiSelect()" />
          <Method Sig="instance void set_MultiSelect(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MultiSelectChanged(class EventHandler )" />
          <Method Sig="instance void remove_MultiSelectChanged(class EventHandler )" />
          <Method Sig="instance int get_NewRowIndex()" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance void remove_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance int get_RowCount()" />
          <Method Sig="instance void set_RowCount(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewHeaderBorderStyle get_RowHeadersBorderStyle()" />
          <Method Sig="instance void set_RowHeadersBorderStyle(struct DataGridViewHeaderBorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RowHeadersBorderStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_RowHeadersBorderStyleChanged(class EventHandler )" />
          <Method Sig="instance class DataGridViewCellStyle get_RowHeadersDefaultCellStyle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_RowHeadersDefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RowHeadersDefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_RowHeadersDefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance bool get_RowHeadersVisible()" />
          <Method Sig="instance void set_RowHeadersVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_RowHeadersWidth()" />
          <Method Sig="instance void set_RowHeadersWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RowHeadersWidthChanged(class EventHandler )" />
          <Method Sig="instance void remove_RowHeadersWidthChanged(class EventHandler )" />
          <Method Sig="instance struct DataGridViewRowHeadersWidthSizeMode get_RowHeadersWidthSizeMode()" />
          <Method Sig="instance void set_RowHeadersWidthSizeMode(struct DataGridViewRowHeadersWidthSizeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RowHeadersWidthSizeModeChanged(class DataGridViewAutoSizeModeEventHandler )" />
          <Method Sig="instance void remove_RowHeadersWidthSizeModeChanged(class DataGridViewAutoSizeModeEventHandler )" />
          <Method Sig="instance class DataGridViewRowCollection get_Rows()" />
          <Method Sig="instance class DataGridViewCellStyle get_RowsDefaultCellStyle()" />
          <Method Sig="instance void set_RowsDefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RowsDefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_RowsDefaultCellStyleChanged(class EventHandler )" />
          <Method Sig="instance class DataGridViewRow get_RowTemplate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_RowTemplate(class DataGridViewRow )" />
          <Method Sig="instance struct ScrollBars get_ScrollBars()" />
          <Method Sig="instance void set_ScrollBars(struct ScrollBars )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewSelectedCellCollection get_SelectedCells()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewSelectedColumnCollection get_SelectedColumns()" />
          <Method Sig="instance class DataGridViewSelectedRowCollection get_SelectedRows()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewSelectionMode get_SelectionMode()" />
          <Method Sig="instance void set_SelectionMode(struct DataGridViewSelectionMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowCellErrors()" />
          <Method Sig="instance void set_ShowCellErrors(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowCellToolTips()" />
          <Method Sig="instance void set_ShowCellToolTips(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowEditingIcon()" />
          <Method Sig="instance void set_ShowEditingIcon(bool )" />
          <Method Sig="instance bool get_ShowRowErrors()" />
          <Method Sig="instance void set_ShowRowErrors(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewColumn get_SortedColumn()" />
          <Method Sig="instance struct SortOrder get_SortOrder()" />
          <Method Sig="instance bool get_StandardTab()" />
          <Method Sig="instance void set_StandardTab(bool )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance class DataGridViewCell get_Item(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Item(int , int , class DataGridViewCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCell get_Item(string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Item(string , int , class DataGridViewCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewHeaderCell get_TopLeftHeaderCell()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_TopLeftHeaderCell(class DataGridViewHeaderCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Cursor get_UserSetCursor()" />
          <Method Sig="instance int get_VerticalScrollingOffset()" />
          <Method Sig="instance bool get_VirtualMode()" />
          <Method Sig="instance void set_VirtualMode(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoSizeColumnModeChanged(class DataGridViewAutoSizeColumnModeEventHandler )" />
          <Method Sig="instance void remove_AutoSizeColumnModeChanged(class DataGridViewAutoSizeColumnModeEventHandler )" />
          <Method Sig="instance void add_CancelRowEdit(class QuestionEventHandler )" />
          <Method Sig="instance void remove_CancelRowEdit(class QuestionEventHandler )" />
          <Method Sig="instance void add_CellBeginEdit(class DataGridViewCellCancelEventHandler )" />
          <Method Sig="instance void remove_CellBeginEdit(class DataGridViewCellCancelEventHandler )" />
          <Method Sig="instance void add_CellClick(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellClick(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellContentClick(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellContentClick(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellContentDoubleClick(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellContentDoubleClick(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellContextMenuStripChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellContextMenuStripChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellContextMenuStripNeeded(class DataGridViewCellContextMenuStripNeededEventHandler )" />
          <Method Sig="instance void remove_CellContextMenuStripNeeded(class DataGridViewCellContextMenuStripNeededEventHandler )" />
          <Method Sig="instance void add_CellDoubleClick(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellDoubleClick(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellEndEdit(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellEndEdit(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellEnter(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellEnter(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellErrorTextChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellErrorTextChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellErrorTextNeeded(class DataGridViewCellErrorTextNeededEventHandler )" />
          <Method Sig="instance void remove_CellErrorTextNeeded(class DataGridViewCellErrorTextNeededEventHandler )" />
          <Method Sig="instance void add_CellFormatting(class DataGridViewCellFormattingEventHandler )" />
          <Method Sig="instance void remove_CellFormatting(class DataGridViewCellFormattingEventHandler )" />
          <Method Sig="instance void add_CellLeave(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellLeave(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellMouseClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void remove_CellMouseClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void add_CellMouseDoubleClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void remove_CellMouseDoubleClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void add_CellMouseDown(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void remove_CellMouseDown(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void add_CellMouseEnter(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellMouseEnter(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellMouseLeave(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellMouseLeave(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellMouseMove(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void remove_CellMouseMove(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void add_CellMouseUp(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void remove_CellMouseUp(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void add_CellPainting(class DataGridViewCellPaintingEventHandler )" />
          <Method Sig="instance void remove_CellPainting(class DataGridViewCellPaintingEventHandler )" />
          <Method Sig="instance void add_CellParsing(class DataGridViewCellParsingEventHandler )" />
          <Method Sig="instance void remove_CellParsing(class DataGridViewCellParsingEventHandler )" />
          <Method Sig="instance void add_CellStateChanged(class DataGridViewCellStateChangedEventHandler )" />
          <Method Sig="instance void remove_CellStateChanged(class DataGridViewCellStateChangedEventHandler )" />
          <Method Sig="instance void add_CellStyleChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellStyleChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellStyleContentChanged(class DataGridViewCellStyleContentChangedEventHandler )" />
          <Method Sig="instance void remove_CellStyleContentChanged(class DataGridViewCellStyleContentChangedEventHandler )" />
          <Method Sig="instance void add_CellToolTipTextChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellToolTipTextChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellToolTipTextNeeded(class DataGridViewCellToolTipTextNeededEventHandler )" />
          <Method Sig="instance void remove_CellToolTipTextNeeded(class DataGridViewCellToolTipTextNeededEventHandler )" />
          <Method Sig="instance void add_CellValidated(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellValidated(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellValidating(class DataGridViewCellValidatingEventHandler )" />
          <Method Sig="instance void remove_CellValidating(class DataGridViewCellValidatingEventHandler )" />
          <Method Sig="instance void add_CellValueChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_CellValueChanged(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_CellValueNeeded(class DataGridViewCellValueEventHandler )" />
          <Method Sig="instance void remove_CellValueNeeded(class DataGridViewCellValueEventHandler )" />
          <Method Sig="instance void add_CellValuePushed(class DataGridViewCellValueEventHandler )" />
          <Method Sig="instance void remove_CellValuePushed(class DataGridViewCellValueEventHandler )" />
          <Method Sig="instance void add_ColumnAdded(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnAdded(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnContextMenuStripChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnContextMenuStripChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnDataPropertyNameChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnDataPropertyNameChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnDefaultCellStyleChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnDefaultCellStyleChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnDisplayIndexChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnDisplayIndexChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnDividerDoubleClick(class DataGridViewColumnDividerDoubleClickEventHandler )" />
          <Method Sig="instance void remove_ColumnDividerDoubleClick(class DataGridViewColumnDividerDoubleClickEventHandler )" />
          <Method Sig="instance void add_ColumnDividerWidthChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnDividerWidthChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnHeaderMouseClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void remove_ColumnHeaderMouseClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void add_ColumnHeaderMouseDoubleClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void remove_ColumnHeaderMouseDoubleClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void add_ColumnHeaderCellChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnHeaderCellChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnMinimumWidthChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnMinimumWidthChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnNameChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnNameChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnRemoved(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnRemoved(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnSortModeChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnSortModeChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnStateChanged(class DataGridViewColumnStateChangedEventHandler )" />
          <Method Sig="instance void remove_ColumnStateChanged(class DataGridViewColumnStateChangedEventHandler )" />
          <Method Sig="instance void add_ColumnToolTipTextChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnToolTipTextChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_ColumnWidthChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void remove_ColumnWidthChanged(class DataGridViewColumnEventHandler )" />
          <Method Sig="instance void add_CurrentCellChanged(class EventHandler )" />
          <Method Sig="instance void remove_CurrentCellChanged(class EventHandler )" />
          <Method Sig="instance void add_CurrentCellDirtyStateChanged(class EventHandler )" />
          <Method Sig="instance void remove_CurrentCellDirtyStateChanged(class EventHandler )" />
          <Method Sig="instance void add_DataBindingComplete(class DataGridViewBindingCompleteEventHandler )" />
          <Method Sig="instance void remove_DataBindingComplete(class DataGridViewBindingCompleteEventHandler )" />
          <Method Sig="instance void add_DataError(class DataGridViewDataErrorEventHandler )" />
          <Method Sig="instance void remove_DataError(class DataGridViewDataErrorEventHandler )" />
          <Method Sig="instance void add_DefaultValuesNeeded(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_DefaultValuesNeeded(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_EditingControlShowing(class DataGridViewEditingControlShowingEventHandler )" />
          <Method Sig="instance void remove_EditingControlShowing(class DataGridViewEditingControlShowingEventHandler )" />
          <Method Sig="instance void add_NewRowNeeded(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_NewRowNeeded(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_RowContextMenuStripChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_RowContextMenuStripChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_RowContextMenuStripNeeded(class DataGridViewRowContextMenuStripNeededEventHandler )" />
          <Method Sig="instance void remove_RowContextMenuStripNeeded(class DataGridViewRowContextMenuStripNeededEventHandler )" />
          <Method Sig="instance void add_RowDefaultCellStyleChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_RowDefaultCellStyleChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_RowDirtyStateNeeded(class QuestionEventHandler )" />
          <Method Sig="instance void remove_RowDirtyStateNeeded(class QuestionEventHandler )" />
          <Method Sig="instance void add_RowDividerDoubleClick(class DataGridViewRowDividerDoubleClickEventHandler )" />
          <Method Sig="instance void remove_RowDividerDoubleClick(class DataGridViewRowDividerDoubleClickEventHandler )" />
          <Method Sig="instance void add_RowDividerHeightChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_RowDividerHeightChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_RowEnter(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_RowEnter(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_RowErrorTextChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_RowErrorTextChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_RowErrorTextNeeded(class DataGridViewRowErrorTextNeededEventHandler )" />
          <Method Sig="instance void remove_RowErrorTextNeeded(class DataGridViewRowErrorTextNeededEventHandler )" />
          <Method Sig="instance void add_RowHeaderMouseClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void remove_RowHeaderMouseClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void add_RowHeaderMouseDoubleClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void remove_RowHeaderMouseDoubleClick(class DataGridViewCellMouseEventHandler )" />
          <Method Sig="instance void add_RowHeaderCellChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_RowHeaderCellChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_RowHeightChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_RowHeightChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_RowHeightInfoNeeded(class DataGridViewRowHeightInfoNeededEventHandler )" />
          <Method Sig="instance void remove_RowHeightInfoNeeded(class DataGridViewRowHeightInfoNeededEventHandler )" />
          <Method Sig="instance void add_RowHeightInfoPushed(class DataGridViewRowHeightInfoPushedEventHandler )" />
          <Method Sig="instance void remove_RowHeightInfoPushed(class DataGridViewRowHeightInfoPushedEventHandler )" />
          <Method Sig="instance void add_RowLeave(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_RowLeave(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_RowMinimumHeightChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_RowMinimumHeightChanged(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_RowPostPaint(class DataGridViewRowPostPaintEventHandler )" />
          <Method Sig="instance void remove_RowPostPaint(class DataGridViewRowPostPaintEventHandler )" />
          <Method Sig="instance void add_RowPrePaint(class DataGridViewRowPrePaintEventHandler )" />
          <Method Sig="instance void remove_RowPrePaint(class DataGridViewRowPrePaintEventHandler )" />
          <Method Sig="instance void add_RowsAdded(class DataGridViewRowsAddedEventHandler )" />
          <Method Sig="instance void remove_RowsAdded(class DataGridViewRowsAddedEventHandler )" />
          <Method Sig="instance void add_RowsRemoved(class DataGridViewRowsRemovedEventHandler )" />
          <Method Sig="instance void remove_RowsRemoved(class DataGridViewRowsRemovedEventHandler )" />
          <Method Sig="instance void add_RowStateChanged(class DataGridViewRowStateChangedEventHandler )" />
          <Method Sig="instance void remove_RowStateChanged(class DataGridViewRowStateChangedEventHandler )" />
          <Method Sig="instance void add_RowUnshared(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_RowUnshared(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_RowValidated(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void remove_RowValidated(class DataGridViewCellEventHandler )" />
          <Method Sig="instance void add_RowValidating(class DataGridViewCellCancelEventHandler )" />
          <Method Sig="instance void remove_RowValidating(class DataGridViewCellCancelEventHandler )" />
          <Method Sig="instance void add_Scroll(class ScrollEventHandler )" />
          <Method Sig="instance void remove_Scroll(class ScrollEventHandler )" />
          <Method Sig="instance void add_SelectionChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectionChanged(class EventHandler )" />
          <Method Sig="instance void add_SortCompare(class DataGridViewSortCompareEventHandler )" />
          <Method Sig="instance void remove_SortCompare(class DataGridViewSortCompareEventHandler )" />
          <Method Sig="instance void add_Sorted(class EventHandler )" />
          <Method Sig="instance void remove_Sorted(class EventHandler )" />
          <Method Sig="instance void add_StyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_StyleChanged(class EventHandler )" />
          <Method Sig="instance void add_UserAddedRow(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_UserAddedRow(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_UserDeletedRow(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void remove_UserDeletedRow(class DataGridViewRowEventHandler )" />
          <Method Sig="instance void add_UserDeletingRow(class DataGridViewRowCancelEventHandler )" />
          <Method Sig="instance void remove_UserDeletingRow(class DataGridViewRowCancelEventHandler )" />
          <Method Sig="instance class DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle(class DataGridViewAdvancedBorderStyle , class DataGridViewAdvancedBorderStyle , bool , bool )" />
          <Method Sig="instance bool AreAllCellsSelected(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeColumn(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeColumn(int , struct DataGridViewAutoSizeColumnMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeColumnHeadersHeight()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeColumnHeadersHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeColumns()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeColumns(struct DataGridViewAutoSizeColumnsMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeRow(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeRow(int , struct DataGridViewAutoSizeRowMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeRowHeadersWidth(struct DataGridViewRowHeadersWidthSizeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeRowHeadersWidth(int , struct DataGridViewRowHeadersWidthSizeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeRows()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeRows(struct DataGridViewAutoSizeRowsMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool BeginEdit(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool CancelEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ClearSelection()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool CommitEdit(struct DataGridViewDataErrorContexts )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int DisplayedColumnCount(bool )" />
          <Method Sig="instance int DisplayedRowCount(bool )" />
          <Method Sig="instance bool EndEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool EndEdit(struct DataGridViewDataErrorContexts )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetCellCount(struct DataGridViewElementStates )" />
          <Method Sig="instance struct Rectangle GetCellDisplayRectangle(int , int , bool )" />
          <Method Sig="instance class DataObject GetClipboardContent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle GetColumnDisplayRectangle(int , bool )" />
          <Method Sig="instance struct Rectangle GetRowDisplayRectangle(int , bool )" />
          <Method Sig="instance class HitTestInfo HitTest(int , int )" />
          <Method Sig="instance void InvalidateCell(class DataGridViewCell )" />
          <Method Sig="instance void InvalidateCell(int , int )" />
          <Method Sig="instance void InvalidateColumn(int )" />
          <Method Sig="instance void InvalidateRow(int )" />
          <Method Sig="instance void NotifyCurrentCellDirty(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool RefreshEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetText()" />
          <Method Sig="instance void SelectAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Sort(class DataGridViewColumn , struct ListSortDirection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Sort(class IComparer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void UpdateCellErrorText(int , int )" />
          <Method Sig="instance void UpdateCellValue(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void UpdateRowErrorText(int )" />
          <Method Sig="instance void UpdateRowErrorText(int , int )" />
          <Method Sig="instance void UpdateRowHeightInfo(int , bool )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewAdvancedBorderStyle">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance struct DataGridViewAdvancedCellBorderStyle get_All()" />
          <Method Sig="instance void set_All(struct DataGridViewAdvancedCellBorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewAdvancedCellBorderStyle get_Bottom()" />
          <Method Sig="instance void set_Bottom(struct DataGridViewAdvancedCellBorderStyle )" />
          <Method Sig="instance struct DataGridViewAdvancedCellBorderStyle get_Left()" />
          <Method Sig="instance void set_Left(struct DataGridViewAdvancedCellBorderStyle )" />
          <Method Sig="instance struct DataGridViewAdvancedCellBorderStyle get_Right()" />
          <Method Sig="instance void set_Right(struct DataGridViewAdvancedCellBorderStyle )" />
          <Method Sig="instance struct DataGridViewAdvancedCellBorderStyle get_Top()" />
          <Method Sig="instance void set_Top(struct DataGridViewAdvancedCellBorderStyle )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="DataGridViewAutoSizeColumnModeEventArgs">
          <Method Sig="instance void .ctor(class DataGridViewColumn , struct DataGridViewAutoSizeColumnMode )" />
          <Method Sig="instance class DataGridViewColumn get_Column()" />
          <Method Sig="instance struct DataGridViewAutoSizeColumnMode get_PreviousMode()" />
        </Type>
        <Type Name="DataGridViewAutoSizeColumnsModeEventArgs">
          <Method Sig="instance void .ctor([] struct DataGridViewAutoSizeColumnMode )" />
          <Method Sig="instance [] struct DataGridViewAutoSizeColumnMode get_PreviousModes()" />
        </Type>
        <Type Name="DataGridViewAutoSizeModeEventArgs">
          <Method Sig="instance void .ctor(bool )" />
          <Method Sig="instance bool get_PreviousModeAutoSized()" />
        </Type>
        <Type Name="DataGridViewElement">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance struct DataGridViewElementStates get_State()" />
          <Method Sig="instance class DataGridView get_DataGridView()" />
        </Type>
        <Type Name="DataGridViewBand">
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance class DataGridViewCellStyle get_DefaultCellStyle()" />
          <Method Sig="instance void set_DefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_DefaultHeaderCellType()" />
          <Method Sig="instance void set_DefaultHeaderCellType(class Type )" />
          <Method Sig="instance bool get_Displayed()" />
          <Method Sig="instance bool get_Frozen()" />
          <Method Sig="instance void set_Frozen(bool )" />
          <Method Sig="instance bool get_HasDefaultCellStyle()" />
          <Method Sig="instance int get_Index()" />
          <Method Sig="instance class DataGridViewCellStyle get_InheritedStyle()" />
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewTriState get_Resizable()" />
          <Method Sig="instance void set_Resizable(struct DataGridViewTriState )" />
          <Method Sig="instance bool get_Selected()" />
          <Method Sig="instance void set_Selected(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Dispose()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewBindingCompleteEventArgs">
          <Method Sig="instance void .ctor(struct ListChangedType )" />
          <Method Sig="instance struct ListChangedType get_ListChangedType()" />
        </Type>
        <Type Name="DataGridViewCell">
          <Method Sig="instance class AccessibleObject get_AccessibilityObject()" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance struct Rectangle get_ContentBounds()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance object get_DefaultNewRowValue()" />
          <Method Sig="instance bool get_Displayed()" />
          <Method Sig="instance object get_EditedFormattedValue()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_EditType()" />
          <Method Sig="instance struct Rectangle get_ErrorIconBounds()" />
          <Method Sig="instance string get_ErrorText()" />
          <Method Sig="instance void set_ErrorText(string )" />
          <Method Sig="instance object get_FormattedValue()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_FormattedValueType()" />
          <Method Sig="instance bool get_Frozen()" />
          <Method Sig="instance bool get_HasStyle()" />
          <Method Sig="instance struct DataGridViewElementStates get_InheritedState()" />
          <Method Sig="instance class DataGridViewCellStyle get_InheritedStyle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsInEditMode()" />
          <Method Sig="instance class DataGridViewColumn get_OwningColumn()" />
          <Method Sig="instance class DataGridViewRow get_OwningRow()" />
          <Method Sig="instance struct Size get_PreferredSize()" />
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Resizable()" />
          <Method Sig="instance int get_RowIndex()" />
          <Method Sig="instance bool get_Selected()" />
          <Method Sig="instance void set_Selected(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_Size()" />
          <Method Sig="instance class DataGridViewCellStyle get_Style()" />
          <Method Sig="instance void set_Style(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance void set_ToolTipText(string )" />
          <Method Sig="instance object get_Value()" />
          <Method Sig="instance void set_Value(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_ValueType()" />
          <Method Sig="instance void set_ValueType(class Type )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance class DataGridViewAdvancedBorderStyle AdjustCellBorderStyle(class DataGridViewAdvancedBorderStyle , class DataGridViewAdvancedBorderStyle , bool , bool , bool , bool )" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DetachEditingControl()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Dispose()" />
          <Method Sig="instance struct Rectangle GetContentBounds(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object GetEditedFormattedValue(int , struct DataGridViewDataErrorContexts )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContextMenuStrip GetInheritedContextMenuStrip(int )" />
          <Method Sig="instance struct DataGridViewElementStates GetInheritedState(int )" />
          <Method Sig="instance class DataGridViewCellStyle GetInheritedStyle(class DataGridViewCellStyle , int , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void InitializeEditingControl(int , object , class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool KeyEntersEditMode(class KeyEventArgs )" />
          <Method Sig="int MeasureTextHeight(class Graphics , string , class Font , int , struct TextFormatFlags )" />
          <Method Sig="int MeasureTextHeight(class Graphics , string , class Font , int , struct TextFormatFlags , &amp; bool )" />
          <Method Sig="struct Size MeasureTextPreferredSize(class Graphics , string , class Font , float , struct TextFormatFlags )" />
          <Method Sig="struct Size MeasureTextSize(class Graphics , string , class Font , struct TextFormatFlags )" />
          <Method Sig="int MeasureTextWidth(class Graphics , string , class Font , int , struct TextFormatFlags )" />
          <Method Sig="instance object ParseFormattedValue(object , class DataGridViewCellStyle , class TypeConverter , class TypeConverter )" />
          <Method Sig="instance void PositionEditingControl(bool , bool , struct Rectangle , struct Rectangle , class DataGridViewCellStyle , bool , bool , bool , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle PositionEditingPanel(struct Rectangle , struct Rectangle , class DataGridViewCellStyle , bool , bool , bool , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewButtonCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance class Type get_EditType()" />
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_FormattedValueType()" />
          <Method Sig="instance bool get_UseColumnTextForButtonValue()" />
          <Method Sig="instance void set_UseColumnTextForButtonValue(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_ValueType()" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewColumn">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class DataGridViewCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewAutoSizeColumnMode get_AutoSizeMode()" />
          <Method Sig="instance void set_AutoSizeMode(struct DataGridViewAutoSizeColumnMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCell get_CellTemplate()" />
          <Method Sig="instance void set_CellTemplate(class DataGridViewCell )" />
          <Method Sig="instance class Type get_CellType()" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance string get_DataPropertyName()" />
          <Method Sig="instance void set_DataPropertyName(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCellStyle get_DefaultCellStyle()" />
          <Method Sig="instance void set_DefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_DisplayIndex()" />
          <Method Sig="instance void set_DisplayIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Disposed(class EventHandler )" />
          <Method Sig="instance void remove_Disposed(class EventHandler )" />
          <Method Sig="instance int get_DividerWidth()" />
          <Method Sig="instance void set_DividerWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance float get_FillWeight()" />
          <Method Sig="instance void set_FillWeight(float )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Frozen()" />
          <Method Sig="instance void set_Frozen(bool )" />
          <Method Sig="instance class DataGridViewColumnHeaderCell get_HeaderCell()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_HeaderCell(class DataGridViewColumnHeaderCell )" />
          <Method Sig="instance string get_HeaderText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_HeaderText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewAutoSizeColumnMode get_InheritedAutoSizeMode()" />
          <Method Sig="instance class DataGridViewCellStyle get_InheritedStyle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsDataBound()" />
          <Method Sig="instance int get_MinimumWidth()" />
          <Method Sig="instance void set_MinimumWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewTriState get_Resizable()" />
          <Method Sig="instance void set_Resizable(struct DataGridViewTriState )" />
          <Method Sig="instance class ISite get_Site()" />
          <Method Sig="instance void set_Site(class ISite )" />
          <Method Sig="instance struct DataGridViewColumnSortMode get_SortMode()" />
          <Method Sig="instance void set_SortMode(struct DataGridViewColumnSortMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ToolTipText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_ToolTipText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_ValueType()" />
          <Method Sig="instance void set_ValueType(class Type )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )" />
          <Method Sig="instance int get_Width()" />
          <Method Sig="instance void set_Width(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetPreferredWidth(struct DataGridViewAutoSizeColumnMode , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewButtonColumn">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCell get_CellTemplate()" />
          <Method Sig="instance void set_CellTemplate(class DataGridViewCell )" />
          <Method Sig="instance class DataGridViewCellStyle get_DefaultCellStyle()" />
          <Method Sig="instance void set_DefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseColumnTextForButtonValue()" />
          <Method Sig="instance void set_UseColumnTextForButtonValue(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewCellCancelEventArgs">
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance int get_RowIndex()" />
        </Type>
        <Type Name="DataGridViewCellCollection">
          <Method Sig="instance void .ctor(class DataGridViewRow )" />
          <Method Sig="instance class DataGridViewCell get_Item(int )" />
          <Method Sig="instance void set_Item(int , class DataGridViewCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCell get_Item(string )" />
          <Method Sig="instance void set_Item(string , class DataGridViewCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance int Add(class DataGridViewCell )" />
          <Method Sig="instance void AddRange([] class DataGridViewCell )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance void CopyTo([] class DataGridViewCell , int )" />
          <Method Sig="instance bool Contains(class DataGridViewCell )" />
          <Method Sig="instance int IndexOf(class DataGridViewCell )" />
          <Method Sig="instance void Insert(int , class DataGridViewCell )" />
          <Method Sig="instance void Remove(class DataGridViewCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAt(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="DataGridViewCellEventArgs">
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance int get_RowIndex()" />
        </Type>
        <Type Name="DataGridViewCellContextMenuStripNeededEventArgs">
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
        </Type>
        <Type Name="DataGridViewCellErrorTextNeededEventArgs">
          <Method Sig="instance string get_ErrorText()" />
          <Method Sig="instance void set_ErrorText(string )" />
        </Type>
        <Type Name="DataGridViewCellFormattingEventArgs">
          <Method Sig="instance void .ctor(int , int , object , class Type , class DataGridViewCellStyle )" />
          <Method Sig="instance class DataGridViewCellStyle get_CellStyle()" />
          <Method Sig="instance void set_CellStyle(class DataGridViewCellStyle )" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance bool get_FormattingApplied()" />
          <Method Sig="instance void set_FormattingApplied(bool )" />
          <Method Sig="instance int get_RowIndex()" />
        </Type>
        <Type Name="MouseEventArgs">
          <Method Sig="instance void .ctor(struct MouseButtons , int , int , int , int )" />
          <Method Sig="instance struct MouseButtons get_Button()" />
          <Method Sig="instance int get_Clicks()" />
          <Method Sig="instance int get_X()" />
          <Method Sig="instance int get_Y()" />
          <Method Sig="instance int get_Delta()" />
          <Method Sig="instance struct Point get_Location()" />
        </Type>
        <Type Name="DataGridViewCellMouseEventArgs">
          <Method Sig="instance void .ctor(int , int , int , int , class MouseEventArgs )" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance int get_RowIndex()" />
        </Type>
        <Type Name="DataGridViewCellPaintingEventArgs">
          <Method Sig="instance void .ctor(class DataGridView , class Graphics , struct Rectangle , struct Rectangle , int , int , struct DataGridViewElementStates , object , object , string , class DataGridViewCellStyle , class DataGridViewAdvancedBorderStyle , struct DataGridViewPaintParts )" />
          <Method Sig="instance class DataGridViewAdvancedBorderStyle get_AdvancedBorderStyle()" />
          <Method Sig="instance struct Rectangle get_CellBounds()" />
          <Method Sig="instance class DataGridViewCellStyle get_CellStyle()" />
          <Method Sig="instance struct Rectangle get_ClipBounds()" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance string get_ErrorText()" />
          <Method Sig="instance object get_FormattedValue()" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance struct DataGridViewPaintParts get_PaintParts()" />
          <Method Sig="instance int get_RowIndex()" />
          <Method Sig="instance struct DataGridViewElementStates get_State()" />
          <Method Sig="instance object get_Value()" />
          <Method Sig="instance void Paint(struct Rectangle , struct DataGridViewPaintParts )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintBackground(struct Rectangle , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintContent(struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="DataGridViewCellParsingEventArgs">
          <Method Sig="instance void .ctor(int , int , object , class Type , class DataGridViewCellStyle )" />
          <Method Sig="instance int get_RowIndex()" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance class DataGridViewCellStyle get_InheritedCellStyle()" />
          <Method Sig="instance void set_InheritedCellStyle(class DataGridViewCellStyle )" />
          <Method Sig="instance bool get_ParsingApplied()" />
          <Method Sig="instance void set_ParsingApplied(bool )" />
        </Type>
        <Type Name="DataGridViewCellStateChangedEventArgs">
          <Method Sig="instance void .ctor(class DataGridViewCell , struct DataGridViewElementStates )" />
          <Method Sig="instance class DataGridViewCell get_Cell()" />
          <Method Sig="instance struct DataGridViewElementStates get_StateChanged()" />
        </Type>
        <Type Name="DataGridViewCellStyle">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class DataGridViewCellStyle )" />
          <Method Sig="instance struct DataGridViewContentAlignment get_Alignment()" />
          <Method Sig="instance void set_Alignment(struct DataGridViewContentAlignment )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_DataSourceNullValue()" />
          <Method Sig="instance void set_DataSourceNullValue(object )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance string get_Format()" />
          <Method Sig="instance void set_Format(string )" />
          <Method Sig="instance class IFormatProvider get_FormatProvider()" />
          <Method Sig="instance void set_FormatProvider(class IFormatProvider )" />
          <Method Sig="instance bool get_IsDataSourceNullValueDefault()" />
          <Method Sig="instance bool get_IsFormatProviderDefault()" />
          <Method Sig="instance bool get_IsNullValueDefault()" />
          <Method Sig="instance object get_NullValue()" />
          <Method Sig="instance void set_NullValue(object )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance struct Color get_SelectionBackColor()" />
          <Method Sig="instance void set_SelectionBackColor(struct Color )" />
          <Method Sig="instance struct Color get_SelectionForeColor()" />
          <Method Sig="instance void set_SelectionForeColor(struct Color )" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance struct DataGridViewTriState get_WrapMode()" />
          <Method Sig="instance void set_WrapMode(struct DataGridViewTriState )" />
          <Method Sig="instance void ApplyStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCellStyle Clone()" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewCellStyleContentChangedEventArgs">
          <Method Sig="instance class DataGridViewCellStyle get_CellStyle()" />
          <Method Sig="instance struct DataGridViewCellStyleScopes get_CellStyleScope()" />
        </Type>
        <Type Name="DataGridViewCellStyleConverter">
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="DataGridViewCellToolTipTextNeededEventArgs">
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance void set_ToolTipText(string )" />
        </Type>
        <Type Name="DataGridViewCellValidatingEventArgs">
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance object get_FormattedValue()" />
          <Method Sig="instance int get_RowIndex()" />
        </Type>
        <Type Name="DataGridViewCellValueEventArgs">
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance int get_RowIndex()" />
          <Method Sig="instance object get_Value()" />
          <Method Sig="instance void set_Value(object )" />
        </Type>
        <Type Name="DataGridViewCheckBoxCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(bool )" />
          <Method Sig="instance object get_EditingCellFormattedValue()" />
          <Method Sig="instance void set_EditingCellFormattedValue(object )" />
          <Method Sig="instance bool get_EditingCellValueChanged()" />
          <Method Sig="instance void set_EditingCellValueChanged(bool )" />
          <Method Sig="instance object GetEditingCellFormattedValue(struct DataGridViewDataErrorContexts )" />
          <Method Sig="instance void PrepareEditingCellForEdit(bool )" />
          <Method Sig="instance class Type get_EditType()" />
          <Method Sig="instance object get_FalseValue()" />
          <Method Sig="instance void set_FalseValue(object )" />
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_FormattedValueType()" />
          <Method Sig="instance object get_IndeterminateValue()" />
          <Method Sig="instance void set_IndeterminateValue(object )" />
          <Method Sig="instance bool get_ThreeState()" />
          <Method Sig="instance void set_ThreeState(bool )" />
          <Method Sig="instance object get_TrueValue()" />
          <Method Sig="instance void set_TrueValue(object )" />
          <Method Sig="instance class Type get_ValueType()" />
          <Method Sig="instance void set_ValueType(class Type )" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object ParseFormattedValue(object , class DataGridViewCellStyle , class TypeConverter , class TypeConverter )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewCheckBoxColumn">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCell get_CellTemplate()" />
          <Method Sig="instance void set_CellTemplate(class DataGridViewCell )" />
          <Method Sig="instance class DataGridViewCellStyle get_DefaultCellStyle()" />
          <Method Sig="instance void set_DefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_FalseValue()" />
          <Method Sig="instance void set_FalseValue(object )" />
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_IndeterminateValue()" />
          <Method Sig="instance void set_IndeterminateValue(object )" />
          <Method Sig="instance bool get_ThreeState()" />
          <Method Sig="instance void set_ThreeState(bool )" />
          <Method Sig="instance object get_TrueValue()" />
          <Method Sig="instance void set_TrueValue(object )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="DataGridViewColumnCollection">
          <Method Sig="instance void .ctor(class DataGridView )" />
          <Method Sig="instance class DataGridViewColumn get_Item(int )" />
          <Method Sig="instance class DataGridViewColumn get_Item(string )" />
          <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance int Add(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Add(class DataGridViewColumn )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddRange([] class DataGridViewColumn )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Contains(class DataGridViewColumn )" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance void CopyTo([] class DataGridViewColumn , int )" />
          <Method Sig="instance int GetColumnCount(struct DataGridViewElementStates )" />
          <Method Sig="instance int GetColumnsWidth(struct DataGridViewElementStates )" />
          <Method Sig="instance class DataGridViewColumn GetFirstColumn(struct DataGridViewElementStates )" />
          <Method Sig="instance class DataGridViewColumn GetFirstColumn(struct DataGridViewElementStates , struct DataGridViewElementStates )" />
          <Method Sig="instance class DataGridViewColumn GetLastColumn(struct DataGridViewElementStates , struct DataGridViewElementStates )" />
          <Method Sig="instance class DataGridViewColumn GetNextColumn(class DataGridViewColumn , struct DataGridViewElementStates , struct DataGridViewElementStates )" />
          <Method Sig="instance class DataGridViewColumn GetPreviousColumn(class DataGridViewColumn , struct DataGridViewElementStates , struct DataGridViewElementStates )" />
          <Method Sig="instance int IndexOf(class DataGridViewColumn )" />
          <Method Sig="instance void Insert(int , class DataGridViewColumn )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Remove(class DataGridViewColumn )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Remove(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAt(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewColumnDesignTimeVisibleAttribute">
          <Method Sig="instance void .ctor(bool )" />
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="instance bool IsDefaultAttribute()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="HandledMouseEventArgs">
          <Method Sig="instance void .ctor(struct MouseButtons , int , int , int , int )" />
          <Method Sig="instance void .ctor(struct MouseButtons , int , int , int , int , bool )" />
          <Method Sig="instance bool get_Handled()" />
          <Method Sig="instance void set_Handled(bool )" />
        </Type>
        <Type Name="DataGridViewColumnDividerDoubleClickEventArgs">
          <Method Sig="instance void .ctor(int , class HandledMouseEventArgs )" />
          <Method Sig="instance int get_ColumnIndex()" />
        </Type>
        <Type Name="DataGridViewColumnEventArgs">
          <Method Sig="instance void .ctor(class DataGridViewColumn )" />
          <Method Sig="instance class DataGridViewColumn get_Column()" />
        </Type>
        <Type Name="DataGridViewHeaderCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_Displayed()" />
          <Method Sig="instance class Type get_FormattedValueType()" />
          <Method Sig="instance bool get_Frozen()" />
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )" />
          <Method Sig="instance bool get_Resizable()" />
          <Method Sig="instance bool get_Selected()" />
          <Method Sig="instance void set_Selected(bool )" />
          <Method Sig="instance class Type get_ValueType()" />
          <Method Sig="instance void set_ValueType(class Type )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContextMenuStrip GetInheritedContextMenuStrip(int )" />
          <Method Sig="instance struct DataGridViewElementStates GetInheritedState(int )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewColumnHeaderCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance struct SortOrder get_SortGlyphDirection()" />
          <Method Sig="instance void set_SortGlyphDirection(struct SortOrder )" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContextMenuStrip GetInheritedContextMenuStrip(int )" />
          <Method Sig="instance class DataGridViewCellStyle GetInheritedStyle(class DataGridViewCellStyle , int , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewColumnStateChangedEventArgs">
          <Method Sig="instance void .ctor(class DataGridViewColumn , struct DataGridViewElementStates )" />
          <Method Sig="instance class DataGridViewColumn get_Column()" />
          <Method Sig="instance struct DataGridViewElementStates get_StateChanged()" />
        </Type>
        <Type Name="DataGridViewComboBoxCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_AutoComplete()" />
          <Method Sig="instance void set_AutoComplete(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance void set_DataSource(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_DisplayMember()" />
          <Method Sig="instance void set_DisplayMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewComboBoxDisplayStyle get_DisplayStyle()" />
          <Method Sig="instance void set_DisplayStyle(struct DataGridViewComboBoxDisplayStyle )" />
          <Method Sig="instance bool get_DisplayStyleForCurrentCellOnly()" />
          <Method Sig="instance void set_DisplayStyleForCurrentCellOnly(bool )" />
          <Method Sig="instance int get_DropDownWidth()" />
          <Method Sig="instance void set_DropDownWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_EditType()" />
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_FormattedValueType()" />
          <Method Sig="instance class ObjectCollection get_Items()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_MaxDropDownItems()" />
          <Method Sig="instance void set_MaxDropDownItems(int )" />
          <Method Sig="instance bool get_Sorted()" />
          <Method Sig="instance void set_Sorted(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ValueMember()" />
          <Method Sig="instance void set_ValueMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_ValueType()" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DetachEditingControl()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void InitializeEditingControl(int , object , class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool KeyEntersEditMode(class KeyEventArgs )" />
          <Method Sig="instance object ParseFormattedValue(object , class DataGridViewCellStyle , class TypeConverter , class TypeConverter )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewComboBoxColumn">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoComplete()" />
          <Method Sig="instance void set_AutoComplete(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCell get_CellTemplate()" />
          <Method Sig="instance void set_CellTemplate(class DataGridViewCell )" />
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance void set_DataSource(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_DisplayMember()" />
          <Method Sig="instance void set_DisplayMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewComboBoxDisplayStyle get_DisplayStyle()" />
          <Method Sig="instance void set_DisplayStyle(struct DataGridViewComboBoxDisplayStyle )" />
          <Method Sig="instance bool get_DisplayStyleForCurrentCellOnly()" />
          <Method Sig="instance void set_DisplayStyleForCurrentCellOnly(bool )" />
          <Method Sig="instance int get_DropDownWidth()" />
          <Method Sig="instance void set_DropDownWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ObjectCollection get_Items()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ValueMember()" />
          <Method Sig="instance void set_ValueMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_MaxDropDownItems()" />
          <Method Sig="instance void set_MaxDropDownItems(int )" />
          <Method Sig="instance bool get_Sorted()" />
          <Method Sig="instance void set_Sorted(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewComboBoxEditingControl">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridView get_EditingControlDataGridView()" />
          <Method Sig="instance void set_EditingControlDataGridView(class DataGridView )" />
          <Method Sig="instance object get_EditingControlFormattedValue()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_EditingControlFormattedValue(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_EditingControlRowIndex()" />
          <Method Sig="instance void set_EditingControlRowIndex(int )" />
          <Method Sig="instance bool get_EditingControlValueChanged()" />
          <Method Sig="instance void set_EditingControlValueChanged(bool )" />
          <Method Sig="instance class Cursor get_EditingPanelCursor()" />
          <Method Sig="instance bool get_RepositionEditingControlOnValueChange()" />
          <Method Sig="instance void ApplyCellStyleToEditingControl(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool EditingControlWantsInputKey(struct Keys , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object GetEditingControlFormattedValue(struct DataGridViewDataErrorContexts )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PrepareEditingControlForEdit(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="DataGridViewDataErrorEventArgs">
          <Method Sig="instance void .ctor(class Exception , int , int , struct DataGridViewDataErrorContexts )" />
          <Method Sig="instance struct DataGridViewDataErrorContexts get_Context()" />
          <Method Sig="instance class Exception get_Exception()" />
          <Method Sig="instance bool get_ThrowException()" />
          <Method Sig="instance void set_ThrowException(bool )" />
        </Type>
        <Type Name="DataGridViewEditingControlShowingEventArgs">
          <Method Sig="instance void .ctor(class Control , class DataGridViewCellStyle )" />
          <Method Sig="instance class DataGridViewCellStyle get_CellStyle()" />
          <Method Sig="instance void set_CellStyle(class DataGridViewCellStyle )" />
          <Method Sig="instance class Control get_Control()" />
        </Type>
        <Type Name="DataGridViewAutoSizeColumnModeEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewAutoSizeColumnModeEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewAutoSizeColumnModeEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewAutoSizeColumnsModeEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewAutoSizeColumnsModeEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewAutoSizeColumnsModeEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewAutoSizeModeEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewAutoSizeModeEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewAutoSizeModeEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewBindingCompleteEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewBindingCompleteEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewBindingCompleteEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellCancelEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellCancelEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellCancelEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellContextMenuStripNeededEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellContextMenuStripNeededEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellContextMenuStripNeededEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellErrorTextNeededEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellErrorTextNeededEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellErrorTextNeededEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellFormattingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellFormattingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellFormattingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellMouseEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellMouseEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellMouseEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellPaintingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellPaintingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellPaintingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellParsingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellParsingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellParsingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellStateChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellStateChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellStateChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellStyleContentChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellStyleContentChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellStyleContentChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellToolTipTextNeededEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellToolTipTextNeededEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellToolTipTextNeededEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellValidatingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellValidatingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellValidatingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewCellValueEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewCellValueEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewCellValueEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewColumnDividerDoubleClickEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewColumnDividerDoubleClickEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewColumnDividerDoubleClickEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewColumnEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewColumnEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewColumnEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewColumnStateChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewColumnStateChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewColumnStateChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewEditingControlShowingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewEditingControlShowingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewEditingControlShowingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewDataErrorEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewDataErrorEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewDataErrorEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowCancelEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowCancelEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowCancelEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowContextMenuStripNeededEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowContextMenuStripNeededEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowContextMenuStripNeededEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowDividerDoubleClickEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowDividerDoubleClickEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowDividerDoubleClickEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowErrorTextNeededEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowErrorTextNeededEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowErrorTextNeededEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowHeightInfoNeededEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowHeightInfoNeededEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowHeightInfoNeededEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowHeightInfoPushedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowHeightInfoPushedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowHeightInfoPushedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowPostPaintEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowPostPaintEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowPostPaintEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowPrePaintEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowPrePaintEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowPrePaintEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowsAddedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowsAddedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowsAddedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowsRemovedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowsRemovedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowsRemovedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewRowStateChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewRowStateChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewRowStateChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewSortCompareEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DataGridViewSortCompareEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataGridViewSortCompareEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DataGridViewImageCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(bool )" />
          <Method Sig="instance object get_DefaultNewRowValue()" />
          <Method Sig="instance string get_Description()" />
          <Method Sig="instance void set_Description(string )" />
          <Method Sig="instance class Type get_EditType()" />
          <Method Sig="instance class Type get_FormattedValueType()" />
          <Method Sig="instance struct DataGridViewImageCellLayout get_ImageLayout()" />
          <Method Sig="instance void set_ImageLayout(struct DataGridViewImageCellLayout )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ValueIsIcon()" />
          <Method Sig="instance void set_ValueIsIcon(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_ValueType()" />
          <Method Sig="instance void set_ValueType(class Type )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewImageColumn">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCell get_CellTemplate()" />
          <Method Sig="instance void set_CellTemplate(class DataGridViewCell )" />
          <Method Sig="instance class DataGridViewCellStyle get_DefaultCellStyle()" />
          <Method Sig="instance void set_DefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Description()" />
          <Method Sig="instance void set_Description(string )" />
          <Method Sig="instance class Icon get_Icon()" />
          <Method Sig="instance void set_Icon(class Icon )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_Image()" />
          <Method Sig="instance void set_Image(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewImageCellLayout get_ImageLayout()" />
          <Method Sig="instance void set_ImageLayout(struct DataGridViewImageCellLayout )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ValuesAreIcons()" />
          <Method Sig="instance void set_ValuesAreIcons(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewLinkCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance struct Color get_ActiveLinkColor()" />
          <Method Sig="instance void set_ActiveLinkColor(struct Color )" />
          <Method Sig="instance class Type get_EditType()" />
          <Method Sig="instance class Type get_FormattedValueType()" />
          <Method Sig="instance struct LinkBehavior get_LinkBehavior()" />
          <Method Sig="instance void set_LinkBehavior(struct LinkBehavior )" />
          <Method Sig="instance struct Color get_LinkColor()" />
          <Method Sig="instance void set_LinkColor(struct Color )" />
          <Method Sig="instance bool get_LinkVisited()" />
          <Method Sig="instance void set_LinkVisited(bool )" />
          <Method Sig="instance bool get_TrackVisitedState()" />
          <Method Sig="instance void set_TrackVisitedState(bool )" />
          <Method Sig="instance bool get_UseColumnTextForLinkValue()" />
          <Method Sig="instance void set_UseColumnTextForLinkValue(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_VisitedLinkColor()" />
          <Method Sig="instance void set_VisitedLinkColor(struct Color )" />
          <Method Sig="instance class Type get_ValueType()" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewLinkColumn">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ActiveLinkColor()" />
          <Method Sig="instance void set_ActiveLinkColor(struct Color )" />
          <Method Sig="instance class DataGridViewCell get_CellTemplate()" />
          <Method Sig="instance void set_CellTemplate(class DataGridViewCell )" />
          <Method Sig="instance struct LinkBehavior get_LinkBehavior()" />
          <Method Sig="instance void set_LinkBehavior(struct LinkBehavior )" />
          <Method Sig="instance struct Color get_LinkColor()" />
          <Method Sig="instance void set_LinkColor(struct Color )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TrackVisitedState()" />
          <Method Sig="instance void set_TrackVisitedState(bool )" />
          <Method Sig="instance bool get_UseColumnTextForLinkValue()" />
          <Method Sig="instance void set_UseColumnTextForLinkValue(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_VisitedLinkColor()" />
          <Method Sig="instance void set_VisitedLinkColor(struct Color )" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewRow">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class AccessibleObject get_AccessibilityObject()" />
          <Method Sig="instance class DataGridViewCellCollection get_Cells()" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance object get_DataBoundItem()" />
          <Method Sig="instance class DataGridViewCellStyle get_DefaultCellStyle()" />
          <Method Sig="instance void set_DefaultCellStyle(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Displayed()" />
          <Method Sig="instance int get_DividerHeight()" />
          <Method Sig="instance void set_DividerHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ErrorText()" />
          <Method Sig="instance void set_ErrorText(string )" />
          <Method Sig="instance bool get_Frozen()" />
          <Method Sig="instance void set_Frozen(bool )" />
          <Method Sig="instance class DataGridViewRowHeaderCell get_HeaderCell()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_HeaderCell(class DataGridViewRowHeaderCell )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Height()" />
          <Method Sig="instance void set_Height(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCellStyle get_InheritedStyle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsNewRow()" />
          <Method Sig="instance int get_MinimumHeight()" />
          <Method Sig="instance void set_MinimumHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewTriState get_Resizable()" />
          <Method Sig="instance void set_Resizable(struct DataGridViewTriState )" />
          <Method Sig="instance bool get_Selected()" />
          <Method Sig="instance void set_Selected(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewElementStates get_State()" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )" />
          <Method Sig="instance class DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle(class DataGridViewAdvancedBorderStyle , class DataGridViewAdvancedBorderStyle , bool , bool , bool , bool )" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void CreateCells(class DataGridView )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void CreateCells(class DataGridView , [] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContextMenuStrip GetContextMenuStrip(int )" />
          <Method Sig="instance string GetErrorText(int )" />
          <Method Sig="instance int GetPreferredHeight(int , struct DataGridViewAutoSizeRowMode , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewElementStates GetState(int )" />
          <Method Sig="instance bool SetValues([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewRowCancelEventArgs">
          <Method Sig="instance void .ctor(class DataGridViewRow )" />
          <Method Sig="instance class DataGridViewRow get_Row()" />
        </Type>
        <Type Name="DataGridViewRowCollection">
          <Method Sig="instance void .ctor(class DataGridView )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class DataGridViewRow SharedRow(int )" />
          <Method Sig="instance class DataGridViewRow get_Item(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
          <Method Sig="instance int Add()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Add([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Add(class DataGridViewRow )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Add(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int AddCopy(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int AddCopies(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddRange([] class DataGridViewRow )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Contains(class DataGridViewRow )" />
          <Method Sig="instance void CopyTo([] class DataGridViewRow , int )" />
          <Method Sig="instance int GetFirstRow(struct DataGridViewElementStates )" />
          <Method Sig="instance int GetFirstRow(struct DataGridViewElementStates , struct DataGridViewElementStates )" />
          <Method Sig="instance int GetLastRow(struct DataGridViewElementStates )" />
          <Method Sig="instance int GetNextRow(int , struct DataGridViewElementStates )" />
          <Method Sig="instance int GetNextRow(int , struct DataGridViewElementStates , struct DataGridViewElementStates )" />
          <Method Sig="instance int GetPreviousRow(int , struct DataGridViewElementStates )" />
          <Method Sig="instance int GetPreviousRow(int , struct DataGridViewElementStates , struct DataGridViewElementStates )" />
          <Method Sig="instance int GetRowCount(struct DataGridViewElementStates )" />
          <Method Sig="instance int GetRowsHeight(struct DataGridViewElementStates )" />
          <Method Sig="instance struct DataGridViewElementStates GetRowState(int )" />
          <Method Sig="instance int IndexOf(class DataGridViewRow )" />
          <Method Sig="instance void Insert(int , [] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Insert(int , class DataGridViewRow )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Insert(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void InsertCopy(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void InsertCopies(int , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void InsertRange(int , [] class DataGridViewRow )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Remove(class DataGridViewRow )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAt(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="DataGridViewRowContextMenuStripNeededEventArgs">
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance int get_RowIndex()" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
        </Type>
        <Type Name="DataGridViewRowDividerDoubleClickEventArgs">
          <Method Sig="instance void .ctor(int , class HandledMouseEventArgs )" />
          <Method Sig="instance int get_RowIndex()" />
        </Type>
        <Type Name="DataGridViewRowErrorTextNeededEventArgs">
          <Method Sig="instance string get_ErrorText()" />
          <Method Sig="instance void set_ErrorText(string )" />
          <Method Sig="instance int get_RowIndex()" />
        </Type>
        <Type Name="DataGridViewRowEventArgs">
          <Method Sig="instance void .ctor(class DataGridViewRow )" />
          <Method Sig="instance class DataGridViewRow get_Row()" />
        </Type>
        <Type Name="DataGridViewRowHeaderCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContextMenuStrip GetInheritedContextMenuStrip(int )" />
          <Method Sig="instance class DataGridViewCellStyle GetInheritedStyle(class DataGridViewCellStyle , int , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewRowHeightInfoNeededEventArgs">
          <Method Sig="instance int get_Height()" />
          <Method Sig="instance void set_Height(int )" />
          <Method Sig="instance int get_MinimumHeight()" />
          <Method Sig="instance void set_MinimumHeight(int )" />
          <Method Sig="instance int get_RowIndex()" />
        </Type>
        <Type Name="DataGridViewRowHeightInfoPushedEventArgs">
          <Method Sig="instance int get_Height()" />
          <Method Sig="instance int get_MinimumHeight()" />
          <Method Sig="instance int get_RowIndex()" />
        </Type>
        <Type Name="DataGridViewRowPostPaintEventArgs">
          <Method Sig="instance void .ctor(class DataGridView , class Graphics , struct Rectangle , struct Rectangle , int , struct DataGridViewElementStates , string , class DataGridViewCellStyle , bool , bool )" />
          <Method Sig="instance struct Rectangle get_ClipBounds()" />
          <Method Sig="instance void set_ClipBounds(struct Rectangle )" />
          <Method Sig="instance string get_ErrorText()" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class DataGridViewCellStyle get_InheritedRowStyle()" />
          <Method Sig="instance bool get_IsFirstDisplayedRow()" />
          <Method Sig="instance bool get_IsLastVisibleRow()" />
          <Method Sig="instance struct Rectangle get_RowBounds()" />
          <Method Sig="instance int get_RowIndex()" />
          <Method Sig="instance struct DataGridViewElementStates get_State()" />
          <Method Sig="instance void DrawFocus(struct Rectangle , bool )" />
          <Method Sig="instance void PaintCells(struct Rectangle , struct DataGridViewPaintParts )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintCellsBackground(struct Rectangle , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintCellsContent(struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintHeader(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintHeader(struct DataGridViewPaintParts )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="DataGridViewRowPrePaintEventArgs">
          <Method Sig="instance void .ctor(class DataGridView , class Graphics , struct Rectangle , struct Rectangle , int , struct DataGridViewElementStates , string , class DataGridViewCellStyle , bool , bool )" />
          <Method Sig="instance struct Rectangle get_ClipBounds()" />
          <Method Sig="instance void set_ClipBounds(struct Rectangle )" />
          <Method Sig="instance string get_ErrorText()" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class DataGridViewCellStyle get_InheritedRowStyle()" />
          <Method Sig="instance bool get_IsFirstDisplayedRow()" />
          <Method Sig="instance bool get_IsLastVisibleRow()" />
          <Method Sig="instance struct DataGridViewPaintParts get_PaintParts()" />
          <Method Sig="instance void set_PaintParts(struct DataGridViewPaintParts )" />
          <Method Sig="instance struct Rectangle get_RowBounds()" />
          <Method Sig="instance int get_RowIndex()" />
          <Method Sig="instance struct DataGridViewElementStates get_State()" />
          <Method Sig="instance void DrawFocus(struct Rectangle , bool )" />
          <Method Sig="instance void PaintCells(struct Rectangle , struct DataGridViewPaintParts )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintCellsBackground(struct Rectangle , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintCellsContent(struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintHeader(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PaintHeader(struct DataGridViewPaintParts )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="DataGridViewRowsAddedEventArgs">
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance int get_RowIndex()" />
          <Method Sig="instance int get_RowCount()" />
        </Type>
        <Type Name="DataGridViewRowsRemovedEventArgs">
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance int get_RowIndex()" />
          <Method Sig="instance int get_RowCount()" />
        </Type>
        <Type Name="DataGridViewRowStateChangedEventArgs">
          <Method Sig="instance void .ctor(class DataGridViewRow , struct DataGridViewElementStates )" />
          <Method Sig="instance class DataGridViewRow get_Row()" />
          <Method Sig="instance struct DataGridViewElementStates get_StateChanged()" />
        </Type>
        <Type Name="DataGridViewSelectedCellCollection">
          <Method Sig="instance class DataGridViewCell get_Item(int )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(class DataGridViewCell )" />
          <Method Sig="instance void CopyTo([] class DataGridViewCell , int )" />
          <Method Sig="instance void Insert(int , class DataGridViewCell )" />
        </Type>
        <Type Name="DataGridViewSelectedColumnCollection">
          <Method Sig="instance class DataGridViewColumn get_Item(int )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(class DataGridViewColumn )" />
          <Method Sig="instance void CopyTo([] class DataGridViewColumn , int )" />
          <Method Sig="instance void Insert(int , class DataGridViewColumn )" />
        </Type>
        <Type Name="DataGridViewSelectedRowCollection">
          <Method Sig="instance class DataGridViewRow get_Item(int )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(class DataGridViewRow )" />
          <Method Sig="instance void CopyTo([] class DataGridViewRow , int )" />
          <Method Sig="instance void Insert(int , class DataGridViewRow )" />
        </Type>
        <Type Name="DataGridViewSortCompareEventArgs">
          <Method Sig="instance void .ctor(class DataGridViewColumn , object , object , int , int )" />
          <Method Sig="instance object get_CellValue1()" />
          <Method Sig="instance object get_CellValue2()" />
          <Method Sig="instance class DataGridViewColumn get_Column()" />
          <Method Sig="instance int get_RowIndex1()" />
          <Method Sig="instance int get_RowIndex2()" />
          <Method Sig="instance int get_SortResult()" />
          <Method Sig="instance void set_SortResult(int )" />
        </Type>
        <Type Name="DataGridViewTextBoxCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance class Type get_FormattedValueType()" />
          <Method Sig="instance int get_MaxInputLength()" />
          <Method Sig="instance void set_MaxInputLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_ValueType()" />
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DetachEditingControl()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void InitializeEditingControl(int , object , class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool KeyEntersEditMode(class KeyEventArgs )" />
          <Method Sig="instance void PositionEditingControl(bool , bool , struct Rectangle , struct Rectangle , class DataGridViewCellStyle , bool , bool , bool , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewTextBoxColumn">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridViewCell get_CellTemplate()" />
          <Method Sig="instance void set_CellTemplate(class DataGridViewCell )" />
          <Method Sig="instance int get_MaxInputLength()" />
          <Method Sig="instance void set_MaxInputLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DataGridViewColumnSortMode get_SortMode()" />
          <Method Sig="instance void set_SortMode(struct DataGridViewColumnSortMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="DataGridViewTextBoxEditingControl">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataGridView get_EditingControlDataGridView()" />
          <Method Sig="instance void set_EditingControlDataGridView(class DataGridView )" />
          <Method Sig="instance object get_EditingControlFormattedValue()" />
          <Method Sig="instance void set_EditingControlFormattedValue(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_EditingControlRowIndex()" />
          <Method Sig="instance void set_EditingControlRowIndex(int )" />
          <Method Sig="instance bool get_EditingControlValueChanged()" />
          <Method Sig="instance void set_EditingControlValueChanged(bool )" />
          <Method Sig="instance class Cursor get_EditingPanelCursor()" />
          <Method Sig="instance bool get_RepositionEditingControlOnValueChange()" />
          <Method Sig="instance void ApplyCellStyleToEditingControl(class DataGridViewCellStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool EditingControlWantsInputKey(struct Keys , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object GetEditingControlFormattedValue(struct DataGridViewDataErrorContexts )" />
          <Method Sig="instance void PrepareEditingControlForEdit(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataGridViewTopLeftHeaderCell">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataObject">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(object )" />
          <Method Sig="instance void .ctor(string , object )" />
          <Method Sig="instance object GetData(string , bool )" />
          <Method Sig="instance object GetData(string )" />
          <Method Sig="instance object GetData(class Type )" />
          <Method Sig="instance bool GetDataPresent(class Type )" />
          <Method Sig="instance bool GetDataPresent(string , bool )" />
          <Method Sig="instance bool GetDataPresent(string )" />
          <Method Sig="instance [] string GetFormats(bool )" />
          <Method Sig="instance [] string GetFormats()" />
          <Method Sig="instance bool ContainsAudio()" />
          <Method Sig="instance bool ContainsFileDropList()" />
          <Method Sig="instance bool ContainsImage()" />
          <Method Sig="instance bool ContainsText()" />
          <Method Sig="instance bool ContainsText(struct TextDataFormat )" />
          <Method Sig="instance class Stream GetAudioStream()" />
          <Method Sig="instance class StringCollection GetFileDropList()" />
          <Method Sig="instance class Image GetImage()" />
          <Method Sig="instance string GetText()" />
          <Method Sig="instance string GetText(struct TextDataFormat )" />
          <Method Sig="instance void SetAudio([] byte )" />
          <Method Sig="instance void SetAudio(class Stream )" />
          <Method Sig="instance void SetFileDropList(class StringCollection )" />
          <Method Sig="instance void SetImage(class Image )" />
          <Method Sig="instance void SetText(string )" />
          <Method Sig="instance void SetText(string , struct TextDataFormat )" />
          <Method Sig="instance void SetData(string , bool , object )" />
          <Method Sig="instance void SetData(string , object )" />
          <Method Sig="instance void SetData(class Type , object )" />
          <Method Sig="instance void SetData(object )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DateBoldEventArgs">
          <Method Sig="instance struct DateTime get_StartDate()" />
          <Method Sig="instance int get_Size()" />
          <Method Sig="instance [] int get_DaysToBold()" />
          <Method Sig="instance void set_DaysToBold([] int )" />
        </Type>
        <Type Name="DateBoldEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DateBoldEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DateBoldEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DateRangeEventArgs">
          <Method Sig="instance void .ctor(struct DateTime , struct DateTime )" />
          <Method Sig="instance struct DateTime get_Start()" />
          <Method Sig="instance struct DateTime get_End()" />
        </Type>
        <Type Name="DateRangeEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DateRangeEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DateRangeEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DateTimePicker">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_CalendarForeColor()" />
          <Method Sig="instance void set_CalendarForeColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Font get_CalendarFont()" />
          <Method Sig="instance void set_CalendarFont(class Font )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_CalendarTitleBackColor()" />
          <Method Sig="instance void set_CalendarTitleBackColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_CalendarTitleForeColor()" />
          <Method Sig="instance void set_CalendarTitleForeColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_CalendarTrailingForeColor()" />
          <Method Sig="instance void set_CalendarTrailingForeColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_CalendarMonthBackground()" />
          <Method Sig="instance void set_CalendarMonthBackground(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Checked()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Checked(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance string get_CustomFormat()" />
          <Method Sig="instance void set_CustomFormat(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance struct LeftRightAlignment get_DropDownAlign()" />
          <Method Sig="instance void set_DropDownAlign(struct LeftRightAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance struct DateTimePickerFormat get_Format()" />
          <Method Sig="instance void set_Format(struct DateTimePickerFormat )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_FormatChanged(class EventHandler )" />
          <Method Sig="instance void remove_FormatChanged(class EventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance struct DateTime get_MaxDate()" />
          <Method Sig="instance void set_MaxDate(struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DateTime get_MaximumDateTime()" />
          <Method Sig="instance struct DateTime get_MinDate()" />
          <Method Sig="instance void set_MinDate(struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DateTime get_MinimumDateTime()" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance int get_PreferredHeight()" />
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowCheckBox()" />
          <Method Sig="instance void set_ShowCheckBox(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowUpDown()" />
          <Method Sig="instance void set_ShowUpDown(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance struct DateTime get_Value()" />
          <Method Sig="instance void set_Value(struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CloseUp(class EventHandler )" />
          <Method Sig="instance void remove_CloseUp(class EventHandler )" />
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void add_ValueChanged(class EventHandler )" />
          <Method Sig="instance void remove_ValueChanged(class EventHandler )" />
          <Method Sig="instance void add_DropDown(class EventHandler )" />
          <Method Sig="instance void remove_DropDown(class EventHandler )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DockingAttribute">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(struct DockingBehavior )" />
          <Method Sig="instance struct DockingBehavior get_DockingBehavior()" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="instance bool IsDefaultAttribute()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="UpDownBase">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoScroll()" />
          <Method Sig="instance void set_AutoScroll(bool )" />
          <Method Sig="instance struct Size get_AutoScrollMargin()" />
          <Method Sig="instance void set_AutoScrollMargin(struct Size )" />
          <Method Sig="instance struct Size get_AutoScrollMinSize()" />
          <Method Sig="instance void set_AutoScrollMinSize(struct Size )" />
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContextMenu get_ContextMenu()" />
          <Method Sig="instance void set_ContextMenu(class ContextMenu )" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance class DockPaddingEdges get_DockPadding()" />
          <Method Sig="instance bool get_Focused()" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance bool get_InterceptArrowKeys()" />
          <Method Sig="instance void set_InterceptArrowKeys(bool )" />
          <Method Sig="instance struct Size get_MaximumSize()" />
          <Method Sig="instance void set_MaximumSize(struct Size )" />
          <Method Sig="instance struct Size get_MinimumSize()" />
          <Method Sig="instance void set_MinimumSize(struct Size )" />
          <Method Sig="instance void add_MouseEnter(class EventHandler )" />
          <Method Sig="instance void remove_MouseEnter(class EventHandler )" />
          <Method Sig="instance void add_MouseLeave(class EventHandler )" />
          <Method Sig="instance void remove_MouseLeave(class EventHandler )" />
          <Method Sig="instance void add_MouseHover(class EventHandler )" />
          <Method Sig="instance void remove_MouseHover(class EventHandler )" />
          <Method Sig="instance void add_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance int get_PreferredHeight()" />
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance struct HorizontalAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct HorizontalAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct LeftRightAlignment get_UpDownAlign()" />
          <Method Sig="instance void set_UpDownAlign(struct LeftRightAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DownButton()" />
          <Method Sig="instance void Select(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void UpButton()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DomainUpDown">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DomainUpDownItemCollection get_Items()" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance int get_SelectedIndex()" />
          <Method Sig="instance void set_SelectedIndex(int )" />
          <Method Sig="instance object get_SelectedItem()" />
          <Method Sig="instance void set_SelectedItem(object )" />
          <Method Sig="instance bool get_Sorted()" />
          <Method Sig="instance void set_Sorted(bool )" />
          <Method Sig="instance bool get_Wrap()" />
          <Method Sig="instance void set_Wrap(bool )" />
          <Method Sig="instance void add_SelectedItemChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectedItemChanged(class EventHandler )" />
          <Method Sig="instance void DownButton()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="instance void UpButton()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DragEventArgs">
          <Method Sig="instance void .ctor(class IDataObject , int , int , int , struct DragDropEffects , struct DragDropEffects )" />
          <Method Sig="instance class IDataObject get_Data()" />
          <Method Sig="instance int get_KeyState()" />
          <Method Sig="instance int get_X()" />
          <Method Sig="instance int get_Y()" />
          <Method Sig="instance struct DragDropEffects get_AllowedEffect()" />
          <Method Sig="instance struct DragDropEffects get_Effect()" />
          <Method Sig="instance void set_Effect(struct DragDropEffects )" />
        </Type>
        <Type Name="DragEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DragEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DragEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DrawItemEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class Font , struct Rectangle , int , struct DrawItemState )" />
          <Method Sig="instance void .ctor(class Graphics , class Font , struct Rectangle , int , struct DrawItemState , struct Color , struct Color )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance int get_Index()" />
          <Method Sig="instance struct DrawItemState get_State()" />
          <Method Sig="instance void DrawBackground()" />
          <Method Sig="instance void DrawFocusRectangle()" />
        </Type>
        <Type Name="DrawItemEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DrawItemEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DrawItemEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DrawListViewColumnHeaderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , struct Rectangle , int , class ColumnHeader , struct ListViewItemStates , struct Color , struct Color , class Font )" />
          <Method Sig="instance bool get_DrawDefault()" />
          <Method Sig="instance void set_DrawDefault(bool )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance class ColumnHeader get_Header()" />
          <Method Sig="instance struct ListViewItemStates get_State()" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void DrawBackground()" />
          <Method Sig="instance void DrawText()" />
          <Method Sig="instance void DrawText(struct TextFormatFlags )" />
        </Type>
        <Type Name="DrawListViewColumnHeaderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DrawListViewColumnHeaderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DrawListViewColumnHeaderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DrawListViewItemEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ListViewItem , struct Rectangle , int , struct ListViewItemStates )" />
          <Method Sig="instance bool get_DrawDefault()" />
          <Method Sig="instance void set_DrawDefault(bool )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class ListViewItem get_Item()" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance int get_ItemIndex()" />
          <Method Sig="instance struct ListViewItemStates get_State()" />
          <Method Sig="instance void DrawBackground()" />
          <Method Sig="instance void DrawFocusRectangle()" />
          <Method Sig="instance void DrawText()" />
          <Method Sig="instance void DrawText(struct TextFormatFlags )" />
        </Type>
        <Type Name="DrawListViewItemEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DrawListViewItemEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DrawListViewItemEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DrawListViewSubItemEventArgs">
          <Method Sig="instance void .ctor(class Graphics , struct Rectangle , class ListViewItem , class ListViewSubItem , int , int , class ColumnHeader , struct ListViewItemStates )" />
          <Method Sig="instance bool get_DrawDefault()" />
          <Method Sig="instance void set_DrawDefault(bool )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance class ListViewItem get_Item()" />
          <Method Sig="instance class ListViewSubItem get_SubItem()" />
          <Method Sig="instance int get_ItemIndex()" />
          <Method Sig="instance int get_ColumnIndex()" />
          <Method Sig="instance class ColumnHeader get_Header()" />
          <Method Sig="instance struct ListViewItemStates get_ItemState()" />
          <Method Sig="instance void DrawBackground()" />
          <Method Sig="instance void DrawFocusRectangle(struct Rectangle )" />
          <Method Sig="instance void DrawText()" />
          <Method Sig="instance void DrawText(struct TextFormatFlags )" />
        </Type>
        <Type Name="DrawListViewSubItemEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DrawListViewSubItemEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DrawListViewSubItemEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DrawToolTipEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class IWin32Window , class Control , struct Rectangle , string , struct Color , struct Color , class Font )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class IWin32Window get_AssociatedWindow()" />
          <Method Sig="instance class Control get_AssociatedControl()" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void DrawBackground()" />
          <Method Sig="instance void DrawText()" />
          <Method Sig="instance void DrawText(struct TextFormatFlags )" />
          <Method Sig="instance void DrawBorder()" />
        </Type>
        <Type Name="DrawToolTipEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DrawToolTipEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DrawToolTipEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="DrawTreeNodeEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class TreeNode , struct Rectangle , struct TreeNodeStates )" />
          <Method Sig="instance bool get_DrawDefault()" />
          <Method Sig="instance void set_DrawDefault(bool )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class TreeNode get_Node()" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance struct TreeNodeStates get_State()" />
        </Type>
        <Type Name="DrawTreeNodeEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class DrawTreeNodeEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class DrawTreeNodeEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ErrorProvider">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class ContainerControl )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class IContainer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Site(class ISite )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ErrorBlinkStyle get_BlinkStyle()" />
          <Method Sig="instance void set_BlinkStyle(struct ErrorBlinkStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContainerControl get_ContainerControl()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ContainerControl(class ContainerControl )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(bool )" />
          <Method Sig="instance void add_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance object get_DataSource()" />
          <Method Sig="instance void set_DataSource(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_DataMember()" />
          <Method Sig="instance void set_DataMember(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void BindToDataAndErrors(object , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void UpdateBinding()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_BlinkRate()" />
          <Method Sig="instance void set_BlinkRate(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Icon get_Icon()" />
          <Method Sig="instance void set_Icon(class Icon )" />
          <Method Sig="instance void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool CanExtend(object )" />
          <Method Sig="instance string GetError(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ErrorIconAlignment GetIconAlignment(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetIconPadding(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetError(class Control , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetIconAlignment(class Control , struct ErrorIconAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetIconPadding(class Control , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="FeatureSupport">
          <Method Sig="bool IsPresent(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool IsPresent(string , string , class Version )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class Version GetVersionPresent(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool IsPresent(object )" />
          <Method Sig="instance bool IsPresent(object , class Version )" />
          <Method Sig="instance class Version GetVersionPresent(object )" />
        </Type>
        <Type Name="FileDialog">
          <Method Sig="instance bool get_AddExtension()" />
          <Method Sig="instance void set_AddExtension(bool )" />
          <Method Sig="instance bool get_CheckFileExists()" />
          <Method Sig="instance void set_CheckFileExists(bool )" />
          <Method Sig="instance bool get_CheckPathExists()" />
          <Method Sig="instance void set_CheckPathExists(bool )" />
          <Method Sig="instance string get_DefaultExt()" />
          <Method Sig="instance void set_DefaultExt(string )" />
          <Method Sig="instance bool get_DereferenceLinks()" />
          <Method Sig="instance void set_DereferenceLinks(bool )" />
          <Method Sig="instance string get_FileName()" />
          <Method Sig="instance void set_FileName(string )" />
          <Method Sig="instance [] string get_FileNames()" />
          <Method Sig="instance string get_Filter()" />
          <Method Sig="instance void set_Filter(string )" />
          <Method Sig="instance int get_FilterIndex()" />
          <Method Sig="instance void set_FilterIndex(int )" />
          <Method Sig="instance string get_InitialDirectory()" />
          <Method Sig="instance void set_InitialDirectory(string )" />
          <Method Sig="instance bool get_RestoreDirectory()" />
          <Method Sig="instance void set_RestoreDirectory(bool )" />
          <Method Sig="instance bool get_ShowHelp()" />
          <Method Sig="instance void set_ShowHelp(bool )" />
          <Method Sig="instance bool get_SupportMultiDottedExtensions()" />
          <Method Sig="instance void set_SupportMultiDottedExtensions(bool )" />
          <Method Sig="instance string get_Title()" />
          <Method Sig="instance void set_Title(string )" />
          <Method Sig="instance bool get_ValidateNames()" />
          <Method Sig="instance void set_ValidateNames(bool )" />
          <Method Sig="instance void add_FileOk(class CancelEventHandler )" />
          <Method Sig="instance void remove_FileOk(class CancelEventHandler )" />
          <Method Sig="instance void Reset()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="FlatButtonAppearance">
          <Method Sig="instance int get_BorderSize()" />
          <Method Sig="instance void set_BorderSize(int )" />
          <Method Sig="instance struct Color get_BorderColor()" />
          <Method Sig="instance void set_BorderColor(struct Color )" />
          <Method Sig="instance struct Color get_CheckedBackColor()" />
          <Method Sig="instance void set_CheckedBackColor(struct Color )" />
          <Method Sig="instance struct Color get_MouseDownBackColor()" />
          <Method Sig="instance void set_MouseDownBackColor(struct Color )" />
          <Method Sig="instance struct Color get_MouseOverBackColor()" />
          <Method Sig="instance void set_MouseOverBackColor(struct Color )" />
        </Type>
        <Type Name="Panel">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct AutoSizeMode get_AutoSizeMode()" />
          <Method Sig="instance void set_AutoSizeMode(struct AutoSizeMode )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="FlowLayoutPanel">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance struct FlowDirection get_FlowDirection()" />
          <Method Sig="instance void set_FlowDirection(struct FlowDirection )" />
          <Method Sig="instance bool get_WrapContents()" />
          <Method Sig="instance void set_WrapContents(bool )" />
          <Method Sig="instance bool GetFlowBreak(class Control )" />
          <Method Sig="instance void SetFlowBreak(class Control , bool )" />
        </Type>
        <Type Name="LayoutSettings">
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
        </Type>
        <Type Name="FlowLayoutSettings">
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance struct FlowDirection get_FlowDirection()" />
          <Method Sig="instance void set_FlowDirection(struct FlowDirection )" />
          <Method Sig="instance bool get_WrapContents()" />
          <Method Sig="instance void set_WrapContents(bool )" />
          <Method Sig="instance void SetFlowBreak(object , bool )" />
          <Method Sig="instance bool GetFlowBreak(object )" />
        </Type>
        <Type Name="FolderBrowserDialog">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void add_HelpRequest(class EventHandler )" />
          <Method Sig="instance void remove_HelpRequest(class EventHandler )" />
          <Method Sig="instance bool get_ShowNewFolderButton()" />
          <Method Sig="instance void set_ShowNewFolderButton(bool )" />
          <Method Sig="instance string get_SelectedPath()" />
          <Method Sig="instance void set_SelectedPath(string )" />
          <Method Sig="instance struct SpecialFolder get_RootFolder()" />
          <Method Sig="instance void set_RootFolder(struct SpecialFolder )" />
          <Method Sig="instance string get_Description()" />
          <Method Sig="instance void set_Description(string )" />
          <Method Sig="instance void Reset()" />
        </Type>
        <Type Name="FontDialog">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_AllowSimulations()" />
          <Method Sig="instance void set_AllowSimulations(bool )" />
          <Method Sig="instance bool get_AllowVectorFonts()" />
          <Method Sig="instance void set_AllowVectorFonts(bool )" />
          <Method Sig="instance bool get_AllowVerticalFonts()" />
          <Method Sig="instance void set_AllowVerticalFonts(bool )" />
          <Method Sig="instance bool get_AllowScriptChange()" />
          <Method Sig="instance void set_AllowScriptChange(bool )" />
          <Method Sig="instance struct Color get_Color()" />
          <Method Sig="instance void set_Color(struct Color )" />
          <Method Sig="instance bool get_FixedPitchOnly()" />
          <Method Sig="instance void set_FixedPitchOnly(bool )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance bool get_FontMustExist()" />
          <Method Sig="instance void set_FontMustExist(bool )" />
          <Method Sig="instance int get_MaxSize()" />
          <Method Sig="instance void set_MaxSize(int )" />
          <Method Sig="instance int get_MinSize()" />
          <Method Sig="instance void set_MinSize(int )" />
          <Method Sig="instance bool get_ScriptsOnly()" />
          <Method Sig="instance void set_ScriptsOnly(bool )" />
          <Method Sig="instance bool get_ShowApply()" />
          <Method Sig="instance void set_ShowApply(bool )" />
          <Method Sig="instance bool get_ShowColor()" />
          <Method Sig="instance void set_ShowColor(bool )" />
          <Method Sig="instance bool get_ShowEffects()" />
          <Method Sig="instance void set_ShowEffects(bool )" />
          <Method Sig="instance bool get_ShowHelp()" />
          <Method Sig="instance void set_ShowHelp(bool )" />
          <Method Sig="instance void add_Apply(class EventHandler )" />
          <Method Sig="instance void remove_Apply(class EventHandler )" />
          <Method Sig="instance void Reset()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="Form">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IButtonControl get_AcceptButton()" />
          <Method Sig="instance void set_AcceptButton(class IButtonControl )" />
          <Method Sig="class Form get_ActiveForm()" />
          <Method Sig="instance class Form get_ActiveMdiChild()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowTransparency()" />
          <Method Sig="instance void set_AllowTransparency(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoScale()" />
          <Method Sig="instance void set_AutoScale(bool )" />
          <Method Sig="instance struct Size get_AutoScaleBaseSize()" />
          <Method Sig="instance void set_AutoScaleBaseSize(struct Size )" />
          <Method Sig="instance bool get_AutoScroll()" />
          <Method Sig="instance void set_AutoScroll(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct AutoSizeMode get_AutoSizeMode()" />
          <Method Sig="instance void set_AutoSizeMode(struct AutoSizeMode )" />
          <Method Sig="instance struct AutoValidate get_AutoValidate()" />
          <Method Sig="instance void set_AutoValidate(struct AutoValidate )" />
          <Method Sig="instance void add_AutoValidateChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoValidateChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance struct FormBorderStyle get_FormBorderStyle()" />
          <Method Sig="instance void set_FormBorderStyle(struct FormBorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IButtonControl get_CancelButton()" />
          <Method Sig="instance void set_CancelButton(class IButtonControl )" />
          <Method Sig="instance struct Size get_ClientSize()" />
          <Method Sig="instance void set_ClientSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ControlBox()" />
          <Method Sig="instance void set_ControlBox(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_DesktopBounds()" />
          <Method Sig="instance void set_DesktopBounds(struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Point get_DesktopLocation()" />
          <Method Sig="instance void set_DesktopLocation(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DialogResult get_DialogResult()" />
          <Method Sig="instance void set_DialogResult(struct DialogResult )" />
          <Method Sig="instance bool get_HelpButton()" />
          <Method Sig="instance void set_HelpButton(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_HelpButtonClicked(class CancelEventHandler )" />
          <Method Sig="instance void remove_HelpButtonClicked(class CancelEventHandler )" />
          <Method Sig="instance class Icon get_Icon()" />
          <Method Sig="instance void set_Icon(class Icon )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsMdiChild()" />
          <Method Sig="instance bool get_IsMdiContainer()" />
          <Method Sig="instance void set_IsMdiContainer(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsRestrictedWindow()" />
          <Method Sig="instance bool get_KeyPreview()" />
          <Method Sig="instance void set_KeyPreview(bool )" />
          <Method Sig="instance struct Point get_Location()" />
          <Method Sig="instance void set_Location(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MaximizedBoundsChanged(class EventHandler )" />
          <Method Sig="instance void remove_MaximizedBoundsChanged(class EventHandler )" />
          <Method Sig="instance struct Size get_MaximumSize()" />
          <Method Sig="instance void set_MaximumSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MaximumSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_MaximumSizeChanged(class EventHandler )" />
          <Method Sig="instance class MenuStrip get_MainMenuStrip()" />
          <Method Sig="instance void set_MainMenuStrip(class MenuStrip )" />
          <Method Sig="instance struct Padding get_Margin()" />
          <Method Sig="instance void set_Margin(struct Padding )" />
          <Method Sig="instance void add_MarginChanged(class EventHandler )" />
          <Method Sig="instance void remove_MarginChanged(class EventHandler )" />
          <Method Sig="instance class MainMenu get_Menu()" />
          <Method Sig="instance void set_Menu(class MainMenu )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_MinimumSize()" />
          <Method Sig="instance void set_MinimumSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MinimumSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_MinimumSizeChanged(class EventHandler )" />
          <Method Sig="instance bool get_MaximizeBox()" />
          <Method Sig="instance void set_MaximizeBox(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] class Form get_MdiChildren()" />
          <Method Sig="instance class Form get_MdiParent()" />
          <Method Sig="instance void set_MdiParent(class Form )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class MainMenu get_MergedMenu()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_MinimizeBox()" />
          <Method Sig="instance void set_MinimizeBox(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Modal()" />
          <Method Sig="instance double get_Opacity()" />
          <Method Sig="instance void set_Opacity(double )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] class Form get_OwnedForms()" />
          <Method Sig="instance class Form get_Owner()" />
          <Method Sig="instance void set_Owner(class Form )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_RestoreBounds()" />
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowInTaskbar()" />
          <Method Sig="instance void set_ShowInTaskbar(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowIcon()" />
          <Method Sig="instance void set_ShowIcon(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_Size()" />
          <Method Sig="instance void set_Size(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SizeGripStyle get_SizeGripStyle()" />
          <Method Sig="instance void set_SizeGripStyle(struct SizeGripStyle )" />
          <Method Sig="instance struct FormStartPosition get_StartPosition()" />
          <Method Sig="instance void set_StartPosition(struct FormStartPosition )" />
          <Method Sig="instance int get_TabIndex()" />
          <Method Sig="instance void set_TabIndex(int )" />
          <Method Sig="instance void add_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance bool get_TopLevel()" />
          <Method Sig="instance void set_TopLevel(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TopMost()" />
          <Method Sig="instance void set_TopMost(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_TransparencyKey()" />
          <Method Sig="instance void set_TransparencyKey(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct FormWindowState get_WindowState()" />
          <Method Sig="instance void set_WindowState(struct FormWindowState )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Activated(class EventHandler )" />
          <Method Sig="instance void remove_Activated(class EventHandler )" />
          <Method Sig="instance void add_Closing(class CancelEventHandler )" />
          <Method Sig="instance void remove_Closing(class CancelEventHandler )" />
          <Method Sig="instance void add_Closed(class EventHandler )" />
          <Method Sig="instance void remove_Closed(class EventHandler )" />
          <Method Sig="instance void add_Deactivate(class EventHandler )" />
          <Method Sig="instance void remove_Deactivate(class EventHandler )" />
          <Method Sig="instance void add_FormClosing(class FormClosingEventHandler )" />
          <Method Sig="instance void remove_FormClosing(class FormClosingEventHandler )" />
          <Method Sig="instance void add_FormClosed(class FormClosedEventHandler )" />
          <Method Sig="instance void remove_FormClosed(class FormClosedEventHandler )" />
          <Method Sig="instance void add_Load(class EventHandler )" />
          <Method Sig="instance void remove_Load(class EventHandler )" />
          <Method Sig="instance void add_MdiChildActivate(class EventHandler )" />
          <Method Sig="instance void remove_MdiChildActivate(class EventHandler )" />
          <Method Sig="instance void add_MenuComplete(class EventHandler )" />
          <Method Sig="instance void remove_MenuComplete(class EventHandler )" />
          <Method Sig="instance void add_MenuStart(class EventHandler )" />
          <Method Sig="instance void remove_MenuStart(class EventHandler )" />
          <Method Sig="instance void add_InputLanguageChanged(class InputLanguageChangedEventHandler )" />
          <Method Sig="instance void remove_InputLanguageChanged(class InputLanguageChangedEventHandler )" />
          <Method Sig="instance void add_InputLanguageChanging(class InputLanguageChangingEventHandler )" />
          <Method Sig="instance void remove_InputLanguageChanging(class InputLanguageChangingEventHandler )" />
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void add_Shown(class EventHandler )" />
          <Method Sig="instance void remove_Shown(class EventHandler )" />
          <Method Sig="instance void Activate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddOwnedForm(class Form )" />
          <Method Sig="instance void Close()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct SizeF GetAutoScaleSize(class Font )" />
          <Method Sig="instance void LayoutMdi(struct MdiLayout )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveOwnedForm(class Form )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ResizeBegin(class EventHandler )" />
          <Method Sig="instance void remove_ResizeBegin(class EventHandler )" />
          <Method Sig="instance void add_ResizeEnd(class EventHandler )" />
          <Method Sig="instance void remove_ResizeEnd(class EventHandler )" />
          <Method Sig="instance void SetDesktopBounds(int , int , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetDesktopLocation(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(class IWin32Window )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DialogResult ShowDialog()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DialogResult ShowDialog(class IWin32Window )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="instance bool ValidateChildren()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool ValidateChildren(struct ValidationConstraints )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="FormClosedEventArgs">
          <Method Sig="instance void .ctor(struct CloseReason )" />
          <Method Sig="instance struct CloseReason get_CloseReason()" />
        </Type>
        <Type Name="FormClosedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class FormClosedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class FormClosedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="FormClosingEventArgs">
          <Method Sig="instance void .ctor(struct CloseReason , bool )" />
          <Method Sig="instance struct CloseReason get_CloseReason()" />
        </Type>
        <Type Name="FormClosingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class FormClosingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class FormClosingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="FormCollection">
          <Method Sig="instance class Form get_Item(string )" />
          <Method Sig="instance class Form get_Item(int )" />
          <Method Sig="instance void .ctor()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="GiveFeedbackEventArgs">
          <Method Sig="instance void .ctor(struct DragDropEffects , bool )" />
          <Method Sig="instance struct DragDropEffects get_Effect()" />
          <Method Sig="instance bool get_UseDefaultCursors()" />
          <Method Sig="instance void set_UseDefaultCursors(bool )" />
        </Type>
        <Type Name="GiveFeedbackEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class GiveFeedbackEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class GiveFeedbackEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="GridItem">
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance class GridItemCollection get_GridItems()" />
          <Method Sig="instance struct GridItemType get_GridItemType()" />
          <Method Sig="instance string get_Label()" />
          <Method Sig="instance class GridItem get_Parent()" />
          <Method Sig="instance class PropertyDescriptor get_PropertyDescriptor()" />
          <Method Sig="instance object get_Value()" />
          <Method Sig="instance bool get_Expandable()" />
          <Method Sig="instance bool get_Expanded()" />
          <Method Sig="instance void set_Expanded(bool )" />
          <Method Sig="instance bool Select()" />
        </Type>
        <Type Name="GridItemCollection">
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class GridItem get_Item(int )" />
          <Method Sig="instance class GridItem get_Item(string )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="GroupBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct AutoSizeMode get_AutoSizeMode()" />
          <Method Sig="instance void set_AutoSizeMode(struct AutoSizeMode )" />
          <Method Sig="instance struct Rectangle get_DisplayRectangle()" />
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseCompatibleTextRendering()" />
          <Method Sig="instance void set_UseCompatibleTextRendering(bool )" />
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void add_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseEnter(class EventHandler )" />
          <Method Sig="instance void remove_MouseEnter(class EventHandler )" />
          <Method Sig="instance void add_MouseLeave(class EventHandler )" />
          <Method Sig="instance void remove_MouseLeave(class EventHandler )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="GroupBoxRenderer">
          <Method Sig="bool get_RenderMatchingApplicationState()" />
          <Method Sig="void set_RenderMatchingApplicationState(bool )" />
          <Method Sig="bool IsBackgroundPartiallyTransparent(struct GroupBoxState )" />
          <Method Sig="void DrawParentBackground(class Graphics , struct Rectangle , class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void DrawGroupBox(class Graphics , struct Rectangle , struct GroupBoxState )" />
          <Method Sig="void DrawGroupBox(class Graphics , struct Rectangle , string , class Font , struct GroupBoxState )" />
          <Method Sig="void DrawGroupBox(class Graphics , struct Rectangle , string , class Font , struct Color , struct GroupBoxState )" />
          <Method Sig="void DrawGroupBox(class Graphics , struct Rectangle , string , class Font , struct TextFormatFlags , struct GroupBoxState )" />
          <Method Sig="void DrawGroupBox(class Graphics , struct Rectangle , string , class Font , struct Color , struct TextFormatFlags , struct GroupBoxState )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="Help">
          <Method Sig="void ShowHelp(class Control , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ShowHelp(class Control , string , struct HelpNavigator )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ShowHelp(class Control , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ShowHelp(class Control , string , struct HelpNavigator , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ShowHelpIndex(class Control , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ShowPopup(class Control , string , struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="HelpEventArgs">
          <Method Sig="instance void .ctor(struct Point )" />
          <Method Sig="instance struct Point get_MousePos()" />
          <Method Sig="instance bool get_Handled()" />
          <Method Sig="instance void set_Handled(bool )" />
        </Type>
        <Type Name="HelpEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class HelpEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class HelpEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="HelpProvider">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance string get_HelpNamespace()" />
          <Method Sig="instance void set_HelpNamespace(string )" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance bool CanExtend(object )" />
          <Method Sig="instance string GetHelpKeyword(class Control )" />
          <Method Sig="instance struct HelpNavigator GetHelpNavigator(class Control )" />
          <Method Sig="instance string GetHelpString(class Control )" />
          <Method Sig="instance bool GetShowHelp(class Control )" />
          <Method Sig="instance void SetHelpString(class Control , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetHelpKeyword(class Control , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetHelpNavigator(class Control , struct HelpNavigator )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetShowHelp(class Control , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetShowHelp(class Control )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="ScrollBar">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance int get_LargeChange()" />
          <Method Sig="instance void set_LargeChange(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Maximum()" />
          <Method Sig="instance void set_Maximum(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Minimum()" />
          <Method Sig="instance void set_Minimum(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SmallChange()" />
          <Method Sig="instance void set_SmallChange(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance int get_Value()" />
          <Method Sig="instance void set_Value(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void add_Scroll(class ScrollEventHandler )" />
          <Method Sig="instance void remove_Scroll(class ScrollEventHandler )" />
          <Method Sig="instance void add_ValueChanged(class EventHandler )" />
          <Method Sig="instance void remove_ValueChanged(class EventHandler )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="HScrollBar">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="ScrollProperties">
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_LargeChange()" />
          <Method Sig="instance void set_LargeChange(int )" />
          <Method Sig="instance int get_Maximum()" />
          <Method Sig="instance void set_Maximum(int )" />
          <Method Sig="instance int get_Minimum()" />
          <Method Sig="instance void set_Minimum(int )" />
          <Method Sig="instance int get_SmallChange()" />
          <Method Sig="instance void set_SmallChange(int )" />
          <Method Sig="instance int get_Value()" />
          <Method Sig="instance void set_Value(int )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )" />
        </Type>
        <Type Name="HScrollProperties">
          <Method Sig="instance void .ctor(class ScrollableControl )" />
        </Type>
        <Type Name="HtmlDocument">
          <Method Sig="instance class HtmlElement get_ActiveElement()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement get_Body()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Domain()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Domain(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Title()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Title(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Uri get_Url()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlWindow get_Window()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ForeColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_LinkColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_LinkColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_ActiveLinkColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ActiveLinkColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_VisitedLinkColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_VisitedLinkColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_Focused()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object get_DomDocument()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Cookie()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Cookie(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_RightToLeft()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_RightToLeft(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Encoding()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Encoding(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_DefaultEncoding()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElementCollection get_All()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElementCollection get_Links()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElementCollection get_Images()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElementCollection get_Forms()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Write(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ExecCommand(string , bool , object )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Focus()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement GetElementById(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement GetElementFromPoint(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElementCollection GetElementsByTagName(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlDocument OpenNew(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement CreateElement(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object InvokeScript(string , [] object )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object InvokeScript(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void AttachEventHandler(string , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void DetachEventHandler(string , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Click(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Click(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ContextMenuShowing(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ContextMenuShowing(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Focusing(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Focusing(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_LosingFocus(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_LosingFocus(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseDown(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseDown(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseLeave(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseLeave(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseMove(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseMove(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseOver(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseOver(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseUp(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseUp(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Stop(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Stop(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="bool op_Equality(class HtmlDocument , class HtmlDocument )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="bool op_Inequality(class HtmlDocument , class HtmlDocument )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance int GetHashCode()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool Equals(object )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="void .cctor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="HtmlElement">
          <Method Sig="instance class HtmlElementCollection get_All()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElementCollection get_Children()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_CanHaveChildren()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Rectangle get_ClientRectangle()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlDocument get_Document()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_Enabled()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Enabled(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement get_FirstChild()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Id()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Id(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_InnerHtml()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_InnerHtml(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_InnerText()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_InnerText(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Name()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Name(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement get_NextSibling()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Rectangle get_OffsetRectangle()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement get_OffsetParent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_OuterHtml()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_OuterHtml(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_OuterText()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_OuterText(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement get_Parent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Rectangle get_ScrollRectangle()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance int get_ScrollLeft()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ScrollLeft(int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance int get_ScrollTop()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ScrollTop(int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Style()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Style(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_TagName()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance short get_TabIndex()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_TabIndex(short )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object get_DomElement()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement AppendChild(class HtmlElement )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void AttachEventHandler(string , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void DetachEventHandler(string , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Focus()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string GetAttribute(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElementCollection GetElementsByTagName(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement InsertAdjacentElement(struct HtmlElementInsertionOrientation , class HtmlElement )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object InvokeMember(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object InvokeMember(string , [] object )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void RemoveFocus()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void RaiseEvent(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ScrollIntoView(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void SetAttribute(string , string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Click(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Click(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DoubleClick(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DoubleClick(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Drag(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Drag(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragEnd(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragEnd(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragLeave(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragLeave(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragOver(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragOver(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Focusing(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Focusing(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_GotFocus(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_GotFocus(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_LosingFocus(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_LosingFocus(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_LostFocus(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_LostFocus(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyDown(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyDown(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyPress(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyPress(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyUp(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyUp(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseMove(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseMove(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseDown(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseDown(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseOver(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseOver(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseUp(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseUp(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseEnter(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseEnter(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseLeave(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseLeave(class HtmlElementEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="bool op_Equality(class HtmlElement , class HtmlElement )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="bool op_Inequality(class HtmlElement , class HtmlElement )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance int GetHashCode()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool Equals(object )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="void .cctor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="HtmlElementCollection">
          <Method Sig="instance class HtmlElement get_Item(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance class HtmlElement get_Item(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance class HtmlElementCollection GetElementsByName(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
        </Type>
        <Type Name="HtmlElementErrorEventArgs">
          <Method Sig="instance string get_Description()" />
          <Method Sig="instance bool get_Handled()" />
          <Method Sig="instance void set_Handled(bool )" />
          <Method Sig="instance int get_LineNumber()" />
          <Method Sig="instance class Uri get_Url()" />
        </Type>
        <Type Name="HtmlElementErrorEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class HtmlElementErrorEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class HtmlElementErrorEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="HtmlElementEventArgs">
          <Method Sig="instance struct MouseButtons get_MouseButtonsPressed()" />
          <Method Sig="instance struct Point get_ClientMousePosition()" />
          <Method Sig="instance struct Point get_OffsetMousePosition()" />
          <Method Sig="instance struct Point get_MousePosition()" />
          <Method Sig="instance bool get_BubbleEvent()" />
          <Method Sig="instance void set_BubbleEvent(bool )" />
          <Method Sig="instance int get_KeyPressedCode()" />
          <Method Sig="instance bool get_AltKeyPressed()" />
          <Method Sig="instance bool get_CtrlKeyPressed()" />
          <Method Sig="instance bool get_ShiftKeyPressed()" />
          <Method Sig="instance string get_EventType()" />
          <Method Sig="instance bool get_ReturnValue()" />
          <Method Sig="instance void set_ReturnValue(bool )" />
          <Method Sig="instance class HtmlElement get_FromElement()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance class HtmlElement get_ToElement()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
        </Type>
        <Type Name="HtmlElementEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class HtmlElementEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class HtmlElementEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="HtmlHistory">
          <Method Sig="instance void Dispose()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance int get_Length()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Back(int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Forward(int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Go(class Uri )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Go(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Go(int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object get_DomHistory()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="HtmlPopup">
          <Method Sig="instance class HtmlDocument get_Document()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object get_DomPopup()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Hide()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_IsOpen()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Show(int , int , int , int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Show(struct Point , struct Size )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="HtmlWindow">
          <Method Sig="instance class HtmlDocument get_Document()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object get_DomWindow()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlWindowCollection get_Frames()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlHistory get_History()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_IsClosed()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Name()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Name(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlWindow get_Opener()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlWindow get_Parent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Point get_Position()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Size get_Size()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Size(struct Size )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_StatusBarText()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_StatusBarText(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Uri get_Url()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlElement get_WindowFrameElement()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Alert(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void AttachEventHandler(string , class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Close()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool Confirm(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlPopup CreatePopup()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void DetachEventHandler(string , class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Focus()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void MoveTo(int , int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void MoveTo(struct Point )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(class Uri )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlWindow Open(string , string , string , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlWindow Open(class Uri , string , string , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlWindow OpenNew(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlWindow OpenNew(class Uri , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string Prompt(string , string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void RemoveFocus()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ResizeTo(int , int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ResizeTo(struct Size )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ScrollTo(int , int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ScrollTo(struct Point )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Error(class HtmlElementErrorEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Error(class HtmlElementErrorEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_GotFocus(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_GotFocus(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Load(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Load(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_LostFocus(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_LostFocus(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Resize(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Resize(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Scroll(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Scroll(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Unload(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Unload(class HtmlElementEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="bool op_Equality(class HtmlWindow , class HtmlWindow )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="bool op_Inequality(class HtmlWindow , class HtmlWindow )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance int GetHashCode()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool Equals(object )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="void .cctor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="HtmlWindowCollection">
          <Method Sig="instance class HtmlWindow get_Item(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance class HtmlWindow get_Item(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
        </Type>
        <Type Name="ImageIndexConverter">
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance class StandardValuesCollection GetStandardValues(class ITypeDescriptorContext )" />
          <Method Sig="instance bool GetStandardValuesExclusive(class ITypeDescriptorContext )" />
          <Method Sig="instance bool GetStandardValuesSupported(class ITypeDescriptorContext )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="ImageKeyConverter">
          <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance class StandardValuesCollection GetStandardValues(class ITypeDescriptorContext )" />
          <Method Sig="instance bool GetStandardValuesExclusive(class ITypeDescriptorContext )" />
          <Method Sig="instance bool GetStandardValuesSupported(class ITypeDescriptorContext )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="ImageListStreamer">
          <Method Sig="instance void GetObjectData(class SerializationInfo , struct StreamingContext )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="SerializationFormatter" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="InputLanguageChangedEventArgs">
          <Method Sig="instance void .ctor(class CultureInfo , byte )" />
          <Method Sig="instance void .ctor(class InputLanguage , byte )" />
          <Method Sig="instance class InputLanguage get_InputLanguage()" />
          <Method Sig="instance class CultureInfo get_Culture()" />
          <Method Sig="instance byte get_CharSet()" />
        </Type>
        <Type Name="InputLanguageChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class InputLanguageChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class InputLanguageChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="InputLanguageChangingEventArgs">
          <Method Sig="instance void .ctor(class CultureInfo , bool )" />
          <Method Sig="instance void .ctor(class InputLanguage , bool )" />
          <Method Sig="instance class InputLanguage get_InputLanguage()" />
          <Method Sig="instance class CultureInfo get_Culture()" />
          <Method Sig="instance bool get_SysCharSet()" />
        </Type>
        <Type Name="InputLanguageChangingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class InputLanguageChangingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class InputLanguageChangingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="InputLanguage">
          <Method Sig="instance class CultureInfo get_Culture()" />
          <Method Sig="class InputLanguage get_CurrentInputLanguage()" />
          <Method Sig="void set_CurrentInputLanguage(class InputLanguage )" />
          <Method Sig="class InputLanguage get_DefaultInputLanguage()" />
          <Method Sig="instance intptr get_Handle()" />
          <Method Sig="class InputLanguageCollection get_InstalledInputLanguages()" />
          <Method Sig="instance string get_LayoutName()" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="class InputLanguage FromCulture(class CultureInfo )" />
          <Method Sig="instance int GetHashCode()" />
        </Type>
        <Type Name="InputLanguageCollection">
          <Method Sig="instance class InputLanguage get_Item(int )" />
          <Method Sig="instance bool Contains(class InputLanguage )" />
          <Method Sig="instance void CopyTo([] class InputLanguage , int )" />
          <Method Sig="instance int IndexOf(class InputLanguage )" />
        </Type>
        <Type Name="InvalidateEventArgs">
          <Method Sig="instance void .ctor(struct Rectangle )" />
          <Method Sig="instance struct Rectangle get_InvalidRect()" />
        </Type>
        <Type Name="InvalidateEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class InvalidateEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class InvalidateEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ItemChangedEventArgs">
          <Method Sig="instance int get_Index()" />
        </Type>
        <Type Name="ItemChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ItemChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ItemChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ItemCheckedEventArgs">
          <Method Sig="instance void .ctor(class ListViewItem )" />
          <Method Sig="instance class ListViewItem get_Item()" />
        </Type>
        <Type Name="ItemCheckedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ItemCheckedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ItemCheckedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ItemCheckEventArgs">
          <Method Sig="instance void .ctor(int , struct CheckState , struct CheckState )" />
          <Method Sig="instance int get_Index()" />
          <Method Sig="instance struct CheckState get_NewValue()" />
          <Method Sig="instance void set_NewValue(struct CheckState )" />
          <Method Sig="instance struct CheckState get_CurrentValue()" />
        </Type>
        <Type Name="ItemCheckEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ItemCheckEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ItemCheckEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ItemDragEventArgs">
          <Method Sig="instance void .ctor(struct MouseButtons )" />
          <Method Sig="instance void .ctor(struct MouseButtons , object )" />
          <Method Sig="instance struct MouseButtons get_Button()" />
          <Method Sig="instance object get_Item()" />
        </Type>
        <Type Name="ItemDragEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ItemDragEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ItemDragEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="KeyEventArgs">
          <Method Sig="instance void .ctor(struct Keys )" />
          <Method Sig="instance bool get_Alt()" />
          <Method Sig="instance bool get_Control()" />
          <Method Sig="instance bool get_Handled()" />
          <Method Sig="instance void set_Handled(bool )" />
          <Method Sig="instance struct Keys get_KeyCode()" />
          <Method Sig="instance int get_KeyValue()" />
          <Method Sig="instance struct Keys get_KeyData()" />
          <Method Sig="instance struct Keys get_Modifiers()" />
          <Method Sig="instance bool get_Shift()" />
          <Method Sig="instance bool get_SuppressKeyPress()" />
          <Method Sig="instance void set_SuppressKeyPress(bool )" />
        </Type>
        <Type Name="KeyEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class KeyEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class KeyEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="KeyPressEventArgs">
          <Method Sig="instance void .ctor(char )" />
          <Method Sig="instance char get_KeyChar()" />
          <Method Sig="instance void set_KeyChar(char )" />
          <Method Sig="instance bool get_Handled()" />
          <Method Sig="instance void set_Handled(bool )" />
        </Type>
        <Type Name="KeyPressEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class KeyPressEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class KeyPressEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="KeysConverter">
          <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance int Compare(object , object )" />
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance class StandardValuesCollection GetStandardValues(class ITypeDescriptorContext )" />
          <Method Sig="instance bool GetStandardValuesExclusive(class ITypeDescriptorContext )" />
          <Method Sig="instance bool GetStandardValuesSupported(class ITypeDescriptorContext )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="Label">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance bool get_AutoEllipsis()" />
          <Method Sig="instance void set_AutoEllipsis(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_Image()" />
          <Method Sig="instance void set_Image(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )" />
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )" />
          <Method Sig="instance class ImageList get_ImageList()" />
          <Method Sig="instance void set_ImageList(class ImageList )" />
          <Method Sig="instance struct ContentAlignment get_ImageAlign()" />
          <Method Sig="instance void set_ImageAlign(struct ContentAlignment )" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance int get_PreferredHeight()" />
          <Method Sig="instance int get_PreferredWidth()" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance struct ContentAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct ContentAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextAlignChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextAlignChanged(class EventHandler )" />
          <Method Sig="instance bool get_UseCompatibleTextRendering()" />
          <Method Sig="instance void set_UseCompatibleTextRendering(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseMnemonic()" />
          <Method Sig="instance void set_UseMnemonic(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="LabelEditEventArgs">
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance void .ctor(int , string )" />
          <Method Sig="instance string get_Label()" />
          <Method Sig="instance int get_Item()" />
          <Method Sig="instance bool get_CancelEdit()" />
          <Method Sig="instance void set_CancelEdit(bool )" />
        </Type>
        <Type Name="LabelEditEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class LabelEditEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class LabelEditEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="LayoutEventArgs">
          <Method Sig="instance void .ctor(class IComponent , string )" />
          <Method Sig="instance void .ctor(class Control , string )" />
          <Method Sig="instance class IComponent get_AffectedComponent()" />
          <Method Sig="instance class Control get_AffectedControl()" />
          <Method Sig="instance string get_AffectedProperty()" />
        </Type>
        <Type Name="LayoutEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class LayoutEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class LayoutEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="LinkArea">
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance int get_Start()" />
          <Method Sig="instance void set_Start(int )" />
          <Method Sig="instance int get_Length()" />
          <Method Sig="instance void set_Length(int )" />
          <Method Sig="instance bool get_IsEmpty()" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="bool op_Equality(struct LinkArea , struct LinkArea )" />
          <Method Sig="bool op_Inequality(struct LinkArea , struct LinkArea )" />
          <Method Sig="instance int GetHashCode()" />
        </Type>
        <Type Name="LinkClickedEventArgs">
          <Method Sig="instance string get_LinkText()" />
          <Method Sig="instance void .ctor(string )" />
        </Type>
        <Type Name="LinkClickedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class LinkClickedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class LinkClickedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="LinkConverter">
          <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="LinkLabel">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ActiveLinkColor()" />
          <Method Sig="instance void set_ActiveLinkColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_DisabledLinkColor()" />
          <Method Sig="instance void set_DisabledLinkColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct LinkArea get_LinkArea()" />
          <Method Sig="instance void set_LinkArea(struct LinkArea )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct LinkBehavior get_LinkBehavior()" />
          <Method Sig="instance void set_LinkBehavior(struct LinkBehavior )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_LinkColor()" />
          <Method Sig="instance void set_LinkColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class LinkCollection get_Links()" />
          <Method Sig="instance bool get_LinkVisited()" />
          <Method Sig="instance void set_LinkVisited(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance struct Color get_VisitedLinkColor()" />
          <Method Sig="instance void set_VisitedLinkColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_LinkClicked(class LinkLabelLinkClickedEventHandler )" />
          <Method Sig="instance void remove_LinkClicked(class LinkLabelLinkClickedEventHandler )" />
          <Method Sig="instance bool get_UseCompatibleTextRendering()" />
          <Method Sig="instance void set_UseCompatibleTextRendering(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="LinkLabelLinkClickedEventArgs">
          <Method Sig="instance void .ctor(class Link )" />
          <Method Sig="instance void .ctor(class Link , struct MouseButtons )" />
          <Method Sig="instance struct MouseButtons get_Button()" />
          <Method Sig="instance class Link get_Link()" />
        </Type>
        <Type Name="LinkLabelLinkClickedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class LinkLabelLinkClickedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class LinkLabelLinkClickedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ListBindingConverter">
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object CreateInstance(class ITypeDescriptorContext , class IDictionary )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool GetCreateInstanceSupported(class ITypeDescriptorContext )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="ListBindingHelper">
          <Method Sig="object GetList(object )" />
          <Method Sig="object GetList(object , string )" />
          <Method Sig="string GetListName(object , [] class PropertyDescriptor )" />
          <Method Sig="class PropertyDescriptorCollection GetListItemProperties(object )" />
          <Method Sig="class PropertyDescriptorCollection GetListItemProperties(object , [] class PropertyDescriptor )" />
          <Method Sig="class PropertyDescriptorCollection GetListItemProperties(object , string , [] class PropertyDescriptor )" />
          <Method Sig="class Type GetListItemType(object )" />
          <Method Sig="class Type GetListItemType(object , string )" />
        </Type>
        <Type Name="ListControlConvertEventArgs">
          <Method Sig="instance void .ctor(object , class Type , object )" />
          <Method Sig="instance object get_ListItem()" />
        </Type>
        <Type Name="ListControlConvertEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ListControlConvertEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ListControlConvertEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ListViewItemConverter">
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="ListView">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ItemActivation get_Activation()" />
          <Method Sig="instance void set_Activation(struct ItemActivation )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ListViewAlignment get_Alignment()" />
          <Method Sig="instance void set_Alignment(struct ListViewAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowColumnReorder()" />
          <Method Sig="instance void set_AllowColumnReorder(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoArrange()" />
          <Method Sig="instance void set_AutoArrange(bool )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance bool get_BackgroundImageTiled()" />
          <Method Sig="instance void set_BackgroundImageTiled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )" />
          <Method Sig="instance bool get_CheckBoxes()" />
          <Method Sig="instance void set_CheckBoxes(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class CheckedIndexCollection get_CheckedIndices()" />
          <Method Sig="instance class CheckedListViewItemCollection get_CheckedItems()" />
          <Method Sig="instance class ColumnHeaderCollection get_Columns()" />
          <Method Sig="instance class ListViewItem get_FocusedItem()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_FocusedItem(class ListViewItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_FullRowSelect()" />
          <Method Sig="instance void set_FullRowSelect(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_GridLines()" />
          <Method Sig="instance void set_GridLines(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewGroupCollection get_Groups()" />
          <Method Sig="instance struct ColumnHeaderStyle get_HeaderStyle()" />
          <Method Sig="instance void set_HeaderStyle(struct ColumnHeaderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_HideSelection()" />
          <Method Sig="instance void set_HideSelection(bool )" />
          <Method Sig="instance bool get_HotTracking()" />
          <Method Sig="instance void set_HotTracking(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_HoverSelection()" />
          <Method Sig="instance void set_HoverSelection(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewInsertionMark get_InsertionMark()" />
          <Method Sig="instance class ListViewItemCollection get_Items()" />
          <Method Sig="instance bool get_LabelEdit()" />
          <Method Sig="instance void set_LabelEdit(bool )" />
          <Method Sig="instance bool get_LabelWrap()" />
          <Method Sig="instance void set_LabelWrap(bool )" />
          <Method Sig="instance class ImageList get_LargeImageList()" />
          <Method Sig="instance void set_LargeImageList(class ImageList )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IComparer get_ListViewItemSorter()" />
          <Method Sig="instance void set_ListViewItemSorter(class IComparer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_MultiSelect()" />
          <Method Sig="instance void set_MultiSelect(bool )" />
          <Method Sig="instance bool get_OwnerDraw()" />
          <Method Sig="instance void set_OwnerDraw(bool )" />
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance bool get_Scrollable()" />
          <Method Sig="instance void set_Scrollable(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SelectedIndexCollection get_SelectedIndices()" />
          <Method Sig="instance class SelectedListViewItemCollection get_SelectedItems()" />
          <Method Sig="instance bool get_ShowGroups()" />
          <Method Sig="instance void set_ShowGroups(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ImageList get_SmallImageList()" />
          <Method Sig="instance void set_SmallImageList(class ImageList )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowItemToolTips()" />
          <Method Sig="instance void set_ShowItemToolTips(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SortOrder get_Sorting()" />
          <Method Sig="instance void set_Sorting(struct SortOrder )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ImageList get_StateImageList()" />
          <Method Sig="instance void set_StateImageList(class ImageList )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance struct Size get_TileSize()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_TileSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewItem get_TopItem()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_TopItem(class ListViewItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct View get_View()" />
          <Method Sig="instance void set_View(struct View )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_VirtualListSize()" />
          <Method Sig="instance void set_VirtualListSize(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_VirtualMode()" />
          <Method Sig="instance void set_VirtualMode(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AfterLabelEdit(class LabelEditEventHandler )" />
          <Method Sig="instance void remove_AfterLabelEdit(class LabelEditEventHandler )" />
          <Method Sig="instance void add_BeforeLabelEdit(class LabelEditEventHandler )" />
          <Method Sig="instance void remove_BeforeLabelEdit(class LabelEditEventHandler )" />
          <Method Sig="instance void add_CacheVirtualItems(class CacheVirtualItemsEventHandler )" />
          <Method Sig="instance void remove_CacheVirtualItems(class CacheVirtualItemsEventHandler )" />
          <Method Sig="instance void add_ColumnClick(class ColumnClickEventHandler )" />
          <Method Sig="instance void remove_ColumnClick(class ColumnClickEventHandler )" />
          <Method Sig="instance void add_ColumnReordered(class ColumnReorderedEventHandler )" />
          <Method Sig="instance void remove_ColumnReordered(class ColumnReorderedEventHandler )" />
          <Method Sig="instance void add_ColumnWidthChanged(class ColumnWidthChangedEventHandler )" />
          <Method Sig="instance void remove_ColumnWidthChanged(class ColumnWidthChangedEventHandler )" />
          <Method Sig="instance void add_ColumnWidthChanging(class ColumnWidthChangingEventHandler )" />
          <Method Sig="instance void remove_ColumnWidthChanging(class ColumnWidthChangingEventHandler )" />
          <Method Sig="instance void add_DrawColumnHeader(class DrawListViewColumnHeaderEventHandler )" />
          <Method Sig="instance void remove_DrawColumnHeader(class DrawListViewColumnHeaderEventHandler )" />
          <Method Sig="instance void add_DrawItem(class DrawListViewItemEventHandler )" />
          <Method Sig="instance void remove_DrawItem(class DrawListViewItemEventHandler )" />
          <Method Sig="instance void add_DrawSubItem(class DrawListViewSubItemEventHandler )" />
          <Method Sig="instance void remove_DrawSubItem(class DrawListViewSubItemEventHandler )" />
          <Method Sig="instance void add_ItemActivate(class EventHandler )" />
          <Method Sig="instance void remove_ItemActivate(class EventHandler )" />
          <Method Sig="instance void add_ItemCheck(class ItemCheckEventHandler )" />
          <Method Sig="instance void remove_ItemCheck(class ItemCheckEventHandler )" />
          <Method Sig="instance void add_ItemChecked(class ItemCheckedEventHandler )" />
          <Method Sig="instance void remove_ItemChecked(class ItemCheckedEventHandler )" />
          <Method Sig="instance void add_ItemDrag(class ItemDragEventHandler )" />
          <Method Sig="instance void remove_ItemDrag(class ItemDragEventHandler )" />
          <Method Sig="instance void add_ItemMouseHover(class ListViewItemMouseHoverEventHandler )" />
          <Method Sig="instance void remove_ItemMouseHover(class ListViewItemMouseHoverEventHandler )" />
          <Method Sig="instance void add_ItemSelectionChanged(class ListViewItemSelectionChangedEventHandler )" />
          <Method Sig="instance void remove_ItemSelectionChanged(class ListViewItemSelectionChangedEventHandler )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void add_RetrieveVirtualItem(class RetrieveVirtualItemEventHandler )" />
          <Method Sig="instance void remove_RetrieveVirtualItem(class RetrieveVirtualItemEventHandler )" />
          <Method Sig="instance void add_SearchForVirtualItem(class SearchForVirtualItemEventHandler )" />
          <Method Sig="instance void remove_SearchForVirtualItem(class SearchForVirtualItemEventHandler )" />
          <Method Sig="instance void add_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance void add_VirtualItemsSelectionRangeChanged(class ListViewVirtualItemsSelectionRangeChangedEventHandler )" />
          <Method Sig="instance void remove_VirtualItemsSelectionRangeChanged(class ListViewVirtualItemsSelectionRangeChangedEventHandler )" />
          <Method Sig="instance void ArrangeIcons(struct ListViewAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ArrangeIcons()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeColumns(struct ColumnHeaderAutoResizeStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AutoResizeColumn(int , struct ColumnHeaderAutoResizeStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void BeginUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EndUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EnsureVisible(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewItem FindItemWithText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewItem FindItemWithText(string , bool , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewItem FindItemWithText(string , bool , int , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewItem FindNearestItem(struct SearchDirectionHint , struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewItem FindNearestItem(struct SearchDirectionHint , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewItem GetItemAt(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle GetItemRect(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle GetItemRect(int , struct ItemBoundsPortion )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewHitTestInfo HitTest(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewHitTestInfo HitTest(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RedrawItems(int , int , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Sort()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ListViewGroup">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string , string )" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(string , struct HorizontalAlignment )" />
          <Method Sig="instance string get_Header()" />
          <Method Sig="instance void set_Header(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct HorizontalAlignment get_HeaderAlignment()" />
          <Method Sig="instance void set_HeaderAlignment(struct HorizontalAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewItemCollection get_Items()" />
          <Method Sig="instance class ListView get_ListView()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ListViewGroupCollection">
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class ListViewGroup get_Item(int )" />
          <Method Sig="instance void set_Item(int , class ListViewGroup )" />
          <Method Sig="instance class ListViewGroup get_Item(string )" />
          <Method Sig="instance void set_Item(string , class ListViewGroup )" />
          <Method Sig="instance int Add(class ListViewGroup )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewGroup Add(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddRange([] class ListViewGroup )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddRange(class ListViewGroupCollection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Contains(class ListViewGroup )" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance int IndexOf(class ListViewGroup )" />
          <Method Sig="instance void Insert(int , class ListViewGroup )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Remove(class ListViewGroup )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAt(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="ListViewHitTestInfo">
          <Method Sig="instance void .ctor(class ListViewItem , class ListViewSubItem , struct ListViewHitTestLocations )" />
          <Method Sig="instance struct ListViewHitTestLocations get_Location()" />
          <Method Sig="instance class ListViewItem get_Item()" />
          <Method Sig="instance class ListViewSubItem get_SubItem()" />
        </Type>
        <Type Name="ListViewInsertionMark">
          <Method Sig="instance bool get_AppearsAfterItem()" />
          <Method Sig="instance void set_AppearsAfterItem(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_Bounds()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_Color()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Color(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Index()" />
          <Method Sig="instance void set_Index(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int NearestIndex(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="ListViewItem">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor([] string )" />
          <Method Sig="instance void .ctor([] string , int )" />
          <Method Sig="instance void .ctor([] string , int , struct Color , struct Color , class Font )" />
          <Method Sig="instance void .ctor([] class ListViewSubItem , int )" />
          <Method Sig="instance void .ctor(class ListViewGroup )" />
          <Method Sig="instance void .ctor(string , class ListViewGroup )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , int , class ListViewGroup )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor([] string , class ListViewGroup )" />
          <Method Sig="instance void .ctor([] string , int , class ListViewGroup )" />
          <Method Sig="instance void .ctor([] string , int , struct Color , struct Color , class Font , class ListViewGroup )" />
          <Method Sig="instance void .ctor([] class ListViewSubItem , int , class ListViewGroup )" />
          <Method Sig="instance void .ctor(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor([] string , string )" />
          <Method Sig="instance void .ctor([] string , string , struct Color , struct Color , class Font )" />
          <Method Sig="instance void .ctor([] class ListViewSubItem , string )" />
          <Method Sig="instance void .ctor(string , string , class ListViewGroup )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor([] string , string , class ListViewGroup )" />
          <Method Sig="instance void .ctor([] string , string , struct Color , struct Color , class Font , class ListViewGroup )" />
          <Method Sig="instance void .ctor([] class ListViewSubItem , string , class ListViewGroup )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance struct Rectangle get_Bounds()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Checked()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Checked(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Focused()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Focused(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance class ListViewGroup get_Group()" />
          <Method Sig="instance void set_Group(class ListViewGroup )" />
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ImageList get_ImageList()" />
          <Method Sig="instance int get_IndentCount()" />
          <Method Sig="instance void set_IndentCount(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Index()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListView get_ListView()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Point get_Position()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Position(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Selected()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Selected(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_StateImageIndex()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_StateImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewSubItemCollection get_SubItems()" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance void set_ToolTipText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseItemStyleForSubItems()" />
          <Method Sig="instance void set_UseItemStyleForSubItems(bool )" />
          <Method Sig="instance void BeginEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EnsureVisible()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewItem FindNearestItem(struct SearchDirectionHint )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle GetBounds(struct ItemBoundsPortion )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ListViewSubItem GetSubItemAt(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Remove()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ListViewItemMouseHoverEventArgs">
          <Method Sig="instance void .ctor(class ListViewItem )" />
          <Method Sig="instance class ListViewItem get_Item()" />
        </Type>
        <Type Name="ListViewItemMouseHoverEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ListViewItemMouseHoverEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ListViewItemMouseHoverEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ListViewItemSelectionChangedEventArgs">
          <Method Sig="instance void .ctor(class ListViewItem , int , bool )" />
          <Method Sig="instance bool get_IsSelected()" />
          <Method Sig="instance class ListViewItem get_Item()" />
          <Method Sig="instance int get_ItemIndex()" />
        </Type>
        <Type Name="ListViewItemSelectionChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ListViewItemSelectionChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ListViewItemSelectionChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ListViewVirtualItemsSelectionRangeChangedEventArgs">
          <Method Sig="instance void .ctor(int , int , bool )" />
          <Method Sig="instance int get_EndIndex()" />
          <Method Sig="instance bool get_IsSelected()" />
          <Method Sig="instance int get_StartIndex()" />
        </Type>
        <Type Name="ListViewVirtualItemsSelectionRangeChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ListViewVirtualItemsSelectionRangeChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ListViewVirtualItemsSelectionRangeChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="MainMenu">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class IContainer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor([] class MenuItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Collapse(class EventHandler )" />
          <Method Sig="instance void remove_Collapse(class EventHandler )" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )" />
          <Method Sig="instance class MainMenu CloneMenu()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Form GetForm()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="MaskedTextBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class MaskedTextProvider )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AcceptsTab()" />
          <Method Sig="instance void set_AcceptsTab(bool )" />
          <Method Sig="instance bool get_AllowPromptAsInput()" />
          <Method Sig="instance void set_AllowPromptAsInput(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlThread, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AcceptsTabChanged(class EventHandler )" />
          <Method Sig="instance void remove_AcceptsTabChanged(class EventHandler )" />
          <Method Sig="instance bool get_AsciiOnly()" />
          <Method Sig="instance void set_AsciiOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlThread, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_BeepOnError()" />
          <Method Sig="instance void set_BeepOnError(bool )" />
          <Method Sig="instance bool get_CanUndo()" />
          <Method Sig="instance class CultureInfo get_Culture()" />
          <Method Sig="instance void set_Culture(class CultureInfo )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlThread, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct MaskFormat get_CutCopyMaskFormat()" />
          <Method Sig="instance void set_CutCopyMaskFormat(struct MaskFormat )" />
          <Method Sig="instance class IFormatProvider get_FormatProvider()" />
          <Method Sig="instance void set_FormatProvider(class IFormatProvider )" />
          <Method Sig="instance bool get_HidePromptOnLeave()" />
          <Method Sig="instance void set_HidePromptOnLeave(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct InsertKeyMode get_InsertKeyMode()" />
          <Method Sig="instance void set_InsertKeyMode(struct InsertKeyMode )" />
          <Method Sig="instance bool get_IsOverwriteMode()" />
          <Method Sig="instance void add_IsOverwriteModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_IsOverwriteModeChanged(class EventHandler )" />
          <Method Sig="instance [] string get_Lines()" />
          <Method Sig="instance void set_Lines([] string )" />
          <Method Sig="instance string get_Mask()" />
          <Method Sig="instance void set_Mask(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlThread, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MaskChanged(class EventHandler )" />
          <Method Sig="instance void remove_MaskChanged(class EventHandler )" />
          <Method Sig="instance bool get_MaskCompleted()" />
          <Method Sig="instance bool get_MaskFull()" />
          <Method Sig="instance class MaskedTextProvider get_MaskedTextProvider()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MaskInputRejected(class MaskInputRejectedEventHandler )" />
          <Method Sig="instance void remove_MaskInputRejected(class MaskInputRejectedEventHandler )" />
          <Method Sig="instance int get_MaxLength()" />
          <Method Sig="instance void set_MaxLength(int )" />
          <Method Sig="instance bool get_Multiline()" />
          <Method Sig="instance void set_Multiline(bool )" />
          <Method Sig="instance void add_MultilineChanged(class EventHandler )" />
          <Method Sig="instance void remove_MultilineChanged(class EventHandler )" />
          <Method Sig="instance char get_PasswordChar()" />
          <Method Sig="instance void set_PasswordChar(char )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance char get_PromptChar()" />
          <Method Sig="instance void set_PromptChar(char )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlThread, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_RejectInputOnFirstFailure()" />
          <Method Sig="instance void set_RejectInputOnFirstFailure(bool )" />
          <Method Sig="instance bool get_ResetOnPrompt()" />
          <Method Sig="instance void set_ResetOnPrompt(bool )" />
          <Method Sig="instance bool get_ResetOnSpace()" />
          <Method Sig="instance void set_ResetOnSpace(bool )" />
          <Method Sig="instance bool get_SkipLiterals()" />
          <Method Sig="instance void set_SkipLiterals(bool )" />
          <Method Sig="instance string get_SelectedText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlThread, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlThread, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_TextLength()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct HorizontalAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct HorizontalAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TextAlignChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextAlignChanged(class EventHandler )" />
          <Method Sig="instance struct MaskFormat get_TextMaskFormat()" />
          <Method Sig="instance void set_TextMaskFormat(struct MaskFormat )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="instance void add_TypeValidationCompleted(class TypeValidationEventHandler )" />
          <Method Sig="instance void remove_TypeValidationCompleted(class TypeValidationEventHandler )" />
          <Method Sig="instance bool get_UseSystemPasswordChar()" />
          <Method Sig="instance void set_UseSystemPasswordChar(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Type get_ValidatingType()" />
          <Method Sig="instance void set_ValidatingType(class Type )" />
          <Method Sig="instance bool get_WordWrap()" />
          <Method Sig="instance void set_WordWrap(bool )" />
          <Method Sig="instance void ClearUndo()" />
          <Method Sig="instance char GetCharFromPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetCharIndexFromPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetFirstCharIndexOfCurrentLine()" />
          <Method Sig="instance int GetFirstCharIndexFromLine(int )" />
          <Method Sig="instance int GetLineFromCharIndex(int )" />
          <Method Sig="instance struct Point GetPositionFromCharIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ScrollToCaret()" />
          <Method Sig="instance void Undo()" />
          <Method Sig="instance object ValidateText()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="MaskInputRejectedEventArgs">
          <Method Sig="instance void .ctor(int , struct MaskedTextResultHint )" />
          <Method Sig="instance int get_Position()" />
          <Method Sig="instance struct MaskedTextResultHint get_RejectionHint()" />
        </Type>
        <Type Name="MaskInputRejectedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class MaskInputRejectedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class MaskInputRejectedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="MdiClient">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance [] class Form get_MdiChildren()" />
          <Method Sig="instance void LayoutMdi(struct MdiLayout )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="MenuStrip">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CanOverflow()" />
          <Method Sig="instance void set_CanOverflow(bool )" />
          <Method Sig="instance struct ToolStripGripStyle get_GripStyle()" />
          <Method Sig="instance void set_GripStyle(struct ToolStripGripStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MenuActivate(class EventHandler )" />
          <Method Sig="instance void remove_MenuActivate(class EventHandler )" />
          <Method Sig="instance void add_MenuDeactivate(class EventHandler )" />
          <Method Sig="instance void remove_MenuDeactivate(class EventHandler )" />
          <Method Sig="instance bool get_ShowItemToolTips()" />
          <Method Sig="instance void set_ShowItemToolTips(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Stretch()" />
          <Method Sig="instance void set_Stretch(bool )" />
          <Method Sig="instance class ToolStripMenuItem get_MdiWindowListItem()" />
          <Method Sig="instance void set_MdiWindowListItem(class ToolStripMenuItem )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripDropDownItem">
          <Method Sig="instance class ToolStripDropDown get_DropDown()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_DropDown(class ToolStripDropDown )" />
          <Method Sig="instance struct ToolStripDropDownDirection get_DropDownDirection()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_DropDownDirection(struct ToolStripDropDownDirection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DropDownClosed(class EventHandler )" />
          <Method Sig="instance void remove_DropDownClosed(class EventHandler )" />
          <Method Sig="instance void add_DropDownOpening(class EventHandler )" />
          <Method Sig="instance void remove_DropDownOpening(class EventHandler )" />
          <Method Sig="instance void add_DropDownOpened(class EventHandler )" />
          <Method Sig="instance void remove_DropDownOpened(class EventHandler )" />
          <Method Sig="instance class ToolStripItemCollection get_DropDownItems()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DropDownItemClicked(class ToolStripItemClickedEventHandler )" />
          <Method Sig="instance void remove_DropDownItemClicked(class ToolStripItemClickedEventHandler )" />
          <Method Sig="instance bool get_HasDropDownItems()" />
          <Method Sig="instance bool get_Pressed()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void HideDropDown()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ShowDropDown()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripMenuItem">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , [] class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler , struct Keys )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Checked()" />
          <Method Sig="instance void set_Checked(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CheckOnClick()" />
          <Method Sig="instance void set_CheckOnClick(bool )" />
          <Method Sig="instance struct CheckState get_CheckState()" />
          <Method Sig="instance void set_CheckState(struct CheckState )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CheckedChanged(class EventHandler )" />
          <Method Sig="instance void remove_CheckedChanged(class EventHandler )" />
          <Method Sig="instance void add_CheckStateChanged(class EventHandler )" />
          <Method Sig="instance void remove_CheckStateChanged(class EventHandler )" />
          <Method Sig="instance struct ToolStripItemOverflow get_Overflow()" />
          <Method Sig="instance void set_Overflow(struct ToolStripItemOverflow )" />
          <Method Sig="instance struct Keys get_ShortcutKeys()" />
          <Method Sig="instance void set_ShortcutKeys(struct Keys )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ShortcutKeyDisplayString()" />
          <Method Sig="instance void set_ShortcutKeyDisplayString(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowShortcutKeys()" />
          <Method Sig="instance void set_ShowShortcutKeys(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsMdiWindowListEntry()" />
          <Method Sig="void .cctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="ToolStripDropDownItemAccessibleObject">
          <Method Sig="instance void .ctor(class ToolStripDropDownItem )" />
          <Method Sig="instance struct AccessibleRole get_Role()" />
          <Method Sig="instance void DoDefaultAction()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class AccessibleObject GetChild(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetChildCount()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="MeasureItemEventArgs">
          <Method Sig="instance void .ctor(class Graphics , int , int )" />
          <Method Sig="instance void .ctor(class Graphics , int )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance int get_Index()" />
          <Method Sig="instance int get_ItemHeight()" />
          <Method Sig="instance void set_ItemHeight(int )" />
          <Method Sig="instance int get_ItemWidth()" />
          <Method Sig="instance void set_ItemWidth(int )" />
        </Type>
        <Type Name="MeasureItemEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class MeasureItemEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class MeasureItemEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="MenuItem">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class EventHandler , struct Shortcut )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , [] class MenuItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(struct MenuMerge , int , struct Shortcut , string , class EventHandler , class EventHandler , class EventHandler , [] class MenuItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_BarBreak()" />
          <Method Sig="instance void set_BarBreak(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Break()" />
          <Method Sig="instance void set_Break(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Checked()" />
          <Method Sig="instance void set_Checked(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_DefaultItem()" />
          <Method Sig="instance void set_DefaultItem(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_OwnerDraw()" />
          <Method Sig="instance void set_OwnerDraw(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Index()" />
          <Method Sig="instance void set_Index(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsParent()" />
          <Method Sig="instance bool get_MdiList()" />
          <Method Sig="instance void set_MdiList(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct MenuMerge get_MergeType()" />
          <Method Sig="instance void set_MergeType(struct MenuMerge )" />
          <Method Sig="instance int get_MergeOrder()" />
          <Method Sig="instance void set_MergeOrder(int )" />
          <Method Sig="instance char get_Mnemonic()" />
          <Method Sig="instance class Menu get_Parent()" />
          <Method Sig="instance bool get_RadioCheck()" />
          <Method Sig="instance void set_RadioCheck(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Shortcut get_Shortcut()" />
          <Method Sig="instance void set_Shortcut(struct Shortcut )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowShortcut()" />
          <Method Sig="instance void set_ShowShortcut(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )" />
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void remove_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void add_MeasureItem(class MeasureItemEventHandler )" />
          <Method Sig="instance void remove_MeasureItem(class MeasureItemEventHandler )" />
          <Method Sig="instance void add_Popup(class EventHandler )" />
          <Method Sig="instance void remove_Popup(class EventHandler )" />
          <Method Sig="instance void add_Select(class EventHandler )" />
          <Method Sig="instance void remove_Select(class EventHandler )" />
          <Method Sig="instance class MenuItem CloneMenu()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class MenuItem MergeMenu()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void MergeMenu(class MenuItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PerformClick()" />
          <Method Sig="instance void PerformSelect()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="Message">
          <Method Sig="instance intptr get_HWnd()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_HWnd(intptr )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance int get_Msg()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Msg(int )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance intptr get_WParam()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_WParam(intptr )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance intptr get_LParam()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_LParam(intptr )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance intptr get_Result()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Result(intptr )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance object GetLParam(class Type )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="struct Message Create(intptr , int , intptr , intptr )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance bool Equals(object )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="bool op_Inequality(struct Message , struct Message )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="bool op_Equality(struct Message , struct Message )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance int GetHashCode()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance string ToString()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="MessageBox">
          <Method Sig="struct DialogResult Show(string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions , string , struct HelpNavigator )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions , string , struct HelpNavigator )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions , string , struct HelpNavigator , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions , string , struct HelpNavigator , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string , string , struct MessageBoxButtons , struct MessageBoxIcon )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string , string , struct MessageBoxButtons )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton , struct MessageBoxOptions )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string , string , struct MessageBoxButtons , struct MessageBoxIcon , struct MessageBoxDefaultButton )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string , string , struct MessageBoxButtons , struct MessageBoxIcon )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string , string , struct MessageBoxButtons )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct DialogResult Show(class IWin32Window , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="MethodInvoker">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke()" />
          <Method Sig="instance class IAsyncResult BeginInvoke(class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="MonthCalendar">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] struct DateTime get_AnnuallyBoldedDates()" />
          <Method Sig="instance void set_AnnuallyBoldedDates([] struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance [] struct DateTime get_BoldedDates()" />
          <Method Sig="instance void set_BoldedDates([] struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_CalendarDimensions()" />
          <Method Sig="instance void set_CalendarDimensions(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Day get_FirstDayOfWeek()" />
          <Method Sig="instance void set_FirstDayOfWeek(struct Day )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance struct DateTime get_MaxDate()" />
          <Method Sig="instance void set_MaxDate(struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_MaxSelectionCount()" />
          <Method Sig="instance void set_MaxSelectionCount(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DateTime get_MinDate()" />
          <Method Sig="instance void set_MinDate(struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] struct DateTime get_MonthlyBoldedDates()" />
          <Method Sig="instance void set_MonthlyBoldedDates([] struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ScrollChange()" />
          <Method Sig="instance void set_ScrollChange(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DateTime get_SelectionEnd()" />
          <Method Sig="instance void set_SelectionEnd(struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DateTime get_SelectionStart()" />
          <Method Sig="instance void set_SelectionStart(struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SelectionRange get_SelectionRange()" />
          <Method Sig="instance void set_SelectionRange(class SelectionRange )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowToday()" />
          <Method Sig="instance void set_ShowToday(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowTodayCircle()" />
          <Method Sig="instance void set_ShowTodayCircle(bool )" />
          <Method Sig="instance bool get_ShowWeekNumbers()" />
          <Method Sig="instance void set_ShowWeekNumbers(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_SingleMonthSize()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance struct DateTime get_TodayDate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_TodayDate(struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TodayDateSet()" />
          <Method Sig="instance struct Color get_TitleBackColor()" />
          <Method Sig="instance void set_TitleBackColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_TitleForeColor()" />
          <Method Sig="instance void set_TitleForeColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_TrailingForeColor()" />
          <Method Sig="instance void set_TrailingForeColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddAnnuallyBoldedDate(struct DateTime )" />
          <Method Sig="instance void AddBoldedDate(struct DateTime )" />
          <Method Sig="instance void AddMonthlyBoldedDate(struct DateTime )" />
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_DateChanged(class DateRangeEventHandler )" />
          <Method Sig="instance void remove_DateChanged(class DateRangeEventHandler )" />
          <Method Sig="instance void add_DateSelected(class DateRangeEventHandler )" />
          <Method Sig="instance void remove_DateSelected(class DateRangeEventHandler )" />
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance class SelectionRange GetDisplayRange(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class HitTestInfo HitTest(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class HitTestInfo HitTest(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAllAnnuallyBoldedDates()" />
          <Method Sig="instance void RemoveAllBoldedDates()" />
          <Method Sig="instance void RemoveAllMonthlyBoldedDates()" />
          <Method Sig="instance void RemoveAnnuallyBoldedDate(struct DateTime )" />
          <Method Sig="instance void RemoveBoldedDate(struct DateTime )" />
          <Method Sig="instance void RemoveMonthlyBoldedDate(struct DateTime )" />
          <Method Sig="instance void SetCalendarDimensions(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetDate(struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetSelectionRange(struct DateTime , struct DateTime )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="instance void UpdateBoldedDates()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="MouseEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class MouseEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class MouseEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="NavigateEventArgs">
          <Method Sig="instance bool get_Forward()" />
          <Method Sig="instance void .ctor(bool )" />
        </Type>
        <Type Name="NavigateEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class NavigateEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class NavigateEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="NodeLabelEditEventArgs">
          <Method Sig="instance void .ctor(class TreeNode )" />
          <Method Sig="instance void .ctor(class TreeNode , string )" />
          <Method Sig="instance bool get_CancelEdit()" />
          <Method Sig="instance void set_CancelEdit(bool )" />
          <Method Sig="instance string get_Label()" />
          <Method Sig="instance class TreeNode get_Node()" />
        </Type>
        <Type Name="NodeLabelEditEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class NodeLabelEditEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class NodeLabelEditEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="NotifyIcon">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class IContainer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_BalloonTipText()" />
          <Method Sig="instance void set_BalloonTipText(string )" />
          <Method Sig="instance struct ToolTipIcon get_BalloonTipIcon()" />
          <Method Sig="instance void set_BalloonTipIcon(struct ToolTipIcon )" />
          <Method Sig="instance string get_BalloonTipTitle()" />
          <Method Sig="instance void set_BalloonTipTitle(string )" />
          <Method Sig="instance void add_BalloonTipClicked(class EventHandler )" />
          <Method Sig="instance void remove_BalloonTipClicked(class EventHandler )" />
          <Method Sig="instance void add_BalloonTipClosed(class EventHandler )" />
          <Method Sig="instance void remove_BalloonTipClosed(class EventHandler )" />
          <Method Sig="instance void add_BalloonTipShown(class EventHandler )" />
          <Method Sig="instance void remove_BalloonTipShown(class EventHandler )" />
          <Method Sig="instance class ContextMenu get_ContextMenu()" />
          <Method Sig="instance void set_ContextMenu(class ContextMenu )" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance class Icon get_Icon()" />
          <Method Sig="instance void set_Icon(class Icon )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDown(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseMove(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseUp(class MouseEventHandler )" />
          <Method Sig="instance void ShowBalloonTip(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ShowBalloonTip(int , string , string , struct ToolTipIcon )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="NumericUpDown">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class NumericUpDownAccelerationCollection get_Accelerations()" />
          <Method Sig="instance int get_DecimalPlaces()" />
          <Method Sig="instance void set_DecimalPlaces(int )" />
          <Method Sig="instance bool get_Hexadecimal()" />
          <Method Sig="instance void set_Hexadecimal(bool )" />
          <Method Sig="instance struct Decimal get_Increment()" />
          <Method Sig="instance void set_Increment(struct Decimal )" />
          <Method Sig="instance struct Decimal get_Maximum()" />
          <Method Sig="instance void set_Maximum(struct Decimal )" />
          <Method Sig="instance struct Decimal get_Minimum()" />
          <Method Sig="instance void set_Minimum(struct Decimal )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance bool get_ThousandsSeparator()" />
          <Method Sig="instance void set_ThousandsSeparator(bool )" />
          <Method Sig="instance struct Decimal get_Value()" />
          <Method Sig="instance void set_Value(struct Decimal )" />
          <Method Sig="instance void add_ValueChanged(class EventHandler )" />
          <Method Sig="instance void remove_ValueChanged(class EventHandler )" />
          <Method Sig="instance void BeginInit()" />
          <Method Sig="instance void DownButton()" />
          <Method Sig="instance void EndInit()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="instance void UpButton()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="NumericUpDownAcceleration">
          <Method Sig="instance void .ctor(int , struct Decimal )" />
          <Method Sig="instance int get_Seconds()" />
          <Method Sig="instance void set_Seconds(int )" />
          <Method Sig="instance struct Decimal get_Increment()" />
          <Method Sig="instance void set_Increment(struct Decimal )" />
        </Type>
        <Type Name="NumericUpDownAccelerationCollection">
          <Method Sig="instance void Add(class NumericUpDownAcceleration )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(class NumericUpDownAcceleration )" />
          <Method Sig="instance void CopyTo([] class NumericUpDownAcceleration , int )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance bool Remove(class NumericUpDownAcceleration )" />
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void AddRange([] class NumericUpDownAcceleration )" />
          <Method Sig="instance class NumericUpDownAcceleration get_Item(int )" />
        </Type>
        <Type Name="OpacityConverter">
          <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="OpenFileDialog">
          <Method Sig="instance bool get_CheckFileExists()" />
          <Method Sig="instance void set_CheckFileExists(bool )" />
          <Method Sig="instance bool get_Multiselect()" />
          <Method Sig="instance void set_Multiselect(bool )" />
          <Method Sig="instance bool get_ReadOnlyChecked()" />
          <Method Sig="instance void set_ReadOnlyChecked(bool )" />
          <Method Sig="instance bool get_ShowReadOnly()" />
          <Method Sig="instance void set_ShowReadOnly(bool )" />
          <Method Sig="instance class Stream OpenFile()" />
          <Method Sig="instance void Reset()" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="OSFeature">
          <Method Sig="class OSFeature get_Feature()" />
          <Method Sig="instance class Version GetVersionPresent(object )" />
          <Method Sig="bool IsPresent(struct SystemParameter )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OwnerDrawPropertyBag">
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance bool IsEmpty()" />
          <Method Sig="class OwnerDrawPropertyBag Copy(class OwnerDrawPropertyBag )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="Padding">
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance void .ctor(int , int , int , int )" />
          <Method Sig="instance int get_All()" />
          <Method Sig="instance void set_All(int )" />
          <Method Sig="instance int get_Bottom()" />
          <Method Sig="instance void set_Bottom(int )" />
          <Method Sig="instance int get_Left()" />
          <Method Sig="instance void set_Left(int )" />
          <Method Sig="instance int get_Right()" />
          <Method Sig="instance void set_Right(int )" />
          <Method Sig="instance int get_Top()" />
          <Method Sig="instance void set_Top(int )" />
          <Method Sig="instance int get_Horizontal()" />
          <Method Sig="instance int get_Vertical()" />
          <Method Sig="instance struct Size get_Size()" />
          <Method Sig="struct Padding Add(struct Padding , struct Padding )" />
          <Method Sig="struct Padding Subtract(struct Padding , struct Padding )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="struct Padding op_Addition(struct Padding , struct Padding )" />
          <Method Sig="struct Padding op_Subtraction(struct Padding , struct Padding )" />
          <Method Sig="bool op_Equality(struct Padding , struct Padding )" />
          <Method Sig="bool op_Inequality(struct Padding , struct Padding )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="PaddingConverter">
          <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance object CreateInstance(class ITypeDescriptorContext , class IDictionary )" />
          <Method Sig="instance bool GetCreateInstanceSupported(class ITypeDescriptorContext )" />
          <Method Sig="instance class PropertyDescriptorCollection GetProperties(class ITypeDescriptorContext , object , [] class Attribute )" />
          <Method Sig="instance bool GetPropertiesSupported(class ITypeDescriptorContext )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="PaintEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class PaintEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class PaintEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="PictureBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void CancelAsync()" />
          <Method Sig="instance bool get_CausesValidation()" />
          <Method Sig="instance void set_CausesValidation(bool )" />
          <Method Sig="instance void add_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance void remove_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance class Image get_ErrorImage()" />
          <Method Sig="instance void set_ErrorImage(class Image )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance class Image get_Image()" />
          <Method Sig="instance void set_Image(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ImageLocation()" />
          <Method Sig="instance void set_ImageLocation(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_InitialImage()" />
          <Method Sig="instance void set_InitialImage(class Image )" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void Load()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Load(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void LoadAsync()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void LoadAsync(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_LoadCompleted(class AsyncCompletedEventHandler )" />
          <Method Sig="instance void remove_LoadCompleted(class AsyncCompletedEventHandler )" />
          <Method Sig="instance void add_LoadProgressChanged(class ProgressChangedEventHandler )" />
          <Method Sig="instance void remove_LoadProgressChanged(class ProgressChangedEventHandler )" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance struct PictureBoxSizeMode get_SizeMode()" />
          <Method Sig="instance void set_SizeMode(struct PictureBoxSizeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_SizeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_SizeModeChanged(class EventHandler )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance int get_TabIndex()" />
          <Method Sig="instance void set_TabIndex(int )" />
          <Method Sig="instance void add_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance void add_Enter(class EventHandler )" />
          <Method Sig="instance void remove_Enter(class EventHandler )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void add_Leave(class EventHandler )" />
          <Method Sig="instance void remove_Leave(class EventHandler )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="instance bool get_WaitOnLoad()" />
          <Method Sig="instance void set_WaitOnLoad(bool )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="PopupEventArgs">
          <Method Sig="instance void .ctor(class IWin32Window , class Control , bool , struct Size )" />
          <Method Sig="instance class IWin32Window get_AssociatedWindow()" />
          <Method Sig="instance class Control get_AssociatedControl()" />
          <Method Sig="instance bool get_IsBalloon()" />
          <Method Sig="instance struct Size get_ToolTipSize()" />
          <Method Sig="instance void set_ToolTipSize(struct Size )" />
        </Type>
        <Type Name="PopupEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class PopupEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class PopupEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="PowerStatus">
          <Method Sig="instance struct PowerLineStatus get_PowerLineStatus()" />
          <Method Sig="instance struct BatteryChargeStatus get_BatteryChargeStatus()" />
          <Method Sig="instance int get_BatteryFullLifetime()" />
          <Method Sig="instance float get_BatteryLifePercent()" />
          <Method Sig="instance int get_BatteryLifeRemaining()" />
        </Type>
        <Type Name="PreviewKeyDownEventArgs">
          <Method Sig="instance void .ctor(struct Keys )" />
          <Method Sig="instance bool get_Alt()" />
          <Method Sig="instance bool get_Control()" />
          <Method Sig="instance struct Keys get_KeyCode()" />
          <Method Sig="instance int get_KeyValue()" />
          <Method Sig="instance struct Keys get_KeyData()" />
          <Method Sig="instance struct Keys get_Modifiers()" />
          <Method Sig="instance bool get_Shift()" />
          <Method Sig="instance bool get_IsInputKey()" />
          <Method Sig="instance void set_IsInputKey(bool )" />
        </Type>
        <Type Name="PreviewKeyDownEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class PreviewKeyDownEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class PreviewKeyDownEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ProfessionalColors">
          <Method Sig="void .cctor()" />
          <Method Sig="struct Color get_ButtonSelectedHighlight()" />
          <Method Sig="struct Color get_ButtonSelectedHighlightBorder()" />
          <Method Sig="struct Color get_ButtonPressedHighlight()" />
          <Method Sig="struct Color get_ButtonPressedHighlightBorder()" />
          <Method Sig="struct Color get_ButtonCheckedHighlight()" />
          <Method Sig="struct Color get_ButtonCheckedHighlightBorder()" />
          <Method Sig="struct Color get_ButtonPressedBorder()" />
          <Method Sig="struct Color get_ButtonSelectedBorder()" />
          <Method Sig="struct Color get_ButtonCheckedGradientBegin()" />
          <Method Sig="struct Color get_ButtonCheckedGradientMiddle()" />
          <Method Sig="struct Color get_ButtonCheckedGradientEnd()" />
          <Method Sig="struct Color get_ButtonSelectedGradientBegin()" />
          <Method Sig="struct Color get_ButtonSelectedGradientMiddle()" />
          <Method Sig="struct Color get_ButtonSelectedGradientEnd()" />
          <Method Sig="struct Color get_ButtonPressedGradientBegin()" />
          <Method Sig="struct Color get_ButtonPressedGradientMiddle()" />
          <Method Sig="struct Color get_ButtonPressedGradientEnd()" />
          <Method Sig="struct Color get_CheckBackground()" />
          <Method Sig="struct Color get_CheckSelectedBackground()" />
          <Method Sig="struct Color get_CheckPressedBackground()" />
          <Method Sig="struct Color get_GripDark()" />
          <Method Sig="struct Color get_GripLight()" />
          <Method Sig="struct Color get_ImageMarginGradientBegin()" />
          <Method Sig="struct Color get_ImageMarginGradientMiddle()" />
          <Method Sig="struct Color get_ImageMarginGradientEnd()" />
          <Method Sig="struct Color get_ImageMarginRevealedGradientBegin()" />
          <Method Sig="struct Color get_ImageMarginRevealedGradientMiddle()" />
          <Method Sig="struct Color get_ImageMarginRevealedGradientEnd()" />
          <Method Sig="struct Color get_MenuStripGradientBegin()" />
          <Method Sig="struct Color get_MenuStripGradientEnd()" />
          <Method Sig="struct Color get_MenuBorder()" />
          <Method Sig="struct Color get_MenuItemSelected()" />
          <Method Sig="struct Color get_MenuItemBorder()" />
          <Method Sig="struct Color get_MenuItemSelectedGradientBegin()" />
          <Method Sig="struct Color get_MenuItemSelectedGradientEnd()" />
          <Method Sig="struct Color get_MenuItemPressedGradientBegin()" />
          <Method Sig="struct Color get_MenuItemPressedGradientMiddle()" />
          <Method Sig="struct Color get_MenuItemPressedGradientEnd()" />
          <Method Sig="struct Color get_RaftingContainerGradientBegin()" />
          <Method Sig="struct Color get_RaftingContainerGradientEnd()" />
          <Method Sig="struct Color get_SeparatorDark()" />
          <Method Sig="struct Color get_SeparatorLight()" />
          <Method Sig="struct Color get_StatusStripGradientBegin()" />
          <Method Sig="struct Color get_StatusStripGradientEnd()" />
          <Method Sig="struct Color get_ToolStripBorder()" />
          <Method Sig="struct Color get_ToolStripDropDownBackground()" />
          <Method Sig="struct Color get_ToolStripGradientBegin()" />
          <Method Sig="struct Color get_ToolStripGradientMiddle()" />
          <Method Sig="struct Color get_ToolStripGradientEnd()" />
          <Method Sig="struct Color get_ToolStripContentPanelGradientBegin()" />
          <Method Sig="struct Color get_ToolStripContentPanelGradientEnd()" />
          <Method Sig="struct Color get_ToolStripPanelGradientBegin()" />
          <Method Sig="struct Color get_ToolStripPanelGradientEnd()" />
          <Method Sig="struct Color get_OverflowButtonGradientBegin()" />
          <Method Sig="struct Color get_OverflowButtonGradientMiddle()" />
          <Method Sig="struct Color get_OverflowButtonGradientEnd()" />
        </Type>
        <Type Name="ProfessionalColorTable">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_UseSystemColors()" />
          <Method Sig="instance void set_UseSystemColors(bool )" />
          <Method Sig="instance struct Color get_ButtonSelectedHighlight()" />
          <Method Sig="instance struct Color get_ButtonSelectedHighlightBorder()" />
          <Method Sig="instance struct Color get_ButtonPressedHighlight()" />
          <Method Sig="instance struct Color get_ButtonPressedHighlightBorder()" />
          <Method Sig="instance struct Color get_ButtonCheckedHighlight()" />
          <Method Sig="instance struct Color get_ButtonCheckedHighlightBorder()" />
          <Method Sig="instance struct Color get_ButtonPressedBorder()" />
          <Method Sig="instance struct Color get_ButtonSelectedBorder()" />
          <Method Sig="instance struct Color get_ButtonCheckedGradientBegin()" />
          <Method Sig="instance struct Color get_ButtonCheckedGradientMiddle()" />
          <Method Sig="instance struct Color get_ButtonCheckedGradientEnd()" />
          <Method Sig="instance struct Color get_ButtonSelectedGradientBegin()" />
          <Method Sig="instance struct Color get_ButtonSelectedGradientMiddle()" />
          <Method Sig="instance struct Color get_ButtonSelectedGradientEnd()" />
          <Method Sig="instance struct Color get_ButtonPressedGradientBegin()" />
          <Method Sig="instance struct Color get_ButtonPressedGradientMiddle()" />
          <Method Sig="instance struct Color get_ButtonPressedGradientEnd()" />
          <Method Sig="instance struct Color get_CheckBackground()" />
          <Method Sig="instance struct Color get_CheckSelectedBackground()" />
          <Method Sig="instance struct Color get_CheckPressedBackground()" />
          <Method Sig="instance struct Color get_GripDark()" />
          <Method Sig="instance struct Color get_GripLight()" />
          <Method Sig="instance struct Color get_ImageMarginGradientBegin()" />
          <Method Sig="instance struct Color get_ImageMarginGradientMiddle()" />
          <Method Sig="instance struct Color get_ImageMarginGradientEnd()" />
          <Method Sig="instance struct Color get_ImageMarginRevealedGradientBegin()" />
          <Method Sig="instance struct Color get_ImageMarginRevealedGradientMiddle()" />
          <Method Sig="instance struct Color get_ImageMarginRevealedGradientEnd()" />
          <Method Sig="instance struct Color get_MenuStripGradientBegin()" />
          <Method Sig="instance struct Color get_MenuStripGradientEnd()" />
          <Method Sig="instance struct Color get_MenuItemSelected()" />
          <Method Sig="instance struct Color get_MenuItemBorder()" />
          <Method Sig="instance struct Color get_MenuBorder()" />
          <Method Sig="instance struct Color get_MenuItemSelectedGradientBegin()" />
          <Method Sig="instance struct Color get_MenuItemSelectedGradientEnd()" />
          <Method Sig="instance struct Color get_MenuItemPressedGradientBegin()" />
          <Method Sig="instance struct Color get_MenuItemPressedGradientMiddle()" />
          <Method Sig="instance struct Color get_MenuItemPressedGradientEnd()" />
          <Method Sig="instance struct Color get_RaftingContainerGradientBegin()" />
          <Method Sig="instance struct Color get_RaftingContainerGradientEnd()" />
          <Method Sig="instance struct Color get_SeparatorDark()" />
          <Method Sig="instance struct Color get_SeparatorLight()" />
          <Method Sig="instance struct Color get_StatusStripGradientBegin()" />
          <Method Sig="instance struct Color get_StatusStripGradientEnd()" />
          <Method Sig="instance struct Color get_ToolStripBorder()" />
          <Method Sig="instance struct Color get_ToolStripDropDownBackground()" />
          <Method Sig="instance struct Color get_ToolStripGradientBegin()" />
          <Method Sig="instance struct Color get_ToolStripGradientMiddle()" />
          <Method Sig="instance struct Color get_ToolStripGradientEnd()" />
          <Method Sig="instance struct Color get_ToolStripContentPanelGradientBegin()" />
          <Method Sig="instance struct Color get_ToolStripContentPanelGradientEnd()" />
          <Method Sig="instance struct Color get_ToolStripPanelGradientBegin()" />
          <Method Sig="instance struct Color get_ToolStripPanelGradientEnd()" />
          <Method Sig="instance struct Color get_OverflowButtonGradientBegin()" />
          <Method Sig="instance struct Color get_OverflowButtonGradientMiddle()" />
          <Method Sig="instance struct Color get_OverflowButtonGradientEnd()" />
        </Type>
        <Type Name="ProgressBar">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ProgressBarStyle get_Style()" />
          <Method Sig="instance void set_Style(struct ProgressBarStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance bool get_CausesValidation()" />
          <Method Sig="instance void set_CausesValidation(bool )" />
          <Method Sig="instance void add_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance void remove_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance int get_MarqueeAnimationSpeed()" />
          <Method Sig="instance void set_MarqueeAnimationSpeed(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Maximum()" />
          <Method Sig="instance void set_Maximum(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Minimum()" />
          <Method Sig="instance void set_Minimum(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance int get_Step()" />
          <Method Sig="instance void set_Step(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance int get_Value()" />
          <Method Sig="instance void set_Value(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void add_Enter(class EventHandler )" />
          <Method Sig="instance void remove_Enter(class EventHandler )" />
          <Method Sig="instance void add_Leave(class EventHandler )" />
          <Method Sig="instance void remove_Leave(class EventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void Increment(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PerformStep()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetForeColor()" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="ProgressBarRenderer">
          <Method Sig="bool get_IsSupported()" />
          <Method Sig="void DrawHorizontalBar(class Graphics , struct Rectangle )" />
          <Method Sig="void DrawVerticalBar(class Graphics , struct Rectangle )" />
          <Method Sig="void DrawHorizontalChunks(class Graphics , struct Rectangle )" />
          <Method Sig="void DrawVerticalChunks(class Graphics , struct Rectangle )" />
          <Method Sig="int get_ChunkThickness()" />
          <Method Sig="int get_ChunkSpaceThickness()" />
        </Type>
        <Type Name="PropertyGrid">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_AutoScroll()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_AutoScroll(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackgroundImage(class Image )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BrowsableAttributes(class AttributeCollection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class AttributeCollection get_BrowsableAttributes()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_CanShowCommands()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_CategoryForeColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_CategoryForeColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_CommandsBackColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_CommandsBackColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_CommandsForeColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_CommandsForeColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_CommandsLinkColor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_CommandsLinkColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_CommandsActiveLinkColor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_CommandsActiveLinkColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_CommandsDisabledLinkColor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_CommandsDisabledLinkColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_CommandsVisible()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_CommandsVisibleIfAvailable()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_CommandsVisibleIfAvailable(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Point get_ContextMenuDefaultLocation()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class ControlCollection get_Controls()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ForeColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_HelpBackColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_HelpBackColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_HelpForeColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_HelpForeColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_HelpVisible()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_HelpVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_LineColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_LineColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Padding get_Padding()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Padding(struct Padding )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_PaddingChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct PropertySort get_PropertySort()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_PropertySort(struct PropertySort )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class PropertyTabCollection get_PropertyTabs()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object get_SelectedObject()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_SelectedObject(object )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_SelectedObjects([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance [] object get_SelectedObjects()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class PropertyTab get_SelectedTab()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class GridItem get_SelectedGridItem()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_SelectedGridItem(class GridItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class ISite get_Site()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Site(class ISite )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Text()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Text(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_TextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_TextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_LargeButtons()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_LargeButtons(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_ToolbarVisible()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ToolbarVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_ViewBackColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ViewBackColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_ViewForeColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ViewForeColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseDown(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseDown(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseUp(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseUp(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseMove(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseMove(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseEnter(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseEnter(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_PropertyValueChanged(class PropertyValueChangedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_PropertyValueChanged(class PropertyValueChangedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_PropertyTabChanged(class PropertyTabChangedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_PropertyTabChanged(class PropertyTabChangedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_PropertySortChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_PropertySortChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_SelectedGridItemChanged(class SelectedGridItemChangedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_SelectedGridItemChanged(class SelectedGridItemChangedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_SelectedObjectsChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_SelectedObjectsChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void CollapseAllGridItems()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ExpandAllGridItems()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Refresh()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void RefreshTabs(struct PropertyTabScope )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ResetSelectedProperty()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_UseCompatibleTextRendering()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_UseCompatibleTextRendering(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="void .cctor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="PropertyManager">
          <Method Sig="instance object get_Current()" />
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void SuspendBinding()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResumeBinding()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void CancelCurrentEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EndCurrentEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Position()" />
          <Method Sig="instance void set_Position(int )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance void AddNew()" />
          <Method Sig="instance void RemoveAt(int )" />
        </Type>
        <Type Name="PropertyTabChangedEventArgs">
          <Method Sig="instance void .ctor(class PropertyTab , class PropertyTab )" />
          <Method Sig="instance class PropertyTab get_OldTab()" />
          <Method Sig="instance class PropertyTab get_NewTab()" />
        </Type>
        <Type Name="PropertyTabChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class PropertyTabChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class PropertyTabChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="PropertyValueChangedEventArgs">
          <Method Sig="instance void .ctor(class GridItem , object )" />
          <Method Sig="instance class GridItem get_ChangedItem()" />
          <Method Sig="instance object get_OldValue()" />
        </Type>
        <Type Name="PropertyValueChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class PropertyValueChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class PropertyValueChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="QueryAccessibilityHelpEventArgs">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string , string , string )" />
          <Method Sig="instance string get_HelpNamespace()" />
          <Method Sig="instance void set_HelpNamespace(string )" />
          <Method Sig="instance string get_HelpString()" />
          <Method Sig="instance void set_HelpString(string )" />
          <Method Sig="instance string get_HelpKeyword()" />
          <Method Sig="instance void set_HelpKeyword(string )" />
        </Type>
        <Type Name="QueryAccessibilityHelpEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class QueryAccessibilityHelpEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class QueryAccessibilityHelpEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="QueryContinueDragEventArgs">
          <Method Sig="instance void .ctor(int , bool , struct DragAction )" />
          <Method Sig="instance int get_KeyState()" />
          <Method Sig="instance bool get_EscapePressed()" />
          <Method Sig="instance struct DragAction get_Action()" />
          <Method Sig="instance void set_Action(struct DragAction )" />
        </Type>
        <Type Name="QueryContinueDragEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class QueryContinueDragEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class QueryContinueDragEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="QuestionEventArgs">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(bool )" />
          <Method Sig="instance bool get_Response()" />
          <Method Sig="instance void set_Response(bool )" />
        </Type>
        <Type Name="QuestionEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class QuestionEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class QuestionEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="RadioButton">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoCheck()" />
          <Method Sig="instance void set_AutoCheck(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Appearance get_Appearance()" />
          <Method Sig="instance void set_Appearance(struct Appearance )" />
          <Method Sig="instance void add_AppearanceChanged(class EventHandler )" />
          <Method Sig="instance void remove_AppearanceChanged(class EventHandler )" />
          <Method Sig="instance struct ContentAlignment get_CheckAlign()" />
          <Method Sig="instance void set_CheckAlign(struct ContentAlignment )" />
          <Method Sig="instance bool get_Checked()" />
          <Method Sig="instance void set_Checked(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ContentAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct ContentAlignment )" />
          <Method Sig="instance void add_CheckedChanged(class EventHandler )" />
          <Method Sig="instance void remove_CheckedChanged(class EventHandler )" />
          <Method Sig="instance void PerformClick()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="RadioButtonRenderer">
          <Method Sig="bool get_RenderMatchingApplicationState()" />
          <Method Sig="void set_RenderMatchingApplicationState(bool )" />
          <Method Sig="bool IsBackgroundPartiallyTransparent(struct RadioButtonState )" />
          <Method Sig="void DrawParentBackground(class Graphics , struct Rectangle , class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void DrawRadioButton(class Graphics , struct Point , struct RadioButtonState )" />
          <Method Sig="void DrawRadioButton(class Graphics , struct Point , struct Rectangle , string , class Font , bool , struct RadioButtonState )" />
          <Method Sig="void DrawRadioButton(class Graphics , struct Point , struct Rectangle , string , class Font , struct TextFormatFlags , bool , struct RadioButtonState )" />
          <Method Sig="void DrawRadioButton(class Graphics , struct Point , struct Rectangle , string , class Font , class Image , struct Rectangle , bool , struct RadioButtonState )" />
          <Method Sig="void DrawRadioButton(class Graphics , struct Point , struct Rectangle , string , class Font , struct TextFormatFlags , class Image , struct Rectangle , bool , struct RadioButtonState )" />
          <Method Sig="struct Size GetGlyphSize(class Graphics , struct RadioButtonState )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="RelatedImageListAttribute">
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance string get_RelatedImageList()" />
        </Type>
        <Type Name="ContentsResizedEventArgs">
          <Method Sig="instance void .ctor(struct Rectangle )" />
          <Method Sig="instance struct Rectangle get_NewRectangle()" />
        </Type>
        <Type Name="ContentsResizedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ContentsResizedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ContentsResizedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="RetrieveVirtualItemEventArgs">
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance int get_ItemIndex()" />
          <Method Sig="instance class ListViewItem get_Item()" />
          <Method Sig="instance void set_Item(class ListViewItem )" />
        </Type>
        <Type Name="RetrieveVirtualItemEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class RetrieveVirtualItemEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class RetrieveVirtualItemEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="RichTextBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoWordSelection()" />
          <Method Sig="instance void set_AutoWordSelection(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance int get_BulletIndent()" />
          <Method Sig="instance void set_BulletIndent(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CanRedo()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_DetectUrls()" />
          <Method Sig="instance void set_DetectUrls(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_EnableAutoDragDrop()" />
          <Method Sig="instance void set_EnableAutoDragDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct RichTextBoxLanguageOptions get_LanguageOption()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_LanguageOption(struct RichTextBoxLanguageOptions )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_MaxLength()" />
          <Method Sig="instance void set_MaxLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Multiline()" />
          <Method Sig="instance void set_Multiline(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_RedoActionName()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_RichTextShortcutsEnabled()" />
          <Method Sig="instance void set_RichTextShortcutsEnabled(bool )" />
          <Method Sig="instance int get_RightMargin()" />
          <Method Sig="instance void set_RightMargin(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Rtf()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Rtf(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct RichTextBoxScrollBars get_ScrollBars()" />
          <Method Sig="instance void set_ScrollBars(struct RichTextBoxScrollBars )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct HorizontalAlignment get_SelectionAlignment()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionAlignment(struct HorizontalAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_SelectionBullet()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionBullet(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionCharOffset()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionCharOffset(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_SelectionColor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_SelectionBackColor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionBackColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Font get_SelectionFont()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionFont(class Font )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionHangingIndent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionHangingIndent(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionIndent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionIndent(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionLength()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_SelectionProtected()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionProtected(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_SelectedRtf()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedRtf(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionRightIndent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionRightIndent(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] int get_SelectionTabs()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionTabs([] int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_SelectedText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct RichTextBoxSelectionTypes get_SelectionType()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowSelectionMargin()" />
          <Method Sig="instance void set_ShowSelectionMargin(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_TextLength()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_UndoActionName()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance float get_ZoomFactor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_ZoomFactor(float )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ContentsResized(class ContentsResizedEventHandler )" />
          <Method Sig="instance void remove_ContentsResized(class ContentsResizedEventHandler )" />
          <Method Sig="instance void add_DragDrop(class DragEventHandler )" />
          <Method Sig="instance void remove_DragDrop(class DragEventHandler )" />
          <Method Sig="instance void add_DragEnter(class DragEventHandler )" />
          <Method Sig="instance void remove_DragEnter(class DragEventHandler )" />
          <Method Sig="instance void add_DragLeave(class EventHandler )" />
          <Method Sig="instance void remove_DragLeave(class EventHandler )" />
          <Method Sig="instance void add_DragOver(class DragEventHandler )" />
          <Method Sig="instance void remove_DragOver(class DragEventHandler )" />
          <Method Sig="instance void add_GiveFeedback(class GiveFeedbackEventHandler )" />
          <Method Sig="instance void remove_GiveFeedback(class GiveFeedbackEventHandler )" />
          <Method Sig="instance void add_QueryContinueDrag(class QueryContinueDragEventHandler )" />
          <Method Sig="instance void remove_QueryContinueDrag(class QueryContinueDragEventHandler )" />
          <Method Sig="instance void add_HScroll(class EventHandler )" />
          <Method Sig="instance void remove_HScroll(class EventHandler )" />
          <Method Sig="instance void add_LinkClicked(class LinkClickedEventHandler )" />
          <Method Sig="instance void remove_LinkClicked(class LinkClickedEventHandler )" />
          <Method Sig="instance void add_ImeChange(class EventHandler )" />
          <Method Sig="instance void remove_ImeChange(class EventHandler )" />
          <Method Sig="instance void add_Protected(class EventHandler )" />
          <Method Sig="instance void remove_Protected(class EventHandler )" />
          <Method Sig="instance void add_SelectionChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectionChanged(class EventHandler )" />
          <Method Sig="instance void add_VScroll(class EventHandler )" />
          <Method Sig="instance void remove_VScroll(class EventHandler )" />
          <Method Sig="instance bool CanPaste(class Format )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DrawToBitmap(class Bitmap , struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Find(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Find(string , struct RichTextBoxFinds )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Find(string , int , struct RichTextBoxFinds )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Find(string , int , int , struct RichTextBoxFinds )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Find([] char )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Find([] char , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Find([] char , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetCharIndexFromPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetLineFromCharIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Point GetPositionFromCharIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void LoadFile(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void LoadFile(string , struct RichTextBoxStreamType )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void LoadFile(class Stream , struct RichTextBoxStreamType )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Paste(class Format )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Redo()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SaveFile(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SaveFile(string , struct RichTextBoxStreamType )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SaveFile(class Stream , struct RichTextBoxStreamType )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SaveFileDialog">
          <Method Sig="instance bool get_CreatePrompt()" />
          <Method Sig="instance void set_CreatePrompt(bool )" />
          <Method Sig="instance bool get_OverwritePrompt()" />
          <Method Sig="instance void set_OverwritePrompt(bool )" />
          <Method Sig="instance class Stream OpenFile()" />
          <Method Sig="instance void Reset()" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="Screen">
          <Method Sig="[] class Screen get_AllScreens()" />
          <Method Sig="instance int get_BitsPerPixel()" />
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance string get_DeviceName()" />
          <Method Sig="instance bool get_Primary()" />
          <Method Sig="class Screen get_PrimaryScreen()" />
          <Method Sig="instance struct Rectangle get_WorkingArea()" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="class Screen FromPoint(struct Point )" />
          <Method Sig="class Screen FromRectangle(struct Rectangle )" />
          <Method Sig="class Screen FromControl(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class Screen FromHandle(intptr )" />
          <Method Sig="struct Rectangle GetWorkingArea(struct Point )" />
          <Method Sig="struct Rectangle GetWorkingArea(struct Rectangle )" />
          <Method Sig="struct Rectangle GetWorkingArea(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="struct Rectangle GetBounds(struct Point )" />
          <Method Sig="struct Rectangle GetBounds(struct Rectangle )" />
          <Method Sig="struct Rectangle GetBounds(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ScrollBarRenderer">
          <Method Sig="bool get_IsSupported()" />
          <Method Sig="void DrawArrowButton(class Graphics , struct Rectangle , struct ScrollBarArrowButtonState )" />
          <Method Sig="void DrawHorizontalThumb(class Graphics , struct Rectangle , struct ScrollBarState )" />
          <Method Sig="void DrawVerticalThumb(class Graphics , struct Rectangle , struct ScrollBarState )" />
          <Method Sig="void DrawHorizontalThumbGrip(class Graphics , struct Rectangle , struct ScrollBarState )" />
          <Method Sig="void DrawVerticalThumbGrip(class Graphics , struct Rectangle , struct ScrollBarState )" />
          <Method Sig="void DrawRightHorizontalTrack(class Graphics , struct Rectangle , struct ScrollBarState )" />
          <Method Sig="void DrawLeftHorizontalTrack(class Graphics , struct Rectangle , struct ScrollBarState )" />
          <Method Sig="void DrawUpperVerticalTrack(class Graphics , struct Rectangle , struct ScrollBarState )" />
          <Method Sig="void DrawLowerVerticalTrack(class Graphics , struct Rectangle , struct ScrollBarState )" />
          <Method Sig="void DrawSizeBox(class Graphics , struct Rectangle , struct ScrollBarSizeBoxState )" />
          <Method Sig="struct Size GetThumbGripSize(class Graphics , struct ScrollBarState )" />
          <Method Sig="struct Size GetSizeBoxSize(class Graphics , struct ScrollBarState )" />
        </Type>
        <Type Name="ScrollEventArgs">
          <Method Sig="instance void .ctor(struct ScrollEventType , int )" />
          <Method Sig="instance void .ctor(struct ScrollEventType , int , struct ScrollOrientation )" />
          <Method Sig="instance void .ctor(struct ScrollEventType , int , int )" />
          <Method Sig="instance void .ctor(struct ScrollEventType , int , int , struct ScrollOrientation )" />
          <Method Sig="instance struct ScrollOrientation get_ScrollOrientation()" />
          <Method Sig="instance struct ScrollEventType get_Type()" />
          <Method Sig="instance int get_NewValue()" />
          <Method Sig="instance void set_NewValue(int )" />
          <Method Sig="instance int get_OldValue()" />
        </Type>
        <Type Name="ScrollEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ScrollEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ScrollEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SearchForVirtualItemEventArgs">
          <Method Sig="instance void .ctor(bool , bool , bool , string , struct Point , struct SearchDirectionHint , int )" />
          <Method Sig="instance bool get_IsTextSearch()" />
          <Method Sig="instance bool get_IncludeSubItemsInSearch()" />
          <Method Sig="instance int get_Index()" />
          <Method Sig="instance void set_Index(int )" />
          <Method Sig="instance bool get_IsPrefixSearch()" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance struct Point get_StartingPoint()" />
          <Method Sig="instance struct SearchDirectionHint get_Direction()" />
          <Method Sig="instance int get_StartIndex()" />
        </Type>
        <Type Name="SearchForVirtualItemEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class SearchForVirtualItemEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class SearchForVirtualItemEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SelectedGridItemChangedEventArgs">
          <Method Sig="instance void .ctor(class GridItem , class GridItem )" />
          <Method Sig="instance class GridItem get_NewSelection()" />
          <Method Sig="instance class GridItem get_OldSelection()" />
        </Type>
        <Type Name="SelectedGridItemChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class SelectedGridItemChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class SelectedGridItemChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SelectionRange">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(struct DateTime , struct DateTime )" />
          <Method Sig="instance void .ctor(class SelectionRange )" />
          <Method Sig="instance struct DateTime get_End()" />
          <Method Sig="instance void set_End(struct DateTime )" />
          <Method Sig="instance struct DateTime get_Start()" />
          <Method Sig="instance void set_Start(struct DateTime )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="SelectionRangeConverter">
          <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance object CreateInstance(class ITypeDescriptorContext , class IDictionary )" />
          <Method Sig="instance bool GetCreateInstanceSupported(class ITypeDescriptorContext )" />
          <Method Sig="instance class PropertyDescriptorCollection GetProperties(class ITypeDescriptorContext , object , [] class Attribute )" />
          <Method Sig="instance bool GetPropertiesSupported(class ITypeDescriptorContext )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="SendKeys">
          <Method Sig="void .cctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void Send(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SendWait(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void Flush()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="SplitContainer">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoScroll()" />
          <Method Sig="instance void set_AutoScroll(bool )" />
          <Method Sig="instance struct Point get_AutoScrollOffset()" />
          <Method Sig="instance void set_AutoScrollOffset(struct Point )" />
          <Method Sig="instance struct Size get_AutoScrollMinSize()" />
          <Method Sig="instance void set_AutoScrollMinSize(struct Size )" />
          <Method Sig="instance struct Size get_AutoScrollMargin()" />
          <Method Sig="instance void set_AutoScrollMargin(struct Size )" />
          <Method Sig="instance struct Point get_AutoScrollPosition()" />
          <Method Sig="instance void set_AutoScrollPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance class BindingContext get_BindingContext()" />
          <Method Sig="instance void set_BindingContext(class BindingContext )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )" />
          <Method Sig="instance class ControlCollection get_Controls()" />
          <Method Sig="instance void add_ControlAdded(class ControlEventHandler )" />
          <Method Sig="instance void remove_ControlAdded(class ControlEventHandler )" />
          <Method Sig="instance void add_ControlRemoved(class ControlEventHandler )" />
          <Method Sig="instance void remove_ControlRemoved(class ControlEventHandler )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )" />
          <Method Sig="instance struct FixedPanel get_FixedPanel()" />
          <Method Sig="instance void set_FixedPanel(struct FixedPanel )" />
          <Method Sig="instance bool get_IsSplitterFixed()" />
          <Method Sig="instance void set_IsSplitterFixed(bool )" />
          <Method Sig="instance struct Orientation get_Orientation()" />
          <Method Sig="instance void set_Orientation(struct Orientation )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SplitterPanel get_Panel1()" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance bool get_Panel1Collapsed()" />
          <Method Sig="instance void set_Panel1Collapsed(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Panel2Collapsed()" />
          <Method Sig="instance void set_Panel2Collapsed(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Panel1MinSize()" />
          <Method Sig="instance void set_Panel1MinSize(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SplitterPanel get_Panel2()" />
          <Method Sig="instance int get_Panel2MinSize()" />
          <Method Sig="instance void set_Panel2MinSize(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SplitterDistance()" />
          <Method Sig="instance void set_SplitterDistance(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SplitterIncrement()" />
          <Method Sig="instance void set_SplitterIncrement(int )" />
          <Method Sig="instance struct Rectangle get_SplitterRectangle()" />
          <Method Sig="instance int get_SplitterWidth()" />
          <Method Sig="instance void set_SplitterWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void add_SplitterMoving(class SplitterCancelEventHandler )" />
          <Method Sig="instance void remove_SplitterMoving(class SplitterCancelEventHandler )" />
          <Method Sig="instance void add_SplitterMoved(class SplitterEventHandler )" />
          <Method Sig="instance void remove_SplitterMoved(class SplitterEventHandler )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance void OnSplitterMoving(class SplitterCancelEventArgs )" />
          <Method Sig="instance void OnSplitterMoved(class SplitterEventArgs )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="Splitter">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AnchorStyles get_Anchor()" />
          <Method Sig="instance void set_Anchor(struct AnchorStyles )" />
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance int get_MinExtra()" />
          <Method Sig="instance void set_MinExtra(int )" />
          <Method Sig="instance int get_MinSize()" />
          <Method Sig="instance void set_MinSize(int )" />
          <Method Sig="instance int get_SplitPosition()" />
          <Method Sig="instance void set_SplitPosition(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance void add_Enter(class EventHandler )" />
          <Method Sig="instance void remove_Enter(class EventHandler )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void add_Leave(class EventHandler )" />
          <Method Sig="instance void remove_Leave(class EventHandler )" />
          <Method Sig="instance void add_SplitterMoving(class SplitterEventHandler )" />
          <Method Sig="instance void remove_SplitterMoving(class SplitterEventHandler )" />
          <Method Sig="instance void add_SplitterMoved(class SplitterEventHandler )" />
          <Method Sig="instance void remove_SplitterMoved(class SplitterEventHandler )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SplitterCancelEventArgs">
          <Method Sig="instance void .ctor(int , int , int , int )" />
          <Method Sig="instance int get_MouseCursorX()" />
          <Method Sig="instance int get_MouseCursorY()" />
          <Method Sig="instance int get_SplitX()" />
          <Method Sig="instance void set_SplitX(int )" />
          <Method Sig="instance int get_SplitY()" />
          <Method Sig="instance void set_SplitY(int )" />
        </Type>
        <Type Name="SplitterCancelEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class SplitterCancelEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class SplitterCancelEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SplitterEventArgs">
          <Method Sig="instance void .ctor(int , int , int , int )" />
          <Method Sig="instance int get_X()" />
          <Method Sig="instance int get_Y()" />
          <Method Sig="instance int get_SplitX()" />
          <Method Sig="instance void set_SplitX(int )" />
          <Method Sig="instance int get_SplitY()" />
          <Method Sig="instance void set_SplitY(int )" />
        </Type>
        <Type Name="SplitterEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class SplitterEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class SplitterEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SplitterPanel">
          <Method Sig="instance void .ctor(class SplitContainer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct AutoSizeMode get_AutoSizeMode()" />
          <Method Sig="instance void set_AutoSizeMode(struct AutoSizeMode )" />
          <Method Sig="instance struct AnchorStyles get_Anchor()" />
          <Method Sig="instance void set_Anchor(struct AnchorStyles )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )" />
          <Method Sig="instance class DockPaddingEdges get_DockPadding()" />
          <Method Sig="instance int get_Height()" />
          <Method Sig="instance void set_Height(int )" />
          <Method Sig="instance struct Point get_Location()" />
          <Method Sig="instance void set_Location(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_MinimumSize()" />
          <Method Sig="instance void set_MinimumSize(struct Size )" />
          <Method Sig="instance struct Size get_MaximumSize()" />
          <Method Sig="instance void set_MaximumSize(struct Size )" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance class Control get_Parent()" />
          <Method Sig="instance void set_Parent(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_Size()" />
          <Method Sig="instance void set_Size(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_TabIndex()" />
          <Method Sig="instance void set_TabIndex(int )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Width()" />
          <Method Sig="instance void set_Width(int )" />
          <Method Sig="instance void add_VisibleChanged(class EventHandler )" />
          <Method Sig="instance void remove_VisibleChanged(class EventHandler )" />
          <Method Sig="instance void add_DockChanged(class EventHandler )" />
          <Method Sig="instance void remove_DockChanged(class EventHandler )" />
          <Method Sig="instance void add_LocationChanged(class EventHandler )" />
          <Method Sig="instance void remove_LocationChanged(class EventHandler )" />
          <Method Sig="instance void add_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
        </Type>
        <Type Name="StatusBar">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance class StatusBarPanelCollection get_Panels()" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowPanels()" />
          <Method Sig="instance void set_ShowPanels(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_SizingGrip()" />
          <Method Sig="instance void set_SizingGrip(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DrawItem(class StatusBarDrawItemEventHandler )" />
          <Method Sig="instance void remove_DrawItem(class StatusBarDrawItemEventHandler )" />
          <Method Sig="instance void add_PanelClick(class StatusBarPanelClickEventHandler )" />
          <Method Sig="instance void remove_PanelClick(class StatusBarPanelClickEventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="StatusBarDrawItemEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class Font , struct Rectangle , int , struct DrawItemState , class StatusBarPanel )" />
          <Method Sig="instance void .ctor(class Graphics , class Font , struct Rectangle , int , struct DrawItemState , class StatusBarPanel , struct Color , struct Color )" />
          <Method Sig="instance class StatusBarPanel get_Panel()" />
        </Type>
        <Type Name="StatusBarDrawItemEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class StatusBarDrawItemEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class StatusBarDrawItemEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="StatusBarPanel">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct HorizontalAlignment get_Alignment()" />
          <Method Sig="instance void set_Alignment(struct HorizontalAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct StatusBarPanelAutoSize get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(struct StatusBarPanelAutoSize )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct StatusBarPanelBorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct StatusBarPanelBorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Icon get_Icon()" />
          <Method Sig="instance void set_Icon(class Icon )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_MinWidth()" />
          <Method Sig="instance void set_MinWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance class StatusBar get_Parent()" />
          <Method Sig="instance struct StatusBarPanelStyle get_Style()" />
          <Method Sig="instance void set_Style(struct StatusBarPanelStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance void set_ToolTipText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Width()" />
          <Method Sig="instance void set_Width(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void BeginInit()" />
          <Method Sig="instance void EndInit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="StatusBarPanelClickEventArgs">
          <Method Sig="instance void .ctor(class StatusBarPanel , struct MouseButtons , int , int , int )" />
          <Method Sig="instance class StatusBarPanel get_StatusBarPanel()" />
        </Type>
        <Type Name="StatusBarPanelClickEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class StatusBarPanelClickEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class StatusBarPanelClickEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="StatusStrip">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CanOverflow()" />
          <Method Sig="instance void set_CanOverflow(bool )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolStripGripStyle get_GripStyle()" />
          <Method Sig="instance void set_GripStyle(struct ToolStripGripStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolStripLayoutStyle get_LayoutStyle()" />
          <Method Sig="instance void set_LayoutStyle(struct ToolStripLayoutStyle )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance bool get_ShowItemToolTips()" />
          <Method Sig="instance void set_ShowItemToolTips(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_SizingGrip()" />
          <Method Sig="instance void set_SizingGrip(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_SizeGripBounds()" />
          <Method Sig="instance bool get_Stretch()" />
          <Method Sig="instance void set_Stretch(bool )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SystemInformation">
          <Method Sig="bool get_DragFullWindows()" />
          <Method Sig="bool get_HighContrast()" />
          <Method Sig="int get_MouseWheelScrollLines()" />
          <Method Sig="struct Size get_PrimaryMonitorSize()" />
          <Method Sig="int get_VerticalScrollBarWidth()" />
          <Method Sig="int get_HorizontalScrollBarHeight()" />
          <Method Sig="int get_CaptionHeight()" />
          <Method Sig="struct Size get_BorderSize()" />
          <Method Sig="struct Size get_FixedFrameBorderSize()" />
          <Method Sig="int get_VerticalScrollBarThumbHeight()" />
          <Method Sig="int get_HorizontalScrollBarThumbWidth()" />
          <Method Sig="struct Size get_IconSize()" />
          <Method Sig="struct Size get_CursorSize()" />
          <Method Sig="class Font get_MenuFont()" />
          <Method Sig="int get_MenuHeight()" />
          <Method Sig="class PowerStatus get_PowerStatus()" />
          <Method Sig="struct Rectangle get_WorkingArea()" />
          <Method Sig="int get_KanjiWindowHeight()" />
          <Method Sig="bool get_MousePresent()" />
          <Method Sig="int get_VerticalScrollBarArrowHeight()" />
          <Method Sig="int get_HorizontalScrollBarArrowWidth()" />
          <Method Sig="bool get_DebugOS()" />
          <Method Sig="bool get_MouseButtonsSwapped()" />
          <Method Sig="struct Size get_MinimumWindowSize()" />
          <Method Sig="struct Size get_CaptionButtonSize()" />
          <Method Sig="struct Size get_FrameBorderSize()" />
          <Method Sig="struct Size get_MinWindowTrackSize()" />
          <Method Sig="struct Size get_DoubleClickSize()" />
          <Method Sig="int get_DoubleClickTime()" />
          <Method Sig="struct Size get_IconSpacingSize()" />
          <Method Sig="bool get_RightAlignedMenus()" />
          <Method Sig="bool get_PenWindows()" />
          <Method Sig="bool get_DbcsEnabled()" />
          <Method Sig="int get_MouseButtons()" />
          <Method Sig="bool get_Secure()" />
          <Method Sig="struct Size get_Border3DSize()" />
          <Method Sig="struct Size get_MinimizedWindowSpacingSize()" />
          <Method Sig="struct Size get_SmallIconSize()" />
          <Method Sig="int get_ToolWindowCaptionHeight()" />
          <Method Sig="struct Size get_ToolWindowCaptionButtonSize()" />
          <Method Sig="struct Size get_MenuButtonSize()" />
          <Method Sig="struct ArrangeStartingPosition get_ArrangeStartingPosition()" />
          <Method Sig="struct ArrangeDirection get_ArrangeDirection()" />
          <Method Sig="struct Size get_MinimizedWindowSize()" />
          <Method Sig="struct Size get_MaxWindowTrackSize()" />
          <Method Sig="struct Size get_PrimaryMonitorMaximizedWindowSize()" />
          <Method Sig="bool get_Network()" />
          <Method Sig="bool get_TerminalServerSession()" />
          <Method Sig="struct BootMode get_BootMode()" />
          <Method Sig="struct Size get_DragSize()" />
          <Method Sig="bool get_ShowSounds()" />
          <Method Sig="struct Size get_MenuCheckSize()" />
          <Method Sig="bool get_MidEastEnabled()" />
          <Method Sig="bool get_NativeMouseWheelSupport()" />
          <Method Sig="bool get_MouseWheelPresent()" />
          <Method Sig="struct Rectangle get_VirtualScreen()" />
          <Method Sig="int get_MonitorCount()" />
          <Method Sig="bool get_MonitorsSameDisplayFormat()" />
          <Method Sig="string get_ComputerName()" />
          <Method Sig="string get_UserDomainName()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="UserName;UserDomain" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool get_UserInteractive()" />
          <Method Sig="string get_UserName()" />
          <Method Sig="bool get_IsDropShadowEnabled()" />
          <Method Sig="bool get_IsFlatMenuEnabled()" />
          <Method Sig="bool get_IsFontSmoothingEnabled()" />
          <Method Sig="int get_FontSmoothingContrast()" />
          <Method Sig="int get_FontSmoothingType()" />
          <Method Sig="int get_IconHorizontalSpacing()" />
          <Method Sig="int get_IconVerticalSpacing()" />
          <Method Sig="bool get_IsIconTitleWrappingEnabled()" />
          <Method Sig="bool get_MenuAccessKeysUnderlined()" />
          <Method Sig="int get_KeyboardDelay()" />
          <Method Sig="bool get_IsKeyboardPreferred()" />
          <Method Sig="int get_KeyboardSpeed()" />
          <Method Sig="struct Size get_MouseHoverSize()" />
          <Method Sig="int get_MouseHoverTime()" />
          <Method Sig="int get_MouseSpeed()" />
          <Method Sig="bool get_IsSnapToDefaultEnabled()" />
          <Method Sig="struct LeftRightAlignment get_PopupMenuAlignment()" />
          <Method Sig="bool get_IsMenuFadeEnabled()" />
          <Method Sig="int get_MenuShowDelay()" />
          <Method Sig="bool get_IsComboBoxAnimationEnabled()" />
          <Method Sig="bool get_IsTitleBarGradientEnabled()" />
          <Method Sig="bool get_IsHotTrackingEnabled()" />
          <Method Sig="bool get_IsListBoxSmoothScrollingEnabled()" />
          <Method Sig="bool get_IsMenuAnimationEnabled()" />
          <Method Sig="bool get_IsSelectionFadeEnabled()" />
          <Method Sig="bool get_IsToolTipAnimationEnabled()" />
          <Method Sig="bool get_UIEffectsEnabled()" />
          <Method Sig="bool get_IsActiveWindowTrackingEnabled()" />
          <Method Sig="int get_ActiveWindowTrackingDelay()" />
          <Method Sig="bool get_IsMinimizeRestoreAnimationEnabled()" />
          <Method Sig="int get_BorderMultiplierFactor()" />
          <Method Sig="int get_CaretBlinkTime()" />
          <Method Sig="int get_CaretWidth()" />
          <Method Sig="int get_MouseWheelScrollDelta()" />
          <Method Sig="int get_VerticalFocusThickness()" />
          <Method Sig="int get_HorizontalFocusThickness()" />
          <Method Sig="int get_VerticalResizeBorderThickness()" />
          <Method Sig="int get_HorizontalResizeBorderThickness()" />
          <Method Sig="struct ScreenOrientation get_ScreenOrientation()" />
          <Method Sig="int get_SizingBorderWidth()" />
          <Method Sig="struct Size get_SmallCaptionButtonSize()" />
          <Method Sig="struct Size get_MenuBarButtonSize()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="TabControl">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct TabAlignment get_Alignment()" />
          <Method Sig="instance void set_Alignment(struct TabAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct TabAppearance get_Appearance()" />
          <Method Sig="instance void set_Appearance(struct TabAppearance )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance struct Rectangle get_DisplayRectangle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct TabDrawMode get_DrawMode()" />
          <Method Sig="instance void set_DrawMode(struct TabDrawMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_HotTrack()" />
          <Method Sig="instance void set_HotTrack(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ImageList get_ImageList()" />
          <Method Sig="instance void set_ImageList(class ImageList )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_ItemSize()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_ItemSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Multiline()" />
          <Method Sig="instance void set_Multiline(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Point get_Padding()" />
          <Method Sig="instance void set_Padding(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_RowCount()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectedIndex()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TabPage get_SelectedTab()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedTab(class TabPage )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct TabSizeMode get_SizeMode()" />
          <Method Sig="instance void set_SizeMode(struct TabSizeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowToolTips()" />
          <Method Sig="instance void set_ShowToolTips(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_TabCount()" />
          <Method Sig="instance class TabPageCollection get_TabPages()" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance void add_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void remove_DrawItem(class DrawItemEventHandler )" />
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void add_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance void add_Selecting(class TabControlCancelEventHandler )" />
          <Method Sig="instance void remove_Selecting(class TabControlCancelEventHandler )" />
          <Method Sig="instance void add_Selected(class TabControlEventHandler )" />
          <Method Sig="instance void remove_Selected(class TabControlEventHandler )" />
          <Method Sig="instance void add_Deselecting(class TabControlCancelEventHandler )" />
          <Method Sig="instance void remove_Deselecting(class TabControlCancelEventHandler )" />
          <Method Sig="instance void add_Deselected(class TabControlEventHandler )" />
          <Method Sig="instance void remove_Deselected(class TabControlEventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void DeselectTab(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DeselectTab(class TabPage )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DeselectTab(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Control GetControl(int )" />
          <Method Sig="instance struct Rectangle GetTabRect(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SelectTab(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SelectTab(class TabPage )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SelectTab(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="TabControlCancelEventArgs">
          <Method Sig="instance void .ctor(class TabPage , int , bool , struct TabControlAction )" />
          <Method Sig="instance class TabPage get_TabPage()" />
          <Method Sig="instance int get_TabPageIndex()" />
          <Method Sig="instance struct TabControlAction get_Action()" />
        </Type>
        <Type Name="TabControlCancelEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class TabControlCancelEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class TabControlCancelEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="TabControlEventArgs">
          <Method Sig="instance void .ctor(class TabPage , int , struct TabControlAction )" />
          <Method Sig="instance class TabPage get_TabPage()" />
          <Method Sig="instance int get_TabPageIndex()" />
          <Method Sig="instance struct TabControlAction get_Action()" />
        </Type>
        <Type Name="TabControlEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class TabControlEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class TabControlEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="TableLayoutPanel">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance class TableLayoutSettings get_LayoutSettings()" />
          <Method Sig="instance void set_LayoutSettings(class TableLayoutSettings )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )" />
          <Method Sig="instance struct TableLayoutPanelCellBorderStyle get_CellBorderStyle()" />
          <Method Sig="instance void set_CellBorderStyle(struct TableLayoutPanelCellBorderStyle )" />
          <Method Sig="instance class TableLayoutControlCollection get_Controls()" />
          <Method Sig="instance int get_ColumnCount()" />
          <Method Sig="instance void set_ColumnCount(int )" />
          <Method Sig="instance struct TableLayoutPanelGrowStyle get_GrowStyle()" />
          <Method Sig="instance void set_GrowStyle(struct TableLayoutPanelGrowStyle )" />
          <Method Sig="instance int get_RowCount()" />
          <Method Sig="instance void set_RowCount(int )" />
          <Method Sig="instance class TableLayoutRowStyleCollection get_RowStyles()" />
          <Method Sig="instance class TableLayoutColumnStyleCollection get_ColumnStyles()" />
          <Method Sig="instance int GetColumnSpan(class Control )" />
          <Method Sig="instance void SetColumnSpan(class Control , int )" />
          <Method Sig="instance int GetRowSpan(class Control )" />
          <Method Sig="instance void SetRowSpan(class Control , int )" />
          <Method Sig="instance int GetRow(class Control )" />
          <Method Sig="instance void SetRow(class Control , int )" />
          <Method Sig="instance struct TableLayoutPanelCellPosition GetCellPosition(class Control )" />
          <Method Sig="instance void SetCellPosition(class Control , struct TableLayoutPanelCellPosition )" />
          <Method Sig="instance int GetColumn(class Control )" />
          <Method Sig="instance void SetColumn(class Control , int )" />
          <Method Sig="instance class Control GetControlFromPosition(int , int )" />
          <Method Sig="instance struct TableLayoutPanelCellPosition GetPositionFromControl(class Control )" />
          <Method Sig="instance [] int GetColumnWidths()" />
          <Method Sig="instance [] int GetRowHeights()" />
          <Method Sig="instance void add_CellPaint(class TableLayoutCellPaintEventHandler )" />
          <Method Sig="instance void remove_CellPaint(class TableLayoutCellPaintEventHandler )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="TableLayoutControlCollection">
          <Method Sig="instance void .ctor(class TableLayoutPanel )" />
          <Method Sig="instance class TableLayoutPanel get_Container()" />
          <Method Sig="instance void Add(class Control , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="TableLayoutPanelCellPosition">
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance int get_Row()" />
          <Method Sig="instance void set_Row(int )" />
          <Method Sig="instance int get_Column()" />
          <Method Sig="instance void set_Column(int )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="bool op_Equality(struct TableLayoutPanelCellPosition , struct TableLayoutPanelCellPosition )" />
          <Method Sig="bool op_Inequality(struct TableLayoutPanelCellPosition , struct TableLayoutPanelCellPosition )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="instance int GetHashCode()" />
        </Type>
        <Type Name="TableLayoutSettings">
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance int get_ColumnCount()" />
          <Method Sig="instance void set_ColumnCount(int )" />
          <Method Sig="instance int get_RowCount()" />
          <Method Sig="instance void set_RowCount(int )" />
          <Method Sig="instance class TableLayoutRowStyleCollection get_RowStyles()" />
          <Method Sig="instance class TableLayoutColumnStyleCollection get_ColumnStyles()" />
          <Method Sig="instance struct TableLayoutPanelGrowStyle get_GrowStyle()" />
          <Method Sig="instance void set_GrowStyle(struct TableLayoutPanelGrowStyle )" />
          <Method Sig="instance int GetColumnSpan(object )" />
          <Method Sig="instance void SetColumnSpan(object , int )" />
          <Method Sig="instance int GetRowSpan(object )" />
          <Method Sig="instance void SetRowSpan(object , int )" />
          <Method Sig="instance int GetRow(object )" />
          <Method Sig="instance void SetRow(object , int )" />
          <Method Sig="instance struct TableLayoutPanelCellPosition GetCellPosition(object )" />
          <Method Sig="instance void SetCellPosition(object , struct TableLayoutPanelCellPosition )" />
          <Method Sig="instance int GetColumn(object )" />
          <Method Sig="instance void SetColumn(object , int )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="TableLayoutStyle">
          <Method Sig="instance struct SizeType get_SizeType()" />
          <Method Sig="instance void set_SizeType(struct SizeType )" />
        </Type>
        <Type Name="ColumnStyle">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(struct SizeType )" />
          <Method Sig="instance void .ctor(struct SizeType , float )" />
          <Method Sig="instance float get_Width()" />
          <Method Sig="instance void set_Width(float )" />
        </Type>
        <Type Name="RowStyle">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(struct SizeType )" />
          <Method Sig="instance void .ctor(struct SizeType , float )" />
          <Method Sig="instance float get_Height()" />
          <Method Sig="instance void set_Height(float )" />
        </Type>
        <Type Name="TableLayoutStyleCollection">
          <Method Sig="instance int Add(class TableLayoutStyle )" />
          <Method Sig="instance class TableLayoutStyle get_Item(int )" />
          <Method Sig="instance void set_Item(int , class TableLayoutStyle )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance int get_Count()" />
        </Type>
        <Type Name="TableLayoutCellPaintEventArgs">
          <Method Sig="instance void .ctor(class Graphics , struct Rectangle , struct Rectangle , int , int )" />
          <Method Sig="instance struct Rectangle get_CellBounds()" />
          <Method Sig="instance int get_Row()" />
          <Method Sig="instance int get_Column()" />
        </Type>
        <Type Name="TableLayoutCellPaintEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class TableLayoutCellPaintEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class TableLayoutCellPaintEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="TableLayoutColumnStyleCollection">
          <Method Sig="instance int Add(class ColumnStyle )" />
          <Method Sig="instance void Insert(int , class ColumnStyle )" />
          <Method Sig="instance class ColumnStyle get_Item(int )" />
          <Method Sig="instance void set_Item(int , class ColumnStyle )" />
          <Method Sig="instance void Remove(class ColumnStyle )" />
          <Method Sig="instance bool Contains(class ColumnStyle )" />
          <Method Sig="instance int IndexOf(class ColumnStyle )" />
        </Type>
        <Type Name="TableLayoutRowStyleCollection">
          <Method Sig="instance int Add(class RowStyle )" />
          <Method Sig="instance void Insert(int , class RowStyle )" />
          <Method Sig="instance class RowStyle get_Item(int )" />
          <Method Sig="instance void set_Item(int , class RowStyle )" />
          <Method Sig="instance void Remove(class RowStyle )" />
          <Method Sig="instance bool Contains(class RowStyle )" />
          <Method Sig="instance int IndexOf(class RowStyle )" />
        </Type>
        <Type Name="TabPage">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoSizeMode get_AutoSizeMode()" />
          <Method Sig="instance void set_AutoSizeMode(struct AutoSizeMode )" />
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AnchorStyles get_Anchor()" />
          <Method Sig="instance void set_Anchor(struct AnchorStyles )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )" />
          <Method Sig="instance void add_DockChanged(class EventHandler )" />
          <Method Sig="instance void remove_DockChanged(class EventHandler )" />
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )" />
          <Method Sig="instance void add_EnabledChanged(class EventHandler )" />
          <Method Sig="instance void remove_EnabledChanged(class EventHandler )" />
          <Method Sig="instance bool get_UseVisualStyleBackColor()" />
          <Method Sig="instance void set_UseVisualStyleBackColor(bool )" />
          <Method Sig="instance struct Point get_Location()" />
          <Method Sig="instance void set_Location(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_LocationChanged(class EventHandler )" />
          <Method Sig="instance void remove_LocationChanged(class EventHandler )" />
          <Method Sig="instance struct Size get_MaximumSize()" />
          <Method Sig="instance void set_MaximumSize(struct Size )" />
          <Method Sig="instance struct Size get_MinimumSize()" />
          <Method Sig="instance void set_MinimumSize(struct Size )" />
          <Method Sig="instance struct Size get_PreferredSize()" />
          <Method Sig="instance int get_TabIndex()" />
          <Method Sig="instance void set_TabIndex(int )" />
          <Method Sig="instance void add_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance void set_ToolTipText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_VisibleChanged(class EventHandler )" />
          <Method Sig="instance void remove_VisibleChanged(class EventHandler )" />
          <Method Sig="class TabPage GetTabPageOfComponent(object )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="TabRenderer">
          <Method Sig="bool get_IsSupported()" />
          <Method Sig="void DrawTabItem(class Graphics , struct Rectangle , struct TabItemState )" />
          <Method Sig="void DrawTabItem(class Graphics , struct Rectangle , bool , struct TabItemState )" />
          <Method Sig="void DrawTabItem(class Graphics , struct Rectangle , string , class Font , struct TabItemState )" />
          <Method Sig="void DrawTabItem(class Graphics , struct Rectangle , string , class Font , bool , struct TabItemState )" />
          <Method Sig="void DrawTabItem(class Graphics , struct Rectangle , string , class Font , struct TextFormatFlags , bool , struct TabItemState )" />
          <Method Sig="void DrawTabItem(class Graphics , struct Rectangle , class Image , struct Rectangle , bool , struct TabItemState )" />
          <Method Sig="void DrawTabItem(class Graphics , struct Rectangle , string , class Font , class Image , struct Rectangle , bool , struct TabItemState )" />
          <Method Sig="void DrawTabItem(class Graphics , struct Rectangle , string , class Font , struct TextFormatFlags , class Image , struct Rectangle , bool , struct TabItemState )" />
          <Method Sig="void DrawTabPage(class Graphics , struct Rectangle )" />
        </Type>
        <Type Name="TextBoxRenderer">
          <Method Sig="bool get_IsSupported()" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , struct TextBoxState )" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , string , class Font , struct TextBoxState )" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , string , class Font , struct Rectangle , struct TextBoxState )" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , string , class Font , struct TextFormatFlags , struct TextBoxState )" />
          <Method Sig="void DrawTextBox(class Graphics , struct Rectangle , string , class Font , struct Rectangle , struct TextFormatFlags , struct TextBoxState )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ThreadExceptionDialog">
          <Method Sig="instance void .ctor(class Exception )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_AutoSize()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_AutoSize(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
              </PermissionSet>
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="Timer">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class IContainer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance void add_Tick(class EventHandler )" />
          <Method Sig="instance void remove_Tick(class EventHandler )" />
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Interval()" />
          <Method Sig="instance void set_Interval(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Start()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Stop()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="ToolBar">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolBarAppearance get_Appearance()" />
          <Method Sig="instance void set_Appearance(struct ToolBarAppearance )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolBarButtonCollection get_Buttons()" />
          <Method Sig="instance struct Size get_ButtonSize()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_ButtonSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Divider()" />
          <Method Sig="instance void set_Divider(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_DropDownArrows()" />
          <Method Sig="instance void set_DropDownArrows(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance class ImageList get_ImageList()" />
          <Method Sig="instance void set_ImageList(class ImageList )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_ImageSize()" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance bool get_ShowToolTips()" />
          <Method Sig="instance void set_ShowToolTips(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance struct ToolBarTextAlign get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct ToolBarTextAlign )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Wrappable()" />
          <Method Sig="instance void set_Wrappable(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ButtonClick(class ToolBarButtonClickEventHandler )" />
          <Method Sig="instance void remove_ButtonClick(class ToolBarButtonClickEventHandler )" />
          <Method Sig="instance void add_ButtonDropDown(class ToolBarButtonClickEventHandler )" />
          <Method Sig="instance void remove_ButtonDropDown(class ToolBarButtonClickEventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="ToolBarButton">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Menu get_DropDownMenu()" />
          <Method Sig="instance void set_DropDownMenu(class Menu )" />
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance class ToolBar get_Parent()" />
          <Method Sig="instance bool get_PartialPush()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_PartialPush(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Pushed()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Pushed(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_Rectangle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolBarButtonStyle get_Style()" />
          <Method Sig="instance void set_Style(struct ToolBarButtonStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance void set_ToolTipText(string )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="ToolBarButtonClickEventArgs">
          <Method Sig="instance void .ctor(class ToolBarButton )" />
          <Method Sig="instance class ToolBarButton get_Button()" />
          <Method Sig="instance void set_Button(class ToolBarButton )" />
        </Type>
        <Type Name="ToolBarButtonClickEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolBarButtonClickEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolBarButtonClickEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripArrowRenderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ToolStripItem , struct Rectangle , struct Color , struct ArrowDirection )" />
          <Method Sig="instance struct Rectangle get_ArrowRectangle()" />
          <Method Sig="instance void set_ArrowRectangle(struct Rectangle )" />
          <Method Sig="instance struct Color get_ArrowColor()" />
          <Method Sig="instance void set_ArrowColor(struct Color )" />
          <Method Sig="instance struct ArrowDirection get_Direction()" />
          <Method Sig="instance void set_Direction(struct ArrowDirection )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class ToolStripItem get_Item()" />
        </Type>
        <Type Name="ToolStripArrowRenderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripArrowRenderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripArrowRenderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripButton">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoToolTip()" />
          <Method Sig="instance void set_AutoToolTip(bool )" />
          <Method Sig="instance bool get_CanSelect()" />
          <Method Sig="instance bool get_CheckOnClick()" />
          <Method Sig="instance void set_CheckOnClick(bool )" />
          <Method Sig="instance bool get_Checked()" />
          <Method Sig="instance void set_Checked(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct CheckState get_CheckState()" />
          <Method Sig="instance void set_CheckState(struct CheckState )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CheckedChanged(class EventHandler )" />
          <Method Sig="instance void remove_CheckedChanged(class EventHandler )" />
          <Method Sig="instance void add_CheckStateChanged(class EventHandler )" />
          <Method Sig="instance void remove_CheckStateChanged(class EventHandler )" />
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripControlHost">
          <Method Sig="instance void .ctor(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Control , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance bool get_CanSelect()" />
          <Method Sig="instance bool get_CausesValidation()" />
          <Method Sig="instance void set_CausesValidation(bool )" />
          <Method Sig="instance struct ContentAlignment get_ControlAlign()" />
          <Method Sig="instance void set_ControlAlign(struct ContentAlignment )" />
          <Method Sig="instance class Control get_Control()" />
          <Method Sig="instance struct ToolStripItemDisplayStyle get_DisplayStyle()" />
          <Method Sig="instance void set_DisplayStyle(struct ToolStripItemDisplayStyle )" />
          <Method Sig="instance void add_DisplayStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_DisplayStyleChanged(class EventHandler )" />
          <Method Sig="instance bool get_DoubleClickEnabled()" />
          <Method Sig="instance void set_DoubleClickEnabled(bool )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )" />
          <Method Sig="instance void add_Enter(class EventHandler )" />
          <Method Sig="instance void remove_Enter(class EventHandler )" />
          <Method Sig="instance bool get_Focused()" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_GotFocus(class EventHandler )" />
          <Method Sig="instance void remove_GotFocus(class EventHandler )" />
          <Method Sig="instance class Image get_Image()" />
          <Method Sig="instance void set_Image(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolStripItemImageScaling get_ImageScaling()" />
          <Method Sig="instance void set_ImageScaling(struct ToolStripItemImageScaling )" />
          <Method Sig="instance struct Color get_ImageTransparentColor()" />
          <Method Sig="instance void set_ImageTransparentColor(struct Color )" />
          <Method Sig="instance struct ContentAlignment get_ImageAlign()" />
          <Method Sig="instance void set_ImageAlign(struct ContentAlignment )" />
          <Method Sig="instance void add_Leave(class EventHandler )" />
          <Method Sig="instance void remove_Leave(class EventHandler )" />
          <Method Sig="instance void add_LostFocus(class EventHandler )" />
          <Method Sig="instance void remove_LostFocus(class EventHandler )" />
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_RightToLeftAutoMirrorImage()" />
          <Method Sig="instance void set_RightToLeftAutoMirrorImage(bool )" />
          <Method Sig="instance bool get_Selected()" />
          <Method Sig="instance struct Size get_Size()" />
          <Method Sig="instance void set_Size(struct Size )" />
          <Method Sig="instance class ISite get_Site()" />
          <Method Sig="instance void set_Site(class ISite )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance struct ContentAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct ContentAlignment )" />
          <Method Sig="instance struct ToolStripTextDirection get_TextDirection()" />
          <Method Sig="instance void set_TextDirection(struct ToolStripTextDirection )" />
          <Method Sig="instance struct TextImageRelation get_TextImageRelation()" />
          <Method Sig="instance void set_TextImageRelation(struct TextImageRelation )" />
          <Method Sig="instance void add_Validating(class CancelEventHandler )" />
          <Method Sig="instance void remove_Validating(class CancelEventHandler )" />
          <Method Sig="instance void add_Validated(class EventHandler )" />
          <Method Sig="instance void remove_Validated(class EventHandler )" />
          <Method Sig="instance void Focus()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
          <Method Sig="instance void ResetBackColor()" />
          <Method Sig="instance void ResetForeColor()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripComboBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class AutoCompleteStringCollection get_AutoCompleteCustomSource()" />
          <Method Sig="instance void set_AutoCompleteCustomSource(class AutoCompleteStringCollection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoCompleteMode get_AutoCompleteMode()" />
          <Method Sig="instance void set_AutoCompleteMode(struct AutoCompleteMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoCompleteSource get_AutoCompleteSource()" />
          <Method Sig="instance void set_AutoCompleteSource(struct AutoCompleteSource )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance class ComboBox get_ComboBox()" />
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_DropDown(class EventHandler )" />
          <Method Sig="instance void remove_DropDown(class EventHandler )" />
          <Method Sig="instance void add_DropDownClosed(class EventHandler )" />
          <Method Sig="instance void remove_DropDownClosed(class EventHandler )" />
          <Method Sig="instance void add_DropDownStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_DropDownStyleChanged(class EventHandler )" />
          <Method Sig="instance int get_DropDownHeight()" />
          <Method Sig="instance void set_DropDownHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ComboBoxStyle get_DropDownStyle()" />
          <Method Sig="instance void set_DropDownStyle(struct ComboBoxStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_DropDownWidth()" />
          <Method Sig="instance void set_DropDownWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_DroppedDown()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_DroppedDown(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct FlatStyle get_FlatStyle()" />
          <Method Sig="instance void set_FlatStyle(struct FlatStyle )" />
          <Method Sig="instance bool get_IntegralHeight()" />
          <Method Sig="instance void set_IntegralHeight(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ObjectCollection get_Items()" />
          <Method Sig="instance int get_MaxDropDownItems()" />
          <Method Sig="instance void set_MaxDropDownItems(int )" />
          <Method Sig="instance int get_MaxLength()" />
          <Method Sig="instance void set_MaxLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectedIndex()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_SelectedIndexChanged(class EventHandler )" />
          <Method Sig="instance object get_SelectedItem()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedItem(object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_SelectedText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionLength()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionStart()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionStart(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Sorted()" />
          <Method Sig="instance void set_Sorted(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TextUpdate(class EventHandler )" />
          <Method Sig="instance void remove_TextUpdate(class EventHandler )" />
          <Method Sig="instance void BeginUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EndUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindString(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindString(string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindStringExact(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int FindStringExact(string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetItemHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Select(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SelectAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripDropDownClosedEventArgs">
          <Method Sig="instance void .ctor(struct ToolStripDropDownCloseReason )" />
          <Method Sig="instance struct ToolStripDropDownCloseReason get_CloseReason()" />
        </Type>
        <Type Name="ToolStripDropDownClosedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripDropDownClosedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripDropDownClosedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripDropDownClosingEventArgs">
          <Method Sig="instance void .ctor(struct ToolStripDropDownCloseReason )" />
          <Method Sig="instance struct ToolStripDropDownCloseReason get_CloseReason()" />
        </Type>
        <Type Name="ToolStripDropDownClosingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripDropDownClosingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripDropDownClosingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripDropDownButton">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , [] class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoToolTip()" />
          <Method Sig="instance void set_AutoToolTip(bool )" />
          <Method Sig="instance bool get_ShowDropDownArrow()" />
          <Method Sig="instance void set_ShowDropDownArrow(bool )" />
        </Type>
        <Type Name="ToolStripRenderer">
          <Method Sig="instance void add_RenderArrow(class ToolStripArrowRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderArrow(class ToolStripArrowRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderToolStripBackground(class ToolStripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderToolStripBackground(class ToolStripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderToolStripPanelBackground(class ToolStripPanelRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderToolStripPanelBackground(class ToolStripPanelRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderToolStripContentPanelBackground(class ToolStripContentPanelRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderToolStripContentPanelBackground(class ToolStripContentPanelRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderToolStripBorder(class ToolStripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderToolStripBorder(class ToolStripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderButtonBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderButtonBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderDropDownButtonBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderDropDownButtonBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderOverflowButtonBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderOverflowButtonBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderGrip(class ToolStripGripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderGrip(class ToolStripGripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderItemBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderItemBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderItemImage(class ToolStripItemImageRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderItemImage(class ToolStripItemImageRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderItemCheck(class ToolStripItemImageRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderItemCheck(class ToolStripItemImageRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderItemText(class ToolStripItemTextRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderItemText(class ToolStripItemTextRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderImageMargin(class ToolStripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderImageMargin(class ToolStripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderLabelBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderLabelBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderMenuItemBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderMenuItemBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderToolStripStatusLabelBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderToolStripStatusLabelBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderStatusStripSizingGrip(class ToolStripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderStatusStripSizingGrip(class ToolStripRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderSplitButtonBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderSplitButtonBackground(class ToolStripItemRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RenderSeparator(class ToolStripSeparatorRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void remove_RenderSeparator(class ToolStripSeparatorRenderEventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class Image CreateDisabledImage(class Image )" />
          <Method Sig="instance void DrawArrow(class ToolStripArrowRenderEventArgs )" />
          <Method Sig="instance void DrawToolStripBackground(class ToolStripRenderEventArgs )" />
          <Method Sig="instance void DrawGrip(class ToolStripGripRenderEventArgs )" />
          <Method Sig="instance void DrawItemBackground(class ToolStripItemRenderEventArgs )" />
          <Method Sig="instance void DrawImageMargin(class ToolStripRenderEventArgs )" />
          <Method Sig="instance void DrawLabelBackground(class ToolStripItemRenderEventArgs )" />
          <Method Sig="instance void DrawButtonBackground(class ToolStripItemRenderEventArgs )" />
          <Method Sig="instance void DrawToolStripBorder(class ToolStripRenderEventArgs )" />
          <Method Sig="instance void DrawDropDownButtonBackground(class ToolStripItemRenderEventArgs )" />
          <Method Sig="instance void DrawOverflowButtonBackground(class ToolStripItemRenderEventArgs )" />
          <Method Sig="instance void DrawItemImage(class ToolStripItemImageRenderEventArgs )" />
          <Method Sig="instance void DrawItemCheck(class ToolStripItemImageRenderEventArgs )" />
          <Method Sig="instance void DrawItemText(class ToolStripItemTextRenderEventArgs )" />
          <Method Sig="instance void DrawMenuItemBackground(class ToolStripItemRenderEventArgs )" />
          <Method Sig="instance void DrawSplitButton(class ToolStripItemRenderEventArgs )" />
          <Method Sig="instance void DrawToolStripStatusLabelBackground(class ToolStripItemRenderEventArgs )" />
          <Method Sig="instance void DrawStatusStripSizingGrip(class ToolStripRenderEventArgs )" />
          <Method Sig="instance void DrawSeparator(class ToolStripSeparatorRenderEventArgs )" />
          <Method Sig="instance void DrawToolStripPanelBackground(class ToolStripPanelRenderEventArgs )" />
          <Method Sig="instance void DrawToolStripContentPanelBackground(class ToolStripContentPanelRenderEventArgs )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripSystemRenderer">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="ToolStripRenderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ToolStrip )" />
          <Method Sig="instance void .ctor(class Graphics , class ToolStrip , struct Rectangle , struct Color )" />
          <Method Sig="instance struct Rectangle get_AffectedBounds()" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class ToolStrip get_ToolStrip()" />
          <Method Sig="instance struct Rectangle get_ConnectedArea()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="ToolStripGripRenderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ToolStrip )" />
          <Method Sig="instance struct Rectangle get_GripBounds()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolStripGripDisplayStyle get_GripDisplayStyle()" />
          <Method Sig="instance struct ToolStripGripStyle get_GripStyle()" />
        </Type>
        <Type Name="ToolStripGripRenderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripGripRenderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripGripRenderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripItemClickedEventArgs">
          <Method Sig="instance void .ctor(class ToolStripItem )" />
          <Method Sig="instance class ToolStripItem get_ClickedItem()" />
        </Type>
        <Type Name="ToolStripItemClickedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripItemClickedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripItemClickedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripItemCollection">
          <Method Sig="instance void .ctor(class ToolStrip , [] class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem get_Item(int )" />
          <Method Sig="instance class ToolStripItem get_Item(string )" />
          <Method Sig="instance class ToolStripItem Add(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem Add(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem Add(string , class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItem Add(string , class Image , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Add(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddRange([] class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddRange(class ToolStripItemCollection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Contains(class ToolStripItem )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool ContainsKey(string )" />
          <Method Sig="instance [] class ToolStripItem Find(string , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance void Insert(int , class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int IndexOf(class ToolStripItem )" />
          <Method Sig="instance int IndexOfKey(string )" />
          <Method Sig="instance void Remove(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance void RemoveByKey(string )" />
          <Method Sig="instance void CopyTo([] class ToolStripItem , int )" />
        </Type>
        <Type Name="ToolStripItemEventArgs">
          <Method Sig="instance void .ctor(class ToolStripItem )" />
          <Method Sig="instance class ToolStripItem get_Item()" />
        </Type>
        <Type Name="ToolStripItemEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripItemEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripItemEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripItemRenderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ToolStripItem )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class ToolStripItem get_Item()" />
          <Method Sig="instance class ToolStrip get_ToolStrip()" />
        </Type>
        <Type Name="ToolStripItemImageRenderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ToolStripItem , struct Rectangle )" />
          <Method Sig="instance void .ctor(class Graphics , class ToolStripItem , class Image , struct Rectangle )" />
          <Method Sig="instance class Image get_Image()" />
          <Method Sig="instance struct Rectangle get_ImageRectangle()" />
        </Type>
        <Type Name="ToolStripItemImageRenderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripItemImageRenderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripItemImageRenderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripItemRenderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripItemRenderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripItemRenderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripItemTextRenderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ToolStripItem , string , struct Rectangle , struct Color , class Font , struct TextFormatFlags )" />
          <Method Sig="instance void .ctor(class Graphics , class ToolStripItem , string , struct Rectangle , struct Color , class Font , struct ContentAlignment )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance struct Color get_TextColor()" />
          <Method Sig="instance void set_TextColor(struct Color )" />
          <Method Sig="instance class Font get_TextFont()" />
          <Method Sig="instance void set_TextFont(class Font )" />
          <Method Sig="instance struct Rectangle get_TextRectangle()" />
          <Method Sig="instance void set_TextRectangle(struct Rectangle )" />
          <Method Sig="instance struct TextFormatFlags get_TextFormat()" />
          <Method Sig="instance void set_TextFormat(struct TextFormatFlags )" />
          <Method Sig="instance struct ToolStripTextDirection get_TextDirection()" />
          <Method Sig="instance void set_TextDirection(struct ToolStripTextDirection )" />
        </Type>
        <Type Name="ToolStripItemTextRenderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripItemTextRenderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripItemTextRenderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripLabel">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , bool , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , bool , class EventHandler , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CanSelect()" />
          <Method Sig="instance bool get_IsLink()" />
          <Method Sig="instance void set_IsLink(bool )" />
          <Method Sig="instance struct Color get_ActiveLinkColor()" />
          <Method Sig="instance void set_ActiveLinkColor(struct Color )" />
          <Method Sig="instance struct LinkBehavior get_LinkBehavior()" />
          <Method Sig="instance void set_LinkBehavior(struct LinkBehavior )" />
          <Method Sig="instance struct Color get_LinkColor()" />
          <Method Sig="instance void set_LinkColor(struct Color )" />
          <Method Sig="instance bool get_LinkVisited()" />
          <Method Sig="instance void set_LinkVisited(bool )" />
          <Method Sig="instance struct Color get_VisitedLinkColor()" />
          <Method Sig="instance void set_VisitedLinkColor(struct Color )" />
        </Type>
        <Type Name="ToolStripManager">
          <Method Sig="void .cctor()" />
          <Method Sig="class ToolStrip FindToolStrip(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class ToolStripRenderer get_Renderer()" />
          <Method Sig="void set_Renderer(class ToolStripRenderer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void add_RendererChanged(class EventHandler )" />
          <Method Sig="void remove_RendererChanged(class EventHandler )" />
          <Method Sig="struct ToolStripManagerRenderMode get_RenderMode()" />
          <Method Sig="void set_RenderMode(struct ToolStripManagerRenderMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool get_VisualStylesEnabled()" />
          <Method Sig="void set_VisualStylesEnabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void LoadSettings(class Form )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void LoadSettings(class Form , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void SaveSettings(class Form )" />
          <Method Sig="void SaveSettings(class Form , string )" />
          <Method Sig="bool IsValidShortcut(struct Keys )" />
          <Method Sig="bool IsShortcutDefined(struct Keys )" />
          <Method Sig="bool Merge(class ToolStrip , class ToolStrip )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool Merge(class ToolStrip , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool RevertMerge(class ToolStrip )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool RevertMerge(class ToolStrip , class ToolStrip )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool RevertMerge(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="ToolStripOverflow">
          <Method Sig="instance void .ctor(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripItemCollection get_Items()" />
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
        </Type>
        <Type Name="ToolStripOverflowButton">
          <Method Sig="instance bool get_HasDropDownItems()" />
          <Method Sig="instance bool get_RightToLeftAutoMirrorImage()" />
          <Method Sig="instance void set_RightToLeftAutoMirrorImage(bool )" />
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
        </Type>
        <Type Name="ToolStripContainer">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoScroll()" />
          <Method Sig="instance void set_AutoScroll(bool )" />
          <Method Sig="instance struct Size get_AutoScrollMargin()" />
          <Method Sig="instance void set_AutoScrollMargin(struct Size )" />
          <Method Sig="instance struct Size get_AutoScrollMinSize()" />
          <Method Sig="instance void set_AutoScrollMinSize(struct Size )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance class ToolStripPanel get_BottomToolStripPanel()" />
          <Method Sig="instance bool get_BottomToolStripPanelVisible()" />
          <Method Sig="instance void set_BottomToolStripPanelVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripContentPanel get_ContentPanel()" />
          <Method Sig="instance bool get_CausesValidation()" />
          <Method Sig="instance void set_CausesValidation(bool )" />
          <Method Sig="instance void add_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance void remove_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance void add_ContextMenuStripChanged(class EventHandler )" />
          <Method Sig="instance void remove_ContextMenuStripChanged(class EventHandler )" />
          <Method Sig="instance class Cursor get_Cursor()" />
          <Method Sig="instance void set_Cursor(class Cursor )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CursorChanged(class EventHandler )" />
          <Method Sig="instance void remove_CursorChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance class ToolStripPanel get_LeftToolStripPanel()" />
          <Method Sig="instance bool get_LeftToolStripPanelVisible()" />
          <Method Sig="instance void set_LeftToolStripPanelVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripPanel get_RightToolStripPanel()" />
          <Method Sig="instance bool get_RightToolStripPanelVisible()" />
          <Method Sig="instance void set_RightToolStripPanelVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripPanel get_TopToolStripPanel()" />
          <Method Sig="instance bool get_TopToolStripPanelVisible()" />
          <Method Sig="instance void set_TopToolStripPanelVisible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ControlCollection get_Controls()" />
        </Type>
        <Type Name="ToolStripContentPanel">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoSizeMode get_AutoSizeMode()" />
          <Method Sig="instance void set_AutoSizeMode(struct AutoSizeMode )" />
          <Method Sig="instance struct AnchorStyles get_Anchor()" />
          <Method Sig="instance void set_Anchor(struct AnchorStyles )" />
          <Method Sig="instance bool get_AutoScroll()" />
          <Method Sig="instance void set_AutoScroll(bool )" />
          <Method Sig="instance struct Size get_AutoScrollMargin()" />
          <Method Sig="instance void set_AutoScrollMargin(struct Size )" />
          <Method Sig="instance struct Size get_AutoScrollMinSize()" />
          <Method Sig="instance void set_AutoScrollMinSize(struct Size )" />
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance bool get_CausesValidation()" />
          <Method Sig="instance void set_CausesValidation(bool )" />
          <Method Sig="instance void add_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance void remove_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )" />
          <Method Sig="instance void add_DockChanged(class EventHandler )" />
          <Method Sig="instance void remove_DockChanged(class EventHandler )" />
          <Method Sig="instance void add_Load(class EventHandler )" />
          <Method Sig="instance void remove_Load(class EventHandler )" />
          <Method Sig="instance struct Point get_Location()" />
          <Method Sig="instance void set_Location(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_LocationChanged(class EventHandler )" />
          <Method Sig="instance void remove_LocationChanged(class EventHandler )" />
          <Method Sig="instance struct Size get_MinimumSize()" />
          <Method Sig="instance void set_MinimumSize(struct Size )" />
          <Method Sig="instance struct Size get_MaximumSize()" />
          <Method Sig="instance void set_MaximumSize(struct Size )" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance int get_TabIndex()" />
          <Method Sig="instance void set_TabIndex(int )" />
          <Method Sig="instance void add_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance class ToolStripRenderer get_Renderer()" />
          <Method Sig="instance void set_Renderer(class ToolStripRenderer )" />
          <Method Sig="instance struct ToolStripRenderMode get_RenderMode()" />
          <Method Sig="instance void set_RenderMode(struct ToolStripRenderMode )" />
          <Method Sig="instance void add_RendererChanged(class EventHandler )" />
          <Method Sig="instance void remove_RendererChanged(class EventHandler )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripPanel">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoScroll()" />
          <Method Sig="instance void set_AutoScroll(bool )" />
          <Method Sig="instance struct Size get_AutoScrollMargin()" />
          <Method Sig="instance void set_AutoScrollMargin(struct Size )" />
          <Method Sig="instance struct Size get_AutoScrollMinSize()" />
          <Method Sig="instance void set_AutoScrollMinSize(struct Size )" />
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct Padding get_RowMargin()" />
          <Method Sig="instance void set_RowMargin(struct Padding )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )" />
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance bool get_Locked()" />
          <Method Sig="instance void set_Locked(bool )" />
          <Method Sig="instance struct Orientation get_Orientation()" />
          <Method Sig="instance void set_Orientation(struct Orientation )" />
          <Method Sig="instance class ToolStripRenderer get_Renderer()" />
          <Method Sig="instance void set_Renderer(class ToolStripRenderer )" />
          <Method Sig="instance struct ToolStripRenderMode get_RenderMode()" />
          <Method Sig="instance void set_RenderMode(struct ToolStripRenderMode )" />
          <Method Sig="instance void add_RendererChanged(class EventHandler )" />
          <Method Sig="instance void remove_RendererChanged(class EventHandler )" />
          <Method Sig="instance [] class ToolStripPanelRow get_Rows()" />
          <Method Sig="instance int get_TabIndex()" />
          <Method Sig="instance void set_TabIndex(int )" />
          <Method Sig="instance void add_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabIndexChanged(class EventHandler )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance void BeginInit()" />
          <Method Sig="instance void EndInit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Join(class ToolStrip )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Join(class ToolStrip , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Join(class ToolStrip , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Join(class ToolStrip , struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ToolStripPanelRow PointToRow(struct Point )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripPanelRenderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ToolStripPanel )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class ToolStripPanel get_ToolStripPanel()" />
        </Type>
        <Type Name="ToolStripPanelRenderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripPanelRenderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripPanelRenderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripContentPanelRenderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ToolStripContentPanel )" />
          <Method Sig="instance class Graphics get_Graphics()" />
          <Method Sig="instance class ToolStripContentPanel get_ToolStripContentPanel()" />
        </Type>
        <Type Name="ToolStripContentPanelRenderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripContentPanelRenderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripContentPanelRenderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripPanelRow">
          <Method Sig="instance void .ctor(class ToolStripPanel )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_Bounds()" />
          <Method Sig="instance [] class Control get_Controls()" />
          <Method Sig="instance struct Rectangle get_DisplayRectangle()" />
          <Method Sig="instance class LayoutEngine get_LayoutEngine()" />
          <Method Sig="instance struct Padding get_Margin()" />
          <Method Sig="instance void set_Margin(struct Padding )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance class ToolStripPanel get_ToolStripPanel()" />
          <Method Sig="instance struct Orientation get_Orientation()" />
          <Method Sig="instance bool CanMove(class ToolStrip )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripProfessionalRenderer">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class ProfessionalColorTable )" />
          <Method Sig="instance class ProfessionalColorTable get_ColorTable()" />
          <Method Sig="instance bool get_RoundedEdges()" />
          <Method Sig="instance void set_RoundedEdges(bool )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripProgressBar">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ProgressBar get_ProgressBar()" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance int get_MarqueeAnimationSpeed()" />
          <Method Sig="instance void set_MarqueeAnimationSpeed(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Maximum()" />
          <Method Sig="instance void set_Maximum(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Minimum()" />
          <Method Sig="instance void set_Minimum(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Step()" />
          <Method Sig="instance void set_Step(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ProgressBarStyle get_Style()" />
          <Method Sig="instance void set_Style(struct ProgressBarStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance int get_Value()" />
          <Method Sig="instance void set_Value(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )" />
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )" />
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )" />
          <Method Sig="instance void add_LocationChanged(class EventHandler )" />
          <Method Sig="instance void remove_LocationChanged(class EventHandler )" />
          <Method Sig="instance void add_OwnerChanged(class EventHandler )" />
          <Method Sig="instance void remove_OwnerChanged(class EventHandler )" />
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance void add_Validated(class EventHandler )" />
          <Method Sig="instance void remove_Validated(class EventHandler )" />
          <Method Sig="instance void add_Validating(class CancelEventHandler )" />
          <Method Sig="instance void remove_Validating(class CancelEventHandler )" />
          <Method Sig="instance void Increment(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PerformStep()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripRenderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripRenderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripRenderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripSeparator">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoToolTip()" />
          <Method Sig="instance void set_AutoToolTip(bool )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance bool get_CanSelect()" />
          <Method Sig="instance bool get_DoubleClickEnabled()" />
          <Method Sig="instance void set_DoubleClickEnabled(bool )" />
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_EnabledChanged(class EventHandler )" />
          <Method Sig="instance void remove_EnabledChanged(class EventHandler )" />
          <Method Sig="instance struct ToolStripItemDisplayStyle get_DisplayStyle()" />
          <Method Sig="instance void set_DisplayStyle(struct ToolStripItemDisplayStyle )" />
          <Method Sig="instance void add_DisplayStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_DisplayStyleChanged(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance struct ContentAlignment get_ImageAlign()" />
          <Method Sig="instance void set_ImageAlign(struct ContentAlignment )" />
          <Method Sig="instance class Image get_Image()" />
          <Method Sig="instance void set_Image(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )" />
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )" />
          <Method Sig="instance struct Color get_ImageTransparentColor()" />
          <Method Sig="instance void set_ImageTransparentColor(struct Color )" />
          <Method Sig="instance struct ToolStripItemImageScaling get_ImageScaling()" />
          <Method Sig="instance void set_ImageScaling(struct ToolStripItemImageScaling )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance struct ContentAlignment get_TextAlign()" />
          <Method Sig="instance void set_TextAlign(struct ContentAlignment )" />
          <Method Sig="instance struct ToolStripTextDirection get_TextDirection()" />
          <Method Sig="instance void set_TextDirection(struct ToolStripTextDirection )" />
          <Method Sig="instance struct TextImageRelation get_TextImageRelation()" />
          <Method Sig="instance void set_TextImageRelation(struct TextImageRelation )" />
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance void set_ToolTipText(string )" />
          <Method Sig="instance bool get_RightToLeftAutoMirrorImage()" />
          <Method Sig="instance void set_RightToLeftAutoMirrorImage(bool )" />
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
        </Type>
        <Type Name="ToolStripSeparatorRenderEventArgs">
          <Method Sig="instance void .ctor(class Graphics , class ToolStripSeparator , bool )" />
          <Method Sig="instance bool get_Vertical()" />
        </Type>
        <Type Name="ToolStripSeparatorRenderEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class ToolStripSeparatorRenderEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class ToolStripSeparatorRenderEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="ToolStripSplitButton">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , [] class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoToolTip()" />
          <Method Sig="instance void set_AutoToolTip(bool )" />
          <Method Sig="instance struct Rectangle get_ButtonBounds()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ButtonPressed()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ButtonSelected()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ButtonClick(class EventHandler )" />
          <Method Sig="instance void remove_ButtonClick(class EventHandler )" />
          <Method Sig="instance void add_ButtonDoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_ButtonDoubleClick(class EventHandler )" />
          <Method Sig="instance class ToolStripItem get_DefaultItem()" />
          <Method Sig="instance void set_DefaultItem(class ToolStripItem )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_DefaultItemChanged(class EventHandler )" />
          <Method Sig="instance void remove_DefaultItemChanged(class EventHandler )" />
          <Method Sig="instance struct Rectangle get_DropDownButtonBounds()" />
          <Method Sig="instance bool get_DropDownButtonPressed()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_DropDownButtonSelected()" />
          <Method Sig="instance int get_DropDownButtonWidth()" />
          <Method Sig="instance void set_DropDownButtonWidth(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Rectangle get_SplitterBounds()" />
          <Method Sig="instance struct Size GetPreferredSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void OnButtonDoubleClick(class EventArgs )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void PerformButtonClick()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetDropDownButtonWidth()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolStripStatusLabel">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class Image , class EventHandler , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ToolStripItemAlignment get_Alignment()" />
          <Method Sig="instance void set_Alignment(struct ToolStripItemAlignment )" />
          <Method Sig="instance struct Border3DStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct Border3DStyle )" />
          <Method Sig="instance struct ToolStripStatusLabelBorderSides get_BorderSides()" />
          <Method Sig="instance void set_BorderSides(struct ToolStripStatusLabelBorderSides )" />
          <Method Sig="instance bool get_Spring()" />
          <Method Sig="instance void set_Spring(bool )" />
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
        </Type>
        <Type Name="ToolStripTextBox">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(class Control )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance class TextBox get_TextBox()" />
          <Method Sig="instance struct Size GetPreferredSize(struct Size )" />
          <Method Sig="instance bool get_AcceptsTab()" />
          <Method Sig="instance void set_AcceptsTab(bool )" />
          <Method Sig="instance bool get_AcceptsReturn()" />
          <Method Sig="instance void set_AcceptsReturn(bool )" />
          <Method Sig="instance class AutoCompleteStringCollection get_AutoCompleteCustomSource()" />
          <Method Sig="instance void set_AutoCompleteCustomSource(class AutoCompleteStringCollection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoCompleteMode get_AutoCompleteMode()" />
          <Method Sig="instance void set_AutoCompleteMode(struct AutoCompleteMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AutoCompleteSource get_AutoCompleteSource()" />
          <Method Sig="instance void set_AutoCompleteSource(struct AutoCompleteSource )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_CanUndo()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct CharacterCasing get_CharacterCasing()" />
          <Method Sig="instance void set_CharacterCasing(struct CharacterCasing )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_HideSelection()" />
          <Method Sig="instance void set_HideSelection(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] string get_Lines()" />
          <Method Sig="instance void set_Lines([] string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_MaxLength()" />
          <Method Sig="instance void set_MaxLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Modified()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Modified(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Multiline()" />
          <Method Sig="instance void set_Multiline(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ReadOnly()" />
          <Method Sig="instance void set_ReadOnly(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_SelectedText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionLength()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionLength(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectionStart()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectionStart(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShortcutsEnabled()" />
          <Method Sig="instance void set_ShortcutsEnabled(bool )" />
          <Method Sig="instance int get_TextLength()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct HorizontalAlignment get_TextBoxTextAlign()" />
          <Method Sig="instance void set_TextBoxTextAlign(struct HorizontalAlignment )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_WordWrap()" />
          <Method Sig="instance void set_WordWrap(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AcceptsTabChanged(class EventHandler )" />
          <Method Sig="instance void remove_AcceptsTabChanged(class EventHandler )" />
          <Method Sig="instance void add_BorderStyleChanged(class EventHandler )" />
          <Method Sig="instance void remove_BorderStyleChanged(class EventHandler )" />
          <Method Sig="instance void add_HideSelectionChanged(class EventHandler )" />
          <Method Sig="instance void remove_HideSelectionChanged(class EventHandler )" />
          <Method Sig="instance void add_ModifiedChanged(class EventHandler )" />
          <Method Sig="instance void remove_ModifiedChanged(class EventHandler )" />
          <Method Sig="instance void add_MultilineChanged(class EventHandler )" />
          <Method Sig="instance void remove_MultilineChanged(class EventHandler )" />
          <Method Sig="instance void add_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance void remove_ReadOnlyChanged(class EventHandler )" />
          <Method Sig="instance void add_TextBoxTextAlignChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextBoxTextAlignChanged(class EventHandler )" />
          <Method Sig="instance void AppendText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ClearUndo()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Copy()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Cut()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void DeselectAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance char GetCharFromPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetCharIndexFromPosition(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetFirstCharIndexFromLine(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetFirstCharIndexOfCurrentLine()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetLineFromCharIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Point GetPositionFromCharIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Paste()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ScrollToCaret()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Select(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SelectAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Undo()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="ToolTip">
          <Method Sig="instance void .ctor(class IContainer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Active()" />
          <Method Sig="instance void set_Active(bool )" />
          <Method Sig="instance int get_AutomaticDelay()" />
          <Method Sig="instance void set_AutomaticDelay(int )" />
          <Method Sig="instance int get_AutoPopDelay()" />
          <Method Sig="instance void set_AutoPopDelay(int )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance bool get_IsBalloon()" />
          <Method Sig="instance void set_IsBalloon(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_InitialDelay()" />
          <Method Sig="instance void set_InitialDelay(int )" />
          <Method Sig="instance bool get_OwnerDraw()" />
          <Method Sig="instance void set_OwnerDraw(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ReshowDelay()" />
          <Method Sig="instance void set_ReshowDelay(int )" />
          <Method Sig="instance bool get_ShowAlways()" />
          <Method Sig="instance void set_ShowAlways(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_StripAmpersands()" />
          <Method Sig="instance void set_StripAmpersands(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance struct ToolTipIcon get_ToolTipIcon()" />
          <Method Sig="instance void set_ToolTipIcon(struct ToolTipIcon )" />
          <Method Sig="instance string get_ToolTipTitle()" />
          <Method Sig="instance void set_ToolTipTitle(string )" />
          <Method Sig="instance bool get_UseAnimation()" />
          <Method Sig="instance void set_UseAnimation(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseFading()" />
          <Method Sig="instance void set_UseFading(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Draw(class DrawToolTipEventHandler )" />
          <Method Sig="instance void remove_Draw(class DrawToolTipEventHandler )" />
          <Method Sig="instance void add_Popup(class PopupEventHandler )" />
          <Method Sig="instance void remove_Popup(class PopupEventHandler )" />
          <Method Sig="instance bool CanExtend(object )" />
          <Method Sig="instance string GetToolTip(class Control )" />
          <Method Sig="instance void RemoveAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetToolTip(class Control , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(string , class IWin32Window )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(string , class IWin32Window , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(string , class IWin32Window , struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(string , class IWin32Window , struct Point , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(string , class IWin32Window , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Show(string , class IWin32Window , int , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Hide(class IWin32Window )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="TrackBar">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance int get_LargeChange()" />
          <Method Sig="instance void set_LargeChange(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Maximum()" />
          <Method Sig="instance void set_Maximum(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Minimum()" />
          <Method Sig="instance void set_Minimum(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Orientation get_Orientation()" />
          <Method Sig="instance void set_Orientation(struct Orientation )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SmallChange()" />
          <Method Sig="instance void set_SmallChange(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance struct TickStyle get_TickStyle()" />
          <Method Sig="instance void set_TickStyle(struct TickStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_TickFrequency()" />
          <Method Sig="instance void set_TickFrequency(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Value()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Value(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_Click(class EventHandler )" />
          <Method Sig="instance void remove_Click(class EventHandler )" />
          <Method Sig="instance void add_DoubleClick(class EventHandler )" />
          <Method Sig="instance void remove_DoubleClick(class EventHandler )" />
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )" />
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )" />
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void add_Scroll(class EventHandler )" />
          <Method Sig="instance void remove_Scroll(class EventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void add_ValueChanged(class EventHandler )" />
          <Method Sig="instance void remove_ValueChanged(class EventHandler )" />
          <Method Sig="instance void BeginInit()" />
          <Method Sig="instance void EndInit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetRange(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="TrackBarRenderer">
          <Method Sig="bool get_IsSupported()" />
          <Method Sig="void DrawHorizontalTrack(class Graphics , struct Rectangle )" />
          <Method Sig="void DrawVerticalTrack(class Graphics , struct Rectangle )" />
          <Method Sig="void DrawHorizontalThumb(class Graphics , struct Rectangle , struct TrackBarThumbState )" />
          <Method Sig="void DrawVerticalThumb(class Graphics , struct Rectangle , struct TrackBarThumbState )" />
          <Method Sig="void DrawLeftPointingThumb(class Graphics , struct Rectangle , struct TrackBarThumbState )" />
          <Method Sig="void DrawRightPointingThumb(class Graphics , struct Rectangle , struct TrackBarThumbState )" />
          <Method Sig="void DrawTopPointingThumb(class Graphics , struct Rectangle , struct TrackBarThumbState )" />
          <Method Sig="void DrawBottomPointingThumb(class Graphics , struct Rectangle , struct TrackBarThumbState )" />
          <Method Sig="void DrawHorizontalTicks(class Graphics , struct Rectangle , int , struct EdgeStyle )" />
          <Method Sig="void DrawVerticalTicks(class Graphics , struct Rectangle , int , struct EdgeStyle )" />
          <Method Sig="struct Size GetLeftPointingThumbSize(class Graphics , struct TrackBarThumbState )" />
          <Method Sig="struct Size GetRightPointingThumbSize(class Graphics , struct TrackBarThumbState )" />
          <Method Sig="struct Size GetTopPointingThumbSize(class Graphics , struct TrackBarThumbState )" />
          <Method Sig="struct Size GetBottomPointingThumbSize(class Graphics , struct TrackBarThumbState )" />
        </Type>
        <Type Name="TreeNode">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(string , [] class TreeNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , int , int )" />
          <Method Sig="instance void .ctor(string , int , int , [] class TreeNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance struct Rectangle get_Bounds()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Checked()" />
          <Method Sig="instance void set_Checked(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContextMenu get_ContextMenu()" />
          <Method Sig="instance void set_ContextMenu(class ContextMenu )" />
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance class TreeNode get_FirstNode()" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance string get_FullPath()" />
          <Method Sig="instance intptr get_Handle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Index()" />
          <Method Sig="instance bool get_IsEditing()" />
          <Method Sig="instance bool get_IsExpanded()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsSelected()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsVisible()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode get_LastNode()" />
          <Method Sig="instance int get_Level()" />
          <Method Sig="instance class TreeNode get_NextNode()" />
          <Method Sig="instance class TreeNode get_NextVisibleNode()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Font get_NodeFont()" />
          <Method Sig="instance void set_NodeFont(class Font )" />
          <Method Sig="instance class TreeNodeCollection get_Nodes()" />
          <Method Sig="instance class TreeNode get_Parent()" />
          <Method Sig="instance class TreeNode get_PrevNode()" />
          <Method Sig="instance class TreeNode get_PrevVisibleNode()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectedImageIndex()" />
          <Method Sig="instance void set_SelectedImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_SelectedImageKey()" />
          <Method Sig="instance void set_SelectedImageKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_StateImageKey()" />
          <Method Sig="instance void set_StateImageKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_StateImageIndex()" />
          <Method Sig="instance void set_StateImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ToolTipText()" />
          <Method Sig="instance void set_ToolTipText(string )" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance class TreeView get_TreeView()" />
          <Method Sig="class TreeNode FromHandle(class TreeView , intptr )" />
          <Method Sig="instance void BeginEdit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Collapse(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Collapse()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EndEdit(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EnsureVisible()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Expand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ExpandAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetNodeCount(bool )" />
          <Method Sig="instance void Remove()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Toggle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="TreeNodeMouseClickEventArgs">
          <Method Sig="instance void .ctor(class TreeNode , struct MouseButtons , int , int , int )" />
          <Method Sig="instance class TreeNode get_Node()" />
        </Type>
        <Type Name="TreeNodeMouseClickEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class TreeNodeMouseClickEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class TreeNodeMouseClickEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="TreeNodeCollection">
          <Method Sig="instance class TreeNode get_Item(int )" />
          <Method Sig="instance void set_Item(int , class TreeNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode get_Item(string )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance class TreeNode Add(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Add(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Add(string , string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Add(string , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Add(string , string , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Add(string , string , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void AddRange([] class TreeNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] class TreeNode Find(string , bool )" />
          <Method Sig="instance int Add(class TreeNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Contains(class TreeNode )" />
          <Method Sig="instance bool ContainsKey(string )" />
          <Method Sig="instance int IndexOf(class TreeNode )" />
          <Method Sig="instance int IndexOfKey(string )" />
          <Method Sig="instance void Insert(int , class TreeNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Insert(int , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Insert(int , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Insert(int , string , string , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Insert(int , string , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Insert(int , string , string , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode Insert(int , string , string , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance void Remove(class TreeNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveAt(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void RemoveByKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IEnumerator GetEnumerator()" />
        </Type>
        <Type Name="TreeNodeConverter">
          <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TreeNodeMouseHoverEventArgs">
          <Method Sig="instance void .ctor(class TreeNode )" />
          <Method Sig="instance class TreeNode get_Node()" />
        </Type>
        <Type Name="TreeNodeMouseHoverEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class TreeNodeMouseHoverEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class TreeNodeMouseHoverEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="TreeView">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )" />
          <Method Sig="instance bool get_CheckBoxes()" />
          <Method Sig="instance void set_CheckBoxes(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_FullRowSelect()" />
          <Method Sig="instance void set_FullRowSelect(bool )" />
          <Method Sig="instance bool get_HideSelection()" />
          <Method Sig="instance void set_HideSelection(bool )" />
          <Method Sig="instance bool get_HotTracking()" />
          <Method Sig="instance void set_HotTracking(bool )" />
          <Method Sig="instance int get_ImageIndex()" />
          <Method Sig="instance void set_ImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ImageKey()" />
          <Method Sig="instance void set_ImageKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ImageList get_ImageList()" />
          <Method Sig="instance void set_ImageList(class ImageList )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ImageList get_StateImageList()" />
          <Method Sig="instance void set_StateImageList(class ImageList )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Indent()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Indent(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ItemHeight()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_ItemHeight(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_LabelEdit()" />
          <Method Sig="instance void set_LabelEdit(bool )" />
          <Method Sig="instance struct Color get_LineColor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_LineColor(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNodeCollection get_Nodes()" />
          <Method Sig="instance struct TreeViewDrawMode get_DrawMode()" />
          <Method Sig="instance void set_DrawMode(struct TreeViewDrawMode )" />
          <Method Sig="instance string get_PathSeparator()" />
          <Method Sig="instance void set_PathSeparator(string )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Scrollable()" />
          <Method Sig="instance void set_Scrollable(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_SelectedImageIndex()" />
          <Method Sig="instance void set_SelectedImageIndex(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_SelectedImageKey()" />
          <Method Sig="instance void set_SelectedImageKey(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode get_SelectedNode()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SelectedNode(class TreeNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowLines()" />
          <Method Sig="instance void set_ShowLines(bool )" />
          <Method Sig="instance bool get_ShowNodeToolTips()" />
          <Method Sig="instance void set_ShowNodeToolTips(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowPlusMinus()" />
          <Method Sig="instance void set_ShowPlusMinus(bool )" />
          <Method Sig="instance bool get_ShowRootLines()" />
          <Method Sig="instance void set_ShowRootLines(bool )" />
          <Method Sig="instance bool get_Sorted()" />
          <Method Sig="instance void set_Sorted(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IComparer get_TreeViewNodeSorter()" />
          <Method Sig="instance void set_TreeViewNodeSorter(class IComparer )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance class TreeNode get_TopNode()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_TopNode(class TreeNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_VisibleCount()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_BeforeLabelEdit(class NodeLabelEditEventHandler )" />
          <Method Sig="instance void remove_BeforeLabelEdit(class NodeLabelEditEventHandler )" />
          <Method Sig="instance void add_AfterLabelEdit(class NodeLabelEditEventHandler )" />
          <Method Sig="instance void remove_AfterLabelEdit(class NodeLabelEditEventHandler )" />
          <Method Sig="instance void add_BeforeCheck(class TreeViewCancelEventHandler )" />
          <Method Sig="instance void remove_BeforeCheck(class TreeViewCancelEventHandler )" />
          <Method Sig="instance void add_AfterCheck(class TreeViewEventHandler )" />
          <Method Sig="instance void remove_AfterCheck(class TreeViewEventHandler )" />
          <Method Sig="instance void add_BeforeCollapse(class TreeViewCancelEventHandler )" />
          <Method Sig="instance void remove_BeforeCollapse(class TreeViewCancelEventHandler )" />
          <Method Sig="instance void add_AfterCollapse(class TreeViewEventHandler )" />
          <Method Sig="instance void remove_AfterCollapse(class TreeViewEventHandler )" />
          <Method Sig="instance void add_BeforeExpand(class TreeViewCancelEventHandler )" />
          <Method Sig="instance void remove_BeforeExpand(class TreeViewCancelEventHandler )" />
          <Method Sig="instance void add_AfterExpand(class TreeViewEventHandler )" />
          <Method Sig="instance void remove_AfterExpand(class TreeViewEventHandler )" />
          <Method Sig="instance void add_DrawNode(class DrawTreeNodeEventHandler )" />
          <Method Sig="instance void remove_DrawNode(class DrawTreeNodeEventHandler )" />
          <Method Sig="instance void add_ItemDrag(class ItemDragEventHandler )" />
          <Method Sig="instance void remove_ItemDrag(class ItemDragEventHandler )" />
          <Method Sig="instance void add_NodeMouseHover(class TreeNodeMouseHoverEventHandler )" />
          <Method Sig="instance void remove_NodeMouseHover(class TreeNodeMouseHoverEventHandler )" />
          <Method Sig="instance void add_BeforeSelect(class TreeViewCancelEventHandler )" />
          <Method Sig="instance void remove_BeforeSelect(class TreeViewCancelEventHandler )" />
          <Method Sig="instance void add_AfterSelect(class TreeViewEventHandler )" />
          <Method Sig="instance void remove_AfterSelect(class TreeViewEventHandler )" />
          <Method Sig="instance void add_Paint(class PaintEventHandler )" />
          <Method Sig="instance void remove_Paint(class PaintEventHandler )" />
          <Method Sig="instance void add_NodeMouseClick(class TreeNodeMouseClickEventHandler )" />
          <Method Sig="instance void remove_NodeMouseClick(class TreeNodeMouseClickEventHandler )" />
          <Method Sig="instance void add_NodeMouseDoubleClick(class TreeNodeMouseClickEventHandler )" />
          <Method Sig="instance void remove_NodeMouseDoubleClick(class TreeNodeMouseClickEventHandler )" />
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void BeginUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void CollapseAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EndUpdate()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ExpandAll()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeViewHitTestInfo HitTest(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeViewHitTestInfo HitTest(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetNodeCount(bool )" />
          <Method Sig="instance class TreeNode GetNodeAt(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class TreeNode GetNodeAt(int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Sort()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="TreeViewCancelEventArgs">
          <Method Sig="instance void .ctor(class TreeNode , bool , struct TreeViewAction )" />
          <Method Sig="instance class TreeNode get_Node()" />
          <Method Sig="instance struct TreeViewAction get_Action()" />
        </Type>
        <Type Name="TreeViewCancelEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class TreeViewCancelEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class TreeViewCancelEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="TreeViewEventArgs">
          <Method Sig="instance void .ctor(class TreeNode )" />
          <Method Sig="instance void .ctor(class TreeNode , struct TreeViewAction )" />
          <Method Sig="instance class TreeNode get_Node()" />
          <Method Sig="instance struct TreeViewAction get_Action()" />
        </Type>
        <Type Name="TreeViewEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class TreeViewEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class TreeViewEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="TreeViewHitTestInfo">
          <Method Sig="instance void .ctor(class TreeNode , struct TreeViewHitTestLocations )" />
          <Method Sig="instance struct TreeViewHitTestLocations get_Location()" />
          <Method Sig="instance class TreeNode get_Node()" />
        </Type>
        <Type Name="TreeViewImageIndexConverter">
          <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance class StandardValuesCollection GetStandardValues(class ITypeDescriptorContext )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TreeViewImageKeyConverter">
          <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeValidationEventArgs">
          <Method Sig="instance void .ctor(class Type , bool , object , string )" />
          <Method Sig="instance bool get_Cancel()" />
          <Method Sig="instance void set_Cancel(bool )" />
          <Method Sig="instance bool get_IsValidInput()" />
          <Method Sig="instance string get_Message()" />
          <Method Sig="instance object get_ReturnValue()" />
          <Method Sig="instance class Type get_ValidatingType()" />
        </Type>
        <Type Name="TypeValidationEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class TypeValidationEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class TypeValidationEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="UICuesEventArgs">
          <Method Sig="instance void .ctor(struct UICues )" />
          <Method Sig="instance bool get_ShowFocus()" />
          <Method Sig="instance bool get_ShowKeyboard()" />
          <Method Sig="instance bool get_ChangeFocus()" />
          <Method Sig="instance bool get_ChangeKeyboard()" />
          <Method Sig="instance struct UICues get_Changed()" />
        </Type>
        <Type Name="UICuesEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class UICuesEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class UICuesEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="UpDownEventArgs">
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance int get_ButtonID()" />
        </Type>
        <Type Name="UpDownEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class UpDownEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class UpDownEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="UserControl">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )" />
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct AutoSizeMode get_AutoSizeMode()" />
          <Method Sig="instance void set_AutoSizeMode(struct AutoSizeMode )" />
          <Method Sig="instance struct AutoValidate get_AutoValidate()" />
          <Method Sig="instance void set_AutoValidate(struct AutoValidate )" />
          <Method Sig="instance void add_AutoValidateChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoValidateChanged(class EventHandler )" />
          <Method Sig="instance struct BorderStyle get_BorderStyle()" />
          <Method Sig="instance void set_BorderStyle(struct BorderStyle )" />
          <Method Sig="instance void add_Load(class EventHandler )" />
          <Method Sig="instance void remove_Load(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance bool ValidateChildren()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool ValidateChildren(struct ValidationConstraints )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="VScrollBar">
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )" />
          <Method Sig="instance void add_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="VScrollProperties">
          <Method Sig="instance void .ctor(class ScrollableControl )" />
        </Type>
        <Type Name="WebBrowserBase">
          <Method Sig="instance object get_ActiveXInstance()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void DrawToBitmap(class Bitmap , struct Rectangle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Site(class ISite )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool PreProcessMessage(&amp; struct Message )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_BackColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Font get_Font()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Font(class Font )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Color get_ForeColor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ForeColor(struct Color )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct ImeMode get_ImeMode()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_AllowDrop()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_AllowDrop(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Image get_BackgroundImage()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackgroundImage(class Image )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Cursor get_Cursor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Cursor(class Cursor )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_Enabled()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Enabled(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct RightToLeft get_RightToLeft()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Text()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Text(string )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_UseWaitCursor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_UseWaitCursor(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Enter(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Enter(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Leave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Leave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseCaptureChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseCaptureChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseClick(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseClick(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseDoubleClick(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseDoubleClick(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BackColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_BindingContextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_BindingContextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_CursorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_CursorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_EnabledChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_EnabledChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_FontChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_FontChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_RightToLeftChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_RightToLeftChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_TextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_TextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Click(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Click(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragDrop(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragDrop(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragEnter(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragEnter(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragOver(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragOver(class DragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DragLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DragLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_GiveFeedback(class GiveFeedbackEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_GiveFeedback(class GiveFeedbackEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_HelpRequested(class HelpEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_HelpRequested(class HelpEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Paint(class PaintEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Paint(class PaintEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_QueryContinueDrag(class QueryContinueDragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_QueryContinueDrag(class QueryContinueDragEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_QueryAccessibilityHelp(class QueryAccessibilityHelpEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_QueryAccessibilityHelp(class QueryAccessibilityHelpEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DoubleClick(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DoubleClick(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyDown(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyDown(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyPress(class KeyPressEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyPress(class KeyPressEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_KeyUp(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_KeyUp(class KeyEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Layout(class LayoutEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Layout(class LayoutEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseDown(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseDown(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseEnter(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseEnter(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseLeave(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseHover(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseHover(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseMove(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseMove(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseUp(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseUp(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_MouseWheel(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_MouseWheel(class MouseEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ChangeUICues(class UICuesEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ChangeUICues(class UICuesEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_StyleChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_StyleChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="WebBrowser">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_AllowNavigation()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_AllowNavigation(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_AllowWebBrowserDrop()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_AllowWebBrowserDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_ScriptErrorsSuppressed()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ScriptErrorsSuppressed(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_WebBrowserShortcutsEnabled()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_WebBrowserShortcutsEnabled(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_CanGoBack()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_CanGoForward()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class HtmlDocument get_Document()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Stream get_DocumentStream()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_DocumentStream(class Stream )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_DocumentText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_DocumentText(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_DocumentTitle()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_DocumentType()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct WebBrowserEncryptionLevel get_EncryptionLevel()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_IsBusy()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_IsOffline()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_IsWebBrowserContextMenuEnabled()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_IsWebBrowserContextMenuEnabled(bool )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance object get_ObjectForScripting()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ObjectForScripting(object )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct Padding get_Padding()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Padding(struct Padding )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_PaddingChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance struct WebBrowserReadyState get_ReadyState()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_StatusText()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Uri get_Url()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_Url(class Uri )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance class Version get_Version()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool GoBack()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool GoForward()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void GoHome()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void GoSearch()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(class Uri )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(class Uri , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(class Uri , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(string , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(class Uri , string , [] byte , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Navigate(string , string , [] byte , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Print()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Refresh()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Refresh(struct WebBrowserRefreshOption )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_ScrollBarsEnabled()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void set_ScrollBarsEnabled(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ShowPageSetupDialog()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ShowPrintDialog()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ShowPrintPreviewDialog()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ShowPropertiesDialog()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void ShowSaveAsDialog()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void Stop()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_CanGoBackChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_CanGoBackChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_CanGoForwardChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_CanGoForwardChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DocumentCompleted(class WebBrowserDocumentCompletedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DocumentCompleted(class WebBrowserDocumentCompletedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_DocumentTitleChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_DocumentTitleChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_EncryptionLevelChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_EncryptionLevelChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_FileDownload(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_FileDownload(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Navigated(class WebBrowserNavigatedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Navigated(class WebBrowserNavigatedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_Navigating(class WebBrowserNavigatingEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_Navigating(class WebBrowserNavigatingEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_NewWindow(class CancelEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_NewWindow(class CancelEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_ProgressChanged(class WebBrowserProgressChangedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_ProgressChanged(class WebBrowserProgressChangedEventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void add_StatusTextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance void remove_StatusTextChanged(class EventHandler )">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
          <Method Sig="instance bool get_Focused()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="WebBrowserSiteBase">
          <Method Sig="instance void Dispose()" />
        </Type>
        <Type Name="WebBrowserDocumentCompletedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class WebBrowserDocumentCompletedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class WebBrowserDocumentCompletedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="WebBrowserDocumentCompletedEventArgs">
          <Method Sig="instance void .ctor(class Uri )" />
          <Method Sig="instance class Uri get_Url()" />
        </Type>
        <Type Name="WebBrowserNavigatedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class WebBrowserNavigatedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class WebBrowserNavigatedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="WebBrowserNavigatedEventArgs">
          <Method Sig="instance void .ctor(class Uri )" />
          <Method Sig="instance class Uri get_Url()" />
        </Type>
        <Type Name="WebBrowserNavigatingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class WebBrowserNavigatingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class WebBrowserNavigatingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="WebBrowserNavigatingEventArgs">
          <Method Sig="instance void .ctor(class Uri , string )" />
          <Method Sig="instance class Uri get_Url()" />
          <Method Sig="instance string get_TargetFrameName()" />
        </Type>
        <Type Name="WebBrowserProgressChangedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class WebBrowserProgressChangedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class WebBrowserProgressChangedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="WebBrowserProgressChangedEventArgs">
          <Method Sig="instance void .ctor(in64 , in64 )" />
          <Method Sig="instance in64 get_CurrentProgress()" />
          <Method Sig="instance in64 get_MaximumProgress()" />
        </Type>
        <Type Name="WindowsFormsSection">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_JitDebugging()" />
          <Method Sig="instance void set_JitDebugging(bool )" />
        </Type>
        <Type Name="WindowsFormsSynchronizationContext">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Dispose()" />
          <Method Sig="instance void Send(class SendOrPostCallback , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Post(class SendOrPostCallback , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SynchronizationContext CreateCopy()" />
          <Method Sig="bool get_AutoInstall()" />
          <Method Sig="void set_AutoInstall(bool )" />
          <Method Sig="void Uninstall()" />
        </Type>
        <Namespace Name="ComponentModel">
          <Namespace Name="Com2Interop">
            <Type Name="Com2Variant">
              <Method Sig="instance void .ctor()">
                <LinkDemand>
                  <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
                </LinkDemand>
              </Method>
            </Type>
          </Namespace>
        </Namespace>
        <Type Name="PageSetupDialog">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_AllowMargins()" />
          <Method Sig="instance void set_AllowMargins(bool )" />
          <Method Sig="instance bool get_AllowOrientation()" />
          <Method Sig="instance void set_AllowOrientation(bool )" />
          <Method Sig="instance bool get_AllowPaper()" />
          <Method Sig="instance void set_AllowPaper(bool )" />
          <Method Sig="instance bool get_AllowPrinter()" />
          <Method Sig="instance void set_AllowPrinter(bool )" />
          <Method Sig="instance class PrintDocument get_Document()" />
          <Method Sig="instance void set_Document(class PrintDocument )" />
          <Method Sig="instance bool get_EnableMetric()" />
          <Method Sig="instance void set_EnableMetric(bool )" />
          <Method Sig="instance class Margins get_MinMargins()" />
          <Method Sig="instance void set_MinMargins(class Margins )" />
          <Method Sig="instance class PageSettings get_PageSettings()" />
          <Method Sig="instance void set_PageSettings(class PageSettings )" />
          <Method Sig="instance class PrinterSettings get_PrinterSettings()" />
          <Method Sig="instance void set_PrinterSettings(class PrinterSettings )" />
          <Method Sig="instance bool get_ShowHelp()" />
          <Method Sig="instance void set_ShowHelp(bool )" />
          <Method Sig="instance bool get_ShowNetwork()" />
          <Method Sig="instance void set_ShowNetwork(bool )" />
          <Method Sig="instance void Reset()" />
        </Type>
        <Type Name="PrintControllerWithStatusDialog">
          <Method Sig="instance void .ctor(class PrintController )" />
          <Method Sig="instance void .ctor(class PrintController , string )" />
          <Method Sig="instance bool get_IsPreview()" />
          <Method Sig="instance void OnStartPrint(class PrintDocument , class PrintEventArgs )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Graphics OnStartPage(class PrintDocument , class PrintPageEventArgs )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void OnEndPage(class PrintDocument , class PrintPageEventArgs )" />
          <Method Sig="instance void OnEndPrint(class PrintDocument , class PrintEventArgs )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="PrintDialog">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_AllowCurrentPage()" />
          <Method Sig="instance void set_AllowCurrentPage(bool )" />
          <Method Sig="instance bool get_AllowSomePages()" />
          <Method Sig="instance void set_AllowSomePages(bool )" />
          <Method Sig="instance bool get_AllowPrintToFile()" />
          <Method Sig="instance void set_AllowPrintToFile(bool )" />
          <Method Sig="instance bool get_AllowSelection()" />
          <Method Sig="instance void set_AllowSelection(bool )" />
          <Method Sig="instance class PrintDocument get_Document()" />
          <Method Sig="instance void set_Document(class PrintDocument )" />
          <Method Sig="instance class PrinterSettings get_PrinterSettings()" />
          <Method Sig="instance void set_PrinterSettings(class PrinterSettings )" />
          <Method Sig="instance bool get_PrintToFile()" />
          <Method Sig="instance void set_PrintToFile(bool )" />
          <Method Sig="instance bool get_ShowHelp()" />
          <Method Sig="instance void set_ShowHelp(bool )" />
          <Method Sig="instance bool get_ShowNetwork()" />
          <Method Sig="instance void set_ShowNetwork(bool )" />
          <Method Sig="instance void Reset()" />
        </Type>
        <Type Name="PrintPreviewControl">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseAntiAlias()" />
          <Method Sig="instance void set_UseAntiAlias(bool )" />
          <Method Sig="instance bool get_AutoZoom()" />
          <Method Sig="instance void set_AutoZoom(bool )" />
          <Method Sig="instance class PrintDocument get_Document()" />
          <Method Sig="instance void set_Document(class PrintDocument )" />
          <Method Sig="instance int get_Columns()" />
          <Method Sig="instance void set_Columns(int )" />
          <Method Sig="instance int get_Rows()" />
          <Method Sig="instance void set_Rows(int )" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance int get_StartPage()" />
          <Method Sig="instance void set_StartPage(int )" />
          <Method Sig="instance void add_StartPageChanged(class EventHandler )" />
          <Method Sig="instance void remove_StartPageChanged(class EventHandler )" />
          <Method Sig="instance double get_Zoom()" />
          <Method Sig="instance void set_Zoom(double )" />
          <Method Sig="instance void InvalidatePreview()" />
          <Method Sig="instance void ResetBackColor()" />
          <Method Sig="instance void ResetForeColor()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="PrintPreviewDialog">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IButtonControl get_AcceptButton()" />
          <Method Sig="instance void set_AcceptButton(class IButtonControl )" />
          <Method Sig="instance bool get_AutoScale()" />
          <Method Sig="instance void set_AutoScale(bool )" />
          <Method Sig="instance bool get_AutoScroll()" />
          <Method Sig="instance void set_AutoScroll(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AutoSize()" />
          <Method Sig="instance void set_AutoSize(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoSizeChanged(class EventHandler )" />
          <Method Sig="instance struct AutoValidate get_AutoValidate()" />
          <Method Sig="instance void set_AutoValidate(struct AutoValidate )" />
          <Method Sig="instance void add_AutoValidateChanged(class EventHandler )" />
          <Method Sig="instance void remove_AutoValidateChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_BackColor()" />
          <Method Sig="instance void set_BackColor(struct Color )" />
          <Method Sig="instance void add_BackColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackColorChanged(class EventHandler )" />
          <Method Sig="instance class IButtonControl get_CancelButton()" />
          <Method Sig="instance void set_CancelButton(class IButtonControl )" />
          <Method Sig="instance bool get_ControlBox()" />
          <Method Sig="instance void set_ControlBox(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ContextMenuStrip get_ContextMenuStrip()" />
          <Method Sig="instance void set_ContextMenuStrip(class ContextMenuStrip )" />
          <Method Sig="instance void add_ContextMenuStripChanged(class EventHandler )" />
          <Method Sig="instance void remove_ContextMenuStripChanged(class EventHandler )" />
          <Method Sig="instance struct FormBorderStyle get_FormBorderStyle()" />
          <Method Sig="instance void set_FormBorderStyle(struct FormBorderStyle )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_HelpButton()" />
          <Method Sig="instance void set_HelpButton(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Icon get_Icon()" />
          <Method Sig="instance void set_Icon(class Icon )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsMdiContainer()" />
          <Method Sig="instance void set_IsMdiContainer(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_KeyPreview()" />
          <Method Sig="instance void set_KeyPreview(bool )" />
          <Method Sig="instance struct Size get_MaximumSize()" />
          <Method Sig="instance void set_MaximumSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MaximumSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_MaximumSizeChanged(class EventHandler )" />
          <Method Sig="instance bool get_MaximizeBox()" />
          <Method Sig="instance void set_MaximizeBox(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Padding get_Margin()" />
          <Method Sig="instance void set_Margin(struct Padding )" />
          <Method Sig="instance void add_MarginChanged(class EventHandler )" />
          <Method Sig="instance void remove_MarginChanged(class EventHandler )" />
          <Method Sig="instance class MainMenu get_Menu()" />
          <Method Sig="instance void set_Menu(class MainMenu )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Size get_MinimumSize()" />
          <Method Sig="instance void set_MinimumSize(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_MinimumSizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_MinimumSizeChanged(class EventHandler )" />
          <Method Sig="instance struct Padding get_Padding()" />
          <Method Sig="instance void set_Padding(struct Padding )" />
          <Method Sig="instance void add_PaddingChanged(class EventHandler )" />
          <Method Sig="instance void remove_PaddingChanged(class EventHandler )" />
          <Method Sig="instance struct Size get_Size()" />
          <Method Sig="instance void set_Size(struct Size )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_SizeChanged(class EventHandler )" />
          <Method Sig="instance void remove_SizeChanged(class EventHandler )" />
          <Method Sig="instance struct FormStartPosition get_StartPosition()" />
          <Method Sig="instance void set_StartPosition(struct FormStartPosition )" />
          <Method Sig="instance bool get_TopMost()" />
          <Method Sig="instance void set_TopMost(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Color get_TransparencyKey()" />
          <Method Sig="instance void set_TransparencyKey(struct Color )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UseWaitCursor()" />
          <Method Sig="instance void set_UseWaitCursor(bool )" />
          <Method Sig="instance struct FormWindowState get_WindowState()" />
          <Method Sig="instance void set_WindowState(struct FormWindowState )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct AccessibleRole get_AccessibleRole()" />
          <Method Sig="instance void set_AccessibleRole(struct AccessibleRole )" />
          <Method Sig="instance string get_AccessibleDescription()" />
          <Method Sig="instance void set_AccessibleDescription(string )" />
          <Method Sig="instance string get_AccessibleName()" />
          <Method Sig="instance void set_AccessibleName(string )" />
          <Method Sig="instance bool get_CausesValidation()" />
          <Method Sig="instance void set_CausesValidation(bool )" />
          <Method Sig="instance void add_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance void remove_CausesValidationChanged(class EventHandler )" />
          <Method Sig="instance class ControlBindingsCollection get_DataBindings()" />
          <Method Sig="instance bool get_Enabled()" />
          <Method Sig="instance void set_Enabled(bool )" />
          <Method Sig="instance void add_EnabledChanged(class EventHandler )" />
          <Method Sig="instance void remove_EnabledChanged(class EventHandler )" />
          <Method Sig="instance struct Point get_Location()" />
          <Method Sig="instance void set_Location(struct Point )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_LocationChanged(class EventHandler )" />
          <Method Sig="instance void remove_LocationChanged(class EventHandler )" />
          <Method Sig="instance object get_Tag()" />
          <Method Sig="instance void set_Tag(object )" />
          <Method Sig="instance bool get_AllowDrop()" />
          <Method Sig="instance void set_AllowDrop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class Cursor get_Cursor()" />
          <Method Sig="instance void set_Cursor(class Cursor )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_CursorChanged(class EventHandler )" />
          <Method Sig="instance void remove_CursorChanged(class EventHandler )" />
          <Method Sig="instance class Image get_BackgroundImage()" />
          <Method Sig="instance void set_BackgroundImage(class Image )" />
          <Method Sig="instance void add_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageChanged(class EventHandler )" />
          <Method Sig="instance struct ImageLayout get_BackgroundImageLayout()" />
          <Method Sig="instance void set_BackgroundImageLayout(struct ImageLayout )" />
          <Method Sig="instance void add_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_BackgroundImageLayoutChanged(class EventHandler )" />
          <Method Sig="instance struct ImeMode get_ImeMode()" />
          <Method Sig="instance void set_ImeMode(struct ImeMode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance void remove_ImeModeChanged(class EventHandler )" />
          <Method Sig="instance struct Size get_AutoScrollMargin()" />
          <Method Sig="instance void set_AutoScrollMargin(struct Size )" />
          <Method Sig="instance struct Size get_AutoScrollMinSize()" />
          <Method Sig="instance void set_AutoScrollMinSize(struct Size )" />
          <Method Sig="instance struct AnchorStyles get_Anchor()" />
          <Method Sig="instance void set_Anchor(struct AnchorStyles )" />
          <Method Sig="instance bool get_Visible()" />
          <Method Sig="instance void set_Visible(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_VisibleChanged(class EventHandler )" />
          <Method Sig="instance void remove_VisibleChanged(class EventHandler )" />
          <Method Sig="instance struct Color get_ForeColor()" />
          <Method Sig="instance void set_ForeColor(struct Color )" />
          <Method Sig="instance void add_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance void remove_ForeColorChanged(class EventHandler )" />
          <Method Sig="instance struct RightToLeft get_RightToLeft()" />
          <Method Sig="instance void set_RightToLeft(struct RightToLeft )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_RightToLeftLayout()" />
          <Method Sig="instance void set_RightToLeftLayout(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftChanged(class EventHandler )" />
          <Method Sig="instance void add_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance void remove_RightToLeftLayoutChanged(class EventHandler )" />
          <Method Sig="instance bool get_TabStop()" />
          <Method Sig="instance void set_TabStop(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_TabStopChanged(class EventHandler )" />
          <Method Sig="instance void remove_TabStopChanged(class EventHandler )" />
          <Method Sig="instance string get_Text()" />
          <Method Sig="instance void set_Text(string )" />
          <Method Sig="instance void add_TextChanged(class EventHandler )" />
          <Method Sig="instance void remove_TextChanged(class EventHandler )" />
          <Method Sig="instance struct DockStyle get_Dock()" />
          <Method Sig="instance void set_Dock(struct DockStyle )" />
          <Method Sig="instance void add_DockChanged(class EventHandler )" />
          <Method Sig="instance void remove_DockChanged(class EventHandler )" />
          <Method Sig="instance class Font get_Font()" />
          <Method Sig="instance void set_Font(class Font )" />
          <Method Sig="instance void add_FontChanged(class EventHandler )" />
          <Method Sig="instance void remove_FontChanged(class EventHandler )" />
          <Method Sig="instance class ContextMenu get_ContextMenu()" />
          <Method Sig="instance void set_ContextMenu(class ContextMenu )" />
          <Method Sig="instance void add_ContextMenuChanged(class EventHandler )" />
          <Method Sig="instance void remove_ContextMenuChanged(class EventHandler )" />
          <Method Sig="instance class DockPaddingEdges get_DockPadding()" />
          <Method Sig="instance bool get_UseAntiAlias()" />
          <Method Sig="instance void set_UseAntiAlias(bool )" />
          <Method Sig="instance struct Size get_AutoScaleBaseSize()" />
          <Method Sig="instance void set_AutoScaleBaseSize(struct Size )" />
          <Method Sig="instance class PrintDocument get_Document()" />
          <Method Sig="instance void set_Document(class PrintDocument )" />
          <Method Sig="instance bool get_MinimizeBox()" />
          <Method Sig="instance void set_MinimizeBox(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class PrintPreviewControl get_PrintPreviewControl()" />
          <Method Sig="instance double get_Opacity()" />
          <Method Sig="instance void set_Opacity(double )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ShowInTaskbar()" />
          <Method Sig="instance void set_ShowInTaskbar(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SizeGripStyle get_SizeGripStyle()" />
          <Method Sig="instance void set_SizeGripStyle(struct SizeGripStyle )" />
        </Type>
        <Namespace Name="PropertyGridInternal">
          <Type Name="PropertiesTab">
            <Method Sig="instance string get_TabName()">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance string get_HelpKeyword()">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance class PropertyDescriptor GetDefaultProperty(object )">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance class PropertyDescriptorCollection GetProperties(object , [] class Attribute )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance class PropertyDescriptorCollection GetProperties(class ITypeDescriptorContext , object , [] class Attribute )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="instance void .ctor()">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
          </Type>
          <Type Name="PropertyGridCommands">
            <Method Sig="instance void .ctor()">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
            <Method Sig="void .cctor()">
              <LinkDemand>
                <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
              </LinkDemand>
            </Method>
          </Type>
        </Namespace>
        <Namespace Name="VisualStyles">
          <Type Name="VisualStyleElement">
            <Method Sig="class VisualStyleElement CreateElement(string , int , int )" />
            <Method Sig="instance string get_ClassName()" />
            <Method Sig="instance int get_Part()" />
            <Method Sig="instance int get_State()" />
            <Method Sig="void .cctor()" />
          </Type>
          <Type Name="VisualStyleInformation">
            <Method Sig="bool get_IsSupportedByOS()" />
            <Method Sig="bool get_IsEnabledByUser()" />
            <Method Sig="string get_ColorScheme()" />
            <Method Sig="string get_Size()" />
            <Method Sig="string get_DisplayName()" />
            <Method Sig="string get_Company()" />
            <Method Sig="string get_Author()" />
            <Method Sig="string get_Copyright()" />
            <Method Sig="string get_Url()" />
            <Method Sig="string get_Version()" />
            <Method Sig="string get_Description()" />
            <Method Sig="bool get_SupportsFlatMenus()" />
            <Method Sig="int get_MinimumColorDepth()" />
            <Method Sig="struct Color get_TextControlBorder()" />
            <Method Sig="struct Color get_ControlHighlightHot()" />
          </Type>
          <Type Name="VisualStyleRenderer">
            <Method Sig="void .cctor()" />
            <Method Sig="bool get_IsSupported()" />
            <Method Sig="bool IsElementDefined(class VisualStyleElement )" />
            <Method Sig="instance void .ctor(class VisualStyleElement )" />
            <Method Sig="instance void .ctor(string , int , int )" />
            <Method Sig="instance string get_Class()" />
            <Method Sig="instance int get_Part()" />
            <Method Sig="instance int get_State()" />
            <Method Sig="instance intptr get_Handle()" />
            <Method Sig="instance void SetParameters(class VisualStyleElement )" />
            <Method Sig="instance void SetParameters(string , int , int )" />
            <Method Sig="instance void DrawBackground(class IDeviceContext , struct Rectangle )" />
            <Method Sig="instance void DrawBackground(class IDeviceContext , struct Rectangle , struct Rectangle )" />
            <Method Sig="instance struct Rectangle DrawEdge(class IDeviceContext , struct Rectangle , struct Edges , struct EdgeStyle , struct EdgeEffects )" />
            <Method Sig="instance void DrawImage(class Graphics , struct Rectangle , class Image )" />
            <Method Sig="instance void DrawImage(class Graphics , struct Rectangle , class ImageList , int )" />
            <Method Sig="instance void DrawParentBackground(class IDeviceContext , struct Rectangle , class Control )">
              <Demand>
                <PermissionSet version="1" class="System.Security.PermissionSet">
                  <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                  <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                  <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                </PermissionSet>
              </Demand>
            </Method>
            <Method Sig="instance void DrawText(class IDeviceContext , struct Rectangle , string )" />
            <Method Sig="instance void DrawText(class IDeviceContext , struct Rectangle , string , bool )" />
            <Method Sig="instance void DrawText(class IDeviceContext , struct Rectangle , string , bool , struct TextFormatFlags )" />
            <Method Sig="instance struct Rectangle GetBackgroundContentRectangle(class IDeviceContext , struct Rectangle )" />
            <Method Sig="instance struct Rectangle GetBackgroundExtent(class IDeviceContext , struct Rectangle )" />
            <Method Sig="instance class Region GetBackgroundRegion(class IDeviceContext , struct Rectangle )" />
            <Method Sig="instance bool GetBoolean(struct BooleanProperty )" />
            <Method Sig="instance struct Color GetColor(struct ColorProperty )" />
            <Method Sig="instance int GetEnumValue(struct EnumProperty )" />
            <Method Sig="instance string GetFilename(struct FilenameProperty )" />
            <Method Sig="instance class Font GetFont(class IDeviceContext , struct FontProperty )" />
            <Method Sig="instance int GetInteger(struct IntegerProperty )" />
            <Method Sig="instance struct Size GetPartSize(class IDeviceContext , struct ThemeSizeType )" />
            <Method Sig="instance struct Size GetPartSize(class IDeviceContext , struct Rectangle , struct ThemeSizeType )" />
            <Method Sig="instance struct Point GetPoint(struct PointProperty )" />
            <Method Sig="instance struct Padding GetMargins(class IDeviceContext , struct MarginProperty )" />
            <Method Sig="instance string GetString(struct StringProperty )" />
            <Method Sig="instance struct Rectangle GetTextExtent(class IDeviceContext , string , struct TextFormatFlags )" />
            <Method Sig="instance struct Rectangle GetTextExtent(class IDeviceContext , struct Rectangle , string , struct TextFormatFlags )" />
            <Method Sig="instance struct TextMetrics GetTextMetrics(class IDeviceContext )" />
            <Method Sig="instance struct HitTestCode HitTestBackground(class IDeviceContext , struct Rectangle , struct Point , struct HitTestOptions )" />
            <Method Sig="instance struct HitTestCode HitTestBackground(class Graphics , struct Rectangle , class Region , struct Point , struct HitTestOptions )" />
            <Method Sig="instance struct HitTestCode HitTestBackground(class IDeviceContext , struct Rectangle , intptr , struct Point , struct HitTestOptions )" />
            <Method Sig="instance bool IsBackgroundPartiallyTransparent()" />
            <Method Sig="instance int get_LastHResult()" />
          </Type>
          <Type Name="TextMetrics">
            <Method Sig="instance int get_Height()" />
            <Method Sig="instance void set_Height(int )" />
            <Method Sig="instance int get_Ascent()" />
            <Method Sig="instance void set_Ascent(int )" />
            <Method Sig="instance int get_Descent()" />
            <Method Sig="instance void set_Descent(int )" />
            <Method Sig="instance int get_InternalLeading()" />
            <Method Sig="instance void set_InternalLeading(int )" />
            <Method Sig="instance int get_ExternalLeading()" />
            <Method Sig="instance void set_ExternalLeading(int )" />
            <Method Sig="instance int get_AverageCharWidth()" />
            <Method Sig="instance void set_AverageCharWidth(int )" />
            <Method Sig="instance int get_MaxCharWidth()" />
            <Method Sig="instance void set_MaxCharWidth(int )" />
            <Method Sig="instance int get_Weight()" />
            <Method Sig="instance void set_Weight(int )" />
            <Method Sig="instance int get_Overhang()" />
            <Method Sig="instance void set_Overhang(int )" />
            <Method Sig="instance int get_DigitizedAspectX()" />
            <Method Sig="instance void set_DigitizedAspectX(int )" />
            <Method Sig="instance int get_DigitizedAspectY()" />
            <Method Sig="instance void set_DigitizedAspectY(int )" />
            <Method Sig="instance char get_FirstChar()" />
            <Method Sig="instance void set_FirstChar(char )" />
            <Method Sig="instance char get_LastChar()" />
            <Method Sig="instance void set_LastChar(char )" />
            <Method Sig="instance char get_DefaultChar()" />
            <Method Sig="instance void set_DefaultChar(char )" />
            <Method Sig="instance char get_BreakChar()" />
            <Method Sig="instance void set_BreakChar(char )" />
            <Method Sig="instance bool get_Italic()" />
            <Method Sig="instance void set_Italic(bool )" />
            <Method Sig="instance bool get_Underlined()" />
            <Method Sig="instance void set_Underlined(bool )" />
            <Method Sig="instance bool get_StruckOut()" />
            <Method Sig="instance void set_StruckOut(bool )" />
            <Method Sig="instance struct TextMetricsPitchAndFamilyValues get_PitchAndFamily()" />
            <Method Sig="instance void set_PitchAndFamily(struct TextMetricsPitchAndFamilyValues )" />
            <Method Sig="instance struct TextMetricsCharacterSet get_CharSet()" />
            <Method Sig="instance void set_CharSet(struct TextMetricsCharacterSet )" />
          </Type>
        </Namespace>
        <Type Name="TextRenderer">
          <Method Sig="void DrawText(class IDeviceContext , string , class Font , struct Point , struct Color )" />
          <Method Sig="void DrawText(class IDeviceContext , string , class Font , struct Point , struct Color , struct Color )" />
          <Method Sig="void DrawText(class IDeviceContext , string , class Font , struct Point , struct Color , struct TextFormatFlags )" />
          <Method Sig="void DrawText(class IDeviceContext , string , class Font , struct Point , struct Color , struct Color , struct TextFormatFlags )" />
          <Method Sig="void DrawText(class IDeviceContext , string , class Font , struct Rectangle , struct Color )" />
          <Method Sig="void DrawText(class IDeviceContext , string , class Font , struct Rectangle , struct Color , struct Color )" />
          <Method Sig="void DrawText(class IDeviceContext , string , class Font , struct Rectangle , struct Color , struct TextFormatFlags )" />
          <Method Sig="void DrawText(class IDeviceContext , string , class Font , struct Rectangle , struct Color , struct Color , struct TextFormatFlags )" />
          <Method Sig="struct Size MeasureText(string , class Font )" />
          <Method Sig="struct Size MeasureText(string , class Font , struct Size )" />
          <Method Sig="struct Size MeasureText(string , class Font , struct Size , struct TextFormatFlags )" />
          <Method Sig="struct Size MeasureText(class IDeviceContext , string , class Font )" />
          <Method Sig="struct Size MeasureText(class IDeviceContext , string , class Font , struct Size )" />
          <Method Sig="struct Size MeasureText(class IDeviceContext , string , class Font , struct Size , struct TextFormatFlags )" />
        </Type>
      </Namespace>
    </Namespace>
  </Namespace>
  <Type Name="Converter">
    <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
        </PermissionSet>
      </Demand>
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance void .ctor()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
  </Type>
  <Type Name="SMsoComponentManager">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="CharBuffer">
    <Method Sig="class CharBuffer CreateBuffer(int )" />
    <Method Sig="instance intptr AllocCoTaskMem()" />
    <Method Sig="instance string GetString()" />
    <Method Sig="instance void PutCoTaskMem(intptr )" />
    <Method Sig="instance void PutString(string )" />
  </Type>
  <Type Name="AnsiCharBuffer">
    <Method Sig="instance void .ctor(int )" />
    <Method Sig="instance intptr AllocCoTaskMem()" />
    <Method Sig="instance string GetString()" />
    <Method Sig="instance void PutCoTaskMem(intptr )" />
    <Method Sig="instance void PutString(string )" />
  </Type>
  <Type Name="UnicodeCharBuffer">
    <Method Sig="instance void .ctor(int )" />
    <Method Sig="instance intptr AllocCoTaskMem()" />
    <Method Sig="instance string GetString()" />
    <Method Sig="instance void PutCoTaskMem(intptr )" />
    <Method Sig="instance void PutString(string )" />
  </Type>
  <Type Name="ComStreamFromDataStream">
    <Method Sig="instance void .ctor(class Stream )" />
    <Method Sig="instance class IStream Clone()" />
    <Method Sig="instance void Commit(int )" />
    <Method Sig="instance in64 CopyTo(class IStream , in64 , [] in64 )" />
    <Method Sig="instance class Stream GetDataStream()" />
    <Method Sig="instance void LockRegion(in64 , in64 , int )" />
    <Method Sig="instance int Read(intptr , int )" />
    <Method Sig="instance int Read([] byte , int )" />
    <Method Sig="instance void Revert()" />
    <Method Sig="instance in64 Seek(in64 , int )" />
    <Method Sig="instance void SetSize(in64 )" />
    <Method Sig="instance void Stat(class STATSTG , int )" />
    <Method Sig="instance void UnlockRegion(in64 , in64 , int )" />
    <Method Sig="instance int Write(intptr , int )" />
    <Method Sig="instance int Write([] byte , int )" />
  </Type>
  <Type Name="tagQACONTAINER">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagQACONTROL">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="OFNOTIFY">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="BrowseCallbackProc">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance int Invoke(intptr , int , intptr , intptr )" />
    <Method Sig="instance class IAsyncResult BeginInvoke(intptr , int , intptr , intptr , class AsyncCallback , object )" />
    <Method Sig="instance int EndInvoke(class IAsyncResult )" />
  </Type>
  <Type Name="BROWSEINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MessageLoopCallback">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance bool Invoke()" />
    <Method Sig="instance class IAsyncResult BeginInvoke(class AsyncCallback , object )" />
    <Method Sig="instance bool EndInvoke(class IAsyncResult )" />
  </Type>
  <Type Name="ControlCollection">
    <Method Sig="instance void .ctor(class Control )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance void Add(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(class Control )" />
    <Method Sig="instance [] class Control Find(string , bool )" />
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance int IndexOf(class Control )" />
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance class Control get_Owner()" />
    <Method Sig="instance void Remove(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveByKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class Control get_Item(int )" />
    <Method Sig="instance class Control get_Item(string )" />
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int GetChildIndex(class Control )" />
    <Method Sig="instance int GetChildIndex(class Control , bool )" />
    <Method Sig="instance void SetChildIndex(class Control , int )" />
    <Method Sig="instance void .ctor(class Form )" />
    <Method Sig="instance void Add(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void .ctor(class MdiClient )" />
    <Method Sig="instance void Add(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void .ctor(class TabControl )" />
    <Method Sig="instance void Add(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="ControlAccessibleObject">
    <Method Sig="instance void .ctor(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_DefaultAction()" />
    <Method Sig="instance string get_Description()" />
    <Method Sig="instance intptr get_Handle()" />
    <Method Sig="instance void set_Handle(intptr )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_Help()" />
    <Method Sig="instance string get_KeyboardShortcut()" />
    <Method Sig="instance string get_Name()" />
    <Method Sig="instance void set_Name(string )" />
    <Method Sig="instance class AccessibleObject get_Parent()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class Control get_Owner()" />
    <Method Sig="instance struct AccessibleRole get_Role()" />
    <Method Sig="instance int GetHelpTopic(&amp; string )" />
    <Method Sig="instance void NotifyClients(struct AccessibleEvents )" />
    <Method Sig="instance void NotifyClients(struct AccessibleEvents , int )" />
    <Method Sig="instance void NotifyClients(struct AccessibleEvents , int , int )" />
    <Method Sig="instance string ToString()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="DockPaddingEdges">
    <Method Sig="instance int get_All()" />
    <Method Sig="instance void set_All(int )" />
    <Method Sig="instance int get_Bottom()" />
    <Method Sig="instance void set_Bottom(int )" />
    <Method Sig="instance int get_Left()" />
    <Method Sig="instance void set_Left(int )" />
    <Method Sig="instance int get_Right()" />
    <Method Sig="instance void set_Right(int )" />
    <Method Sig="instance int get_Top()" />
    <Method Sig="instance void set_Top(int )" />
    <Method Sig="instance bool Equals(object )" />
    <Method Sig="instance int GetHashCode()" />
    <Method Sig="instance string ToString()" />
  </Type>
  <Type Name="DockPaddingEdgesConverter">
    <Method Sig="instance class PropertyDescriptorCollection GetProperties(class ITypeDescriptorContext , object , [] class Attribute )" />
    <Method Sig="instance bool GetPropertiesSupported(class ITypeDescriptorContext )" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="ClsidAttribute">
    <Method Sig="instance void .ctor(string )" />
    <Method Sig="instance string get_Value()" />
  </Type>
  <Type Name="TypeLibraryTimeStampAttribute">
    <Method Sig="instance void .ctor(string )" />
    <Method Sig="instance struct DateTime get_Value()" />
  </Type>
  <Type Name="ConnectionPointCookie">
    <Method Sig="instance void .ctor(object , object , class Type )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance void Disconnect()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
  </Type>
  <Type Name="InvalidActiveXStateException">
    <Method Sig="instance void .ctor(string , struct ActiveXInvokeKind )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance void .ctor()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance string ToString()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
  </Type>
  <Type Name="StateConverter">
    <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance void .ctor()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
  </Type>
  <Type Name="State">
    <Method Sig="instance void .ctor(class Stream , int , bool , string )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
  </Type>
  <Type Name="AxComponentEditor">
    <Method Sig="instance bool EditComponent(class ITypeDescriptorContext , object , class IWin32Window )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance void .ctor()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
  </Type>
  <Type Name="ToolStripAccessibleObject">
    <Method Sig="instance void .ctor(class ToolStrip )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class AccessibleObject HitTest(int , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class AccessibleObject GetChild(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int GetChildCount()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance struct AccessibleRole get_Role()" />
  </Type>
  <Type Name="ToolStripItemAccessibleObject">
    <Method Sig="instance void .ctor(class ToolStripItem )" />
    <Method Sig="instance string get_DefaultAction()" />
    <Method Sig="instance string get_Description()" />
    <Method Sig="instance string get_Help()" />
    <Method Sig="instance string get_KeyboardShortcut()" />
    <Method Sig="instance string get_Name()" />
    <Method Sig="instance void set_Name(string )" />
    <Method Sig="instance struct AccessibleRole get_Role()" />
    <Method Sig="instance struct AccessibleStates get_State()" />
    <Method Sig="instance void DoDefaultAction()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int GetHelpTopic(&amp; string )" />
    <Method Sig="instance class AccessibleObject Navigate(struct AccessibleNavigation )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddState(struct AccessibleStates )" />
    <Method Sig="instance string ToString()" />
    <Method Sig="instance struct Rectangle get_Bounds()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class AccessibleObject get_Parent()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="ButtonBaseAccessibleObject">
    <Method Sig="instance void .ctor(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void DoDefaultAction()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance struct AccessibleStates get_State()" />
  </Type>
  <Type Name="CheckBoxAccessibleObject">
    <Method Sig="instance void .ctor(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_DefaultAction()" />
    <Method Sig="instance struct AccessibleRole get_Role()" />
    <Method Sig="instance struct AccessibleStates get_State()" />
  </Type>
  <Type Name="ObjectCollection">
    <Method Sig="instance void .ctor(class ListBox )" />
    <Method Sig="instance void .ctor(class ListBox , class ObjectCollection )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void .ctor(class ListBox , [] object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance int Add(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange(class ObjectCollection )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance object get_Item(int )" />
    <Method Sig="instance void set_Item(int , object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(object )" />
    <Method Sig="instance void CopyTo([] object , int )" />
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance int IndexOf(object )" />
    <Method Sig="instance void Insert(int , object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void .ctor(class CheckedListBox )" />
    <Method Sig="instance int Add(object , bool )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int Add(object , struct CheckState )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void .ctor(class ComboBox )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance int Add(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance object get_Item(int )" />
    <Method Sig="instance void set_Item(int , object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(object )" />
    <Method Sig="instance void CopyTo([] object , int )" />
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance int IndexOf(object )" />
    <Method Sig="instance void Insert(int , object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void .ctor(class DataGridViewComboBoxCell )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance int Add(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange(class ObjectCollection )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance object get_Item(int )" />
    <Method Sig="instance void set_Item(int , object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(object )" />
    <Method Sig="instance void CopyTo([] object , int )" />
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance int IndexOf(object )" />
    <Method Sig="instance void Insert(int , object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="IntegerCollection">
    <Method Sig="instance void .ctor(class ListBox )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool Contains(int )" />
    <Method Sig="instance void Clear()" />
    <Method Sig="instance int IndexOf(int )" />
    <Method Sig="instance int Add(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange(class IntegerCollection )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(int )" />
    <Method Sig="instance void RemoveAt(int )" />
    <Method Sig="instance int get_Item(int )" />
    <Method Sig="instance void set_Item(int , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void CopyTo(class Array , int )" />
  </Type>
  <Type Name="SelectedIndexCollection">
    <Method Sig="instance void .ctor(class ListBox )" />
    <Method Sig="instance int get_Count()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance bool Contains(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int IndexOf(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int get_Item(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void CopyTo(class Array , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Add(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance void .ctor(class ListView )" />
    <Method Sig="instance int get_Count()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int get_Item(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance bool Contains(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int IndexOf(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int Add(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void CopyTo(class Array , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="SelectedObjectCollection">
    <Method Sig="instance void .ctor(class ListBox )" />
    <Method Sig="instance int get_Count()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance bool Contains(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int IndexOf(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance object get_Item(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void set_Item(int , object )" />
    <Method Sig="instance void CopyTo(class Array , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Add(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="CheckedIndexCollection">
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance int get_Item(int )" />
    <Method Sig="instance bool Contains(int )" />
    <Method Sig="instance void CopyTo(class Array , int )" />
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance int IndexOf(int )" />
    <Method Sig="instance void .ctor(class ListView )" />
    <Method Sig="instance int get_Count()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int get_Item(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance bool Contains(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int IndexOf(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="CheckedItemCollection">
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance object get_Item(int )" />
    <Method Sig="instance void set_Item(int , object )" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance bool Contains(object )" />
    <Method Sig="instance int IndexOf(object )" />
    <Method Sig="instance void CopyTo(class Array , int )" />
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ImageCollection">
    <Method Sig="instance class StringCollection get_Keys()" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance bool get_Empty()" />
    <Method Sig="instance class Image get_Item(int )" />
    <Method Sig="instance void set_Item(int , class Image )" />
    <Method Sig="instance class Image get_Item(string )" />
    <Method Sig="instance void Add(string , class Image )" />
    <Method Sig="instance void Add(string , class Icon )" />
    <Method Sig="instance void Add(class Icon )" />
    <Method Sig="instance void Add(class Image )" />
    <Method Sig="instance int Add(class Image , struct Color )" />
    <Method Sig="instance void AddRange([] class Image )" />
    <Method Sig="instance int AddStrip(class Image )" />
    <Method Sig="instance void Clear()" />
    <Method Sig="instance bool Contains(class Image )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance int IndexOf(class Image )" />
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance void Remove(class Image )" />
    <Method Sig="instance void RemoveAt(int )" />
    <Method Sig="instance void RemoveByKey(string )" />
    <Method Sig="instance void SetKeyName(int , string )" />
  </Type>
  <Type Name="ChildAccessibleObject">
    <Method Sig="instance void .ctor(class ComboBox , intptr )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_Name()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="MenuItemCollection">
    <Method Sig="instance void .ctor(class Menu )" />
    <Method Sig="instance class MenuItem get_Item(int )" />
    <Method Sig="instance class MenuItem get_Item(string )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance class MenuItem Add(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class MenuItem Add(string , class EventHandler )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class MenuItem Add(string , [] class MenuItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int Add(class MenuItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int Add(int , class MenuItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] class MenuItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(class MenuItem )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance [] class MenuItem Find(string , bool )" />
    <Method Sig="instance int IndexOf(class MenuItem )" />
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void CopyTo(class Array , int )" />
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveByKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(class MenuItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="ToolStripDropDownAccessibleObject">
    <Method Sig="instance void .ctor(class ToolStripDropDown )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_Name()" />
    <Method Sig="instance void set_Name(string )" />
    <Method Sig="instance struct AccessibleRole get_Role()" />
  </Type>
  <Type Name="Format">
    <Method Sig="instance string get_Name()" />
    <Method Sig="instance int get_Id()" />
    <Method Sig="instance void .ctor(string , int )" />
  </Type>
  <Type Name="HitTestInfo">
    <Method Sig="instance int get_Column()" />
    <Method Sig="instance int get_Row()" />
    <Method Sig="instance struct HitTestType get_Type()" />
    <Method Sig="instance bool Equals(object )" />
    <Method Sig="instance int GetHashCode()" />
    <Method Sig="instance string ToString()" />
    <Method Sig="void .cctor()" />
    <Method Sig="instance int get_ColumnIndex()" />
    <Method Sig="instance int get_RowIndex()" />
    <Method Sig="instance int get_ColumnX()" />
    <Method Sig="instance int get_RowY()" />
    <Method Sig="instance struct DataGridViewHitTestType get_Type()" />
    <Method Sig="instance bool Equals(object )" />
    <Method Sig="instance int GetHashCode()" />
    <Method Sig="instance string ToString()" />
    <Method Sig="void .cctor()" />
    <Method Sig="instance struct Point get_Point()" />
    <Method Sig="instance struct HitArea get_HitArea()" />
    <Method Sig="instance struct DateTime get_Time()" />
  </Type>
  <Type Name="DataGridViewControlCollection">
    <Method Sig="instance void .ctor(class DataGridView )" />
    <Method Sig="instance void CopyTo([] class Control , int )" />
    <Method Sig="instance void Insert(int , class Control )" />
    <Method Sig="instance void Remove(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="DateTimePickerAccessibleObject">
    <Method Sig="instance void .ctor(class DateTimePicker )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_Value()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance struct AccessibleStates get_State()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance struct AccessibleRole get_Role()" />
  </Type>
  <Type Name="DomainUpDownItemCollection">
    <Method Sig="instance object get_Item(int )" />
    <Method Sig="instance void set_Item(int , object )" />
    <Method Sig="instance int Add(object )" />
    <Method Sig="instance void Remove(object )" />
    <Method Sig="instance void RemoveAt(int )" />
    <Method Sig="instance void Insert(int , object )" />
  </Type>
  <Type Name="DomainUpDownAccessibleObject">
    <Method Sig="instance void .ctor(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance struct AccessibleRole get_Role()" />
    <Method Sig="instance class AccessibleObject GetChild(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int GetChildCount()" />
  </Type>
  <Type Name="DomainItemAccessibleObject">
    <Method Sig="instance void .ctor(string , class AccessibleObject )" />
    <Method Sig="instance string get_Name()" />
    <Method Sig="instance void set_Name(string )" />
    <Method Sig="instance class AccessibleObject get_Parent()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance struct AccessibleRole get_Role()" />
    <Method Sig="instance struct AccessibleStates get_State()" />
    <Method Sig="instance string get_Value()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="LinkAreaConverter">
    <Method Sig="instance bool CanConvertFrom(class ITypeDescriptorContext , class Type )" />
    <Method Sig="instance bool CanConvertTo(class ITypeDescriptorContext , class Type )" />
    <Method Sig="instance object ConvertFrom(class ITypeDescriptorContext , class CultureInfo , object )" />
    <Method Sig="instance object ConvertTo(class ITypeDescriptorContext , class CultureInfo , object , class Type )" />
    <Method Sig="instance object CreateInstance(class ITypeDescriptorContext , class IDictionary )" />
    <Method Sig="instance bool GetCreateInstanceSupported(class ITypeDescriptorContext )" />
    <Method Sig="instance class PropertyDescriptorCollection GetProperties(class ITypeDescriptorContext , object , [] class Attribute )" />
    <Method Sig="instance bool GetPropertiesSupported(class ITypeDescriptorContext )" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LinkCollection">
    <Method Sig="instance void .ctor(class LinkLabel )" />
    <Method Sig="instance class Link get_Item(int )" />
    <Method Sig="instance void set_Item(int , class Link )" />
    <Method Sig="instance class Link get_Item(string )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_LinksAdded()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance class Link Add(int , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class Link Add(int , int , object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int Add(class Link )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(class Link )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance int IndexOf(class Link )" />
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance void Remove(class Link )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveByKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="Link">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(int , int )" />
    <Method Sig="instance void .ctor(int , int , object )" />
    <Method Sig="instance string get_Description()" />
    <Method Sig="instance void set_Description(string )" />
    <Method Sig="instance bool get_Enabled()" />
    <Method Sig="instance void set_Enabled(bool )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int get_Length()" />
    <Method Sig="instance void set_Length(int )" />
    <Method Sig="instance object get_LinkData()" />
    <Method Sig="instance void set_LinkData(object )" />
    <Method Sig="instance string get_Name()" />
    <Method Sig="instance void set_Name(string )" />
    <Method Sig="instance int get_Start()" />
    <Method Sig="instance void set_Start(int )" />
    <Method Sig="instance object get_Tag()" />
    <Method Sig="instance void set_Tag(object )" />
    <Method Sig="instance bool get_Visited()" />
    <Method Sig="instance void set_Visited(bool )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="CheckedListViewItemCollection">
    <Method Sig="instance void .ctor(class ListView )" />
    <Method Sig="instance int get_Count()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem get_Item(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem get_Item(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance bool Contains(class ListViewItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool ContainsKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int IndexOf(class ListViewItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int IndexOfKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void CopyTo(class Array , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="SelectedListViewItemCollection">
    <Method Sig="instance void .ctor(class ListView )" />
    <Method Sig="instance int get_Count()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem get_Item(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem get_Item(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool ContainsKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(class ListViewItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void CopyTo(class Array , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int IndexOf(class ListViewItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int IndexOfKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="ColumnHeaderCollection">
    <Method Sig="instance void .ctor(class ListView )" />
    <Method Sig="instance class ColumnHeader get_Item(int )" />
    <Method Sig="instance class ColumnHeader get_Item(string )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance void RemoveByKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance class ColumnHeader Add(string , int , struct HorizontalAlignment )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int Add(class ColumnHeader )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ColumnHeader Add(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ColumnHeader Add(string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ColumnHeader Add(string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ColumnHeader Add(string , string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ColumnHeader Add(string , string , int , struct HorizontalAlignment , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ColumnHeader Add(string , string , int , struct HorizontalAlignment , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] class ColumnHeader )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(class ColumnHeader )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance int IndexOf(class ColumnHeader )" />
    <Method Sig="instance void Insert(int , class ColumnHeader )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string , int , struct HorizontalAlignment )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string , string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string , string , int , struct HorizontalAlignment , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string , string , int , struct HorizontalAlignment , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(class ColumnHeader )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()" />
  </Type>
  <Type Name="ListViewItemCollection">
    <Method Sig="instance void .ctor(class ListView )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance class ListViewItem get_Item(int )" />
    <Method Sig="instance void set_Item(int , class ListViewItem )" />
    <Method Sig="instance class ListViewItem get_Item(string )" />
    <Method Sig="instance class ListViewItem Add(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem Add(string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem Add(class ListViewItem )" />
    <Method Sig="instance class ListViewItem Add(string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem Add(string , string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem Add(string , string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] class ListViewItem )" />
    <Method Sig="instance void AddRange(class ListViewItemCollection )" />
    <Method Sig="instance void Clear()" />
    <Method Sig="instance bool Contains(class ListViewItem )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance void CopyTo(class Array , int )" />
    <Method Sig="instance [] class ListViewItem Find(string , bool )" />
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance int IndexOf(class ListViewItem )" />
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance class ListViewItem Insert(int , class ListViewItem )" />
    <Method Sig="instance class ListViewItem Insert(int , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem Insert(int , string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem Insert(int , string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem Insert(int , string , string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewItem Insert(int , string , string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(class ListViewItem )" />
    <Method Sig="instance void RemoveAt(int )" />
    <Method Sig="instance void RemoveByKey(string )" />
  </Type>
  <Type Name="ListViewSubItem">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(class ListViewItem , string )" />
    <Method Sig="instance void .ctor(class ListViewItem , string , struct Color , struct Color , class Font )" />
    <Method Sig="instance struct Color get_BackColor()" />
    <Method Sig="instance void set_BackColor(struct Color )" />
    <Method Sig="instance struct Rectangle get_Bounds()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class Font get_Font()" />
    <Method Sig="instance void set_Font(class Font )" />
    <Method Sig="instance struct Color get_ForeColor()" />
    <Method Sig="instance void set_ForeColor(struct Color )" />
    <Method Sig="instance object get_Tag()" />
    <Method Sig="instance void set_Tag(object )" />
    <Method Sig="instance string get_Text()" />
    <Method Sig="instance void set_Text(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_Name()" />
    <Method Sig="instance void set_Name(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void ResetStyle()" />
    <Method Sig="instance string ToString()" />
  </Type>
  <Type Name="ListViewSubItemCollection">
    <Method Sig="instance void .ctor(class ListViewItem )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance class ListViewSubItem get_Item(int )" />
    <Method Sig="instance void set_Item(int , class ListViewSubItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewSubItem get_Item(string )" />
    <Method Sig="instance class ListViewSubItem Add(class ListViewSubItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewSubItem Add(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ListViewSubItem Add(string , struct Color , struct Color , class Font )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] class ListViewSubItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] string , struct Color , struct Color , class Font )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(class ListViewSubItem )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance int IndexOf(class ListViewSubItem )" />
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance void Insert(int , class ListViewSubItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(class ListViewSubItem )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveByKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()" />
  </Type>
  <Type Name="OLECMD">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="FONTDESC">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="PICTDESCbmp">
    <Method Sig="instance void .ctor(class Bitmap )" />
  </Type>
  <Type Name="PICTDESCicon">
    <Method Sig="instance void .ctor(class Icon )" />
  </Type>
  <Type Name="PICTDESCemf">
    <Method Sig="instance void .ctor(class Metafile )" />
  </Type>
  <Type Name="USEROBJECTFLAGS">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="EnumChildrenCallback">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance bool Invoke(intptr , intptr )" />
    <Method Sig="instance class IAsyncResult BeginInvoke(intptr , intptr , class AsyncCallback , object )" />
    <Method Sig="instance bool EndInvoke(class IAsyncResult )" />
  </Type>
  <Type Name="HH_AKLINK">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="HH_POPUP">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="HH_FTS_QUERY">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MONITORINFOEX">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MONITORINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="EditStreamCallback">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance int Invoke(intptr , intptr , int , &amp; int )" />
    <Method Sig="instance class IAsyncResult BeginInvoke(intptr , intptr , int , &amp; int , class AsyncCallback , object )" />
    <Method Sig="instance int EndInvoke(&amp; int , class IAsyncResult )" />
  </Type>
  <Type Name="EDITSTREAM">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="EDITSTREAM64">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="INITCOMMONCONTROLSEX">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="IMAGELISTDRAWPARAMS">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="IMAGEINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="TRACKMOUSEEVENT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="POINTSTRUCT">
    <Method Sig="instance void .ctor(int , int )" />
  </Type>
  <Type Name="WndProc">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance intptr Invoke(intptr , int , intptr , intptr )" />
    <Method Sig="instance class IAsyncResult BeginInvoke(intptr , int , intptr , intptr , class AsyncCallback , object )" />
    <Method Sig="instance intptr EndInvoke(class IAsyncResult )" />
  </Type>
  <Type Name="ListViewCompareCallback">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance int Invoke(intptr , intptr , intptr )" />
    <Method Sig="instance class IAsyncResult BeginInvoke(intptr , intptr , intptr , class AsyncCallback , object )" />
    <Method Sig="instance int EndInvoke(class IAsyncResult )" />
  </Type>
  <Type Name="TreeViewCompareCallback">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance int Invoke(intptr , intptr , intptr )" />
    <Method Sig="instance class IAsyncResult BeginInvoke(intptr , intptr , intptr , class AsyncCallback , object )" />
    <Method Sig="instance int EndInvoke(class IAsyncResult )" />
  </Type>
  <Type Name="WNDCLASS_I">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NONCLIENTMETRICS">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="SCROLLINFO">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(int , int , int , int , int )" />
  </Type>
  <Type Name="TPMPARAMS">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="STARTUPINFO_I">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="PAGESETUPDLG">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="PRINTDLG">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="PRINTDLGEX">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="PRINTPAGERANGE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="PICTDESC">
    <Method Sig="class PICTDESC CreateBitmapPICTDESC(intptr , intptr )" />
    <Method Sig="class PICTDESC CreateIconPICTDESC(intptr )" />
    <Method Sig="instance intptr GetHandle()" />
    <Method Sig="instance intptr GetHPal()" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagFONTDESC">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="CHOOSECOLOR">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="HookProc">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance intptr Invoke(int , intptr , intptr )" />
    <Method Sig="instance class IAsyncResult BeginInvoke(int , intptr , intptr , class AsyncCallback , object )" />
    <Method Sig="instance intptr EndInvoke(class IAsyncResult )" />
  </Type>
  <Type Name="BITMAP">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="ICONINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LOGPEN">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NOTIFYICONDATA">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MENUITEMINFO_T">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MENUITEMINFO_T_RW">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MSAAMENUINFO">
    <Method Sig="instance void .ctor(string )" />
  </Type>
  <Type Name="EnumThreadWindowsCallback">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance bool Invoke(intptr , intptr )" />
    <Method Sig="instance class IAsyncResult BeginInvoke(intptr , intptr , class AsyncCallback , object )" />
    <Method Sig="instance bool EndInvoke(class IAsyncResult )" />
  </Type>
  <Type Name="OPENFILENAME_I">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="CHOOSEFONT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="BITMAPINFOHEADER">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="Ole">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="STATSTG">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="FILETIME">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="SYSTEMTIME">
    <Method Sig="instance string ToString()" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="_POINTL">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagSIZE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="COMRECT">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance void .ctor(struct Rectangle )" />
    <Method Sig="instance void .ctor(int , int , int , int )" />
    <Method Sig="class COMRECT FromXYWH(int , int , int , int )" />
    <Method Sig="instance string ToString()" />
  </Type>
  <Type Name="tagOleMenuGroupWidths">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MSOCRINFOSTRUCT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagPOINTF">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagOIFI">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagSIZEL">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagOLEVERB">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagLOGPALETTE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagCONTROLINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="CA_STRUCT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="VARIANT">
    <Method Sig="instance bool get_Byref()" />
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="class VARIANT FromObject(object )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void SetLong(in64 )" />
    <Method Sig="instance intptr ToCoTaskMemPtr()" />
    <Method Sig="instance object ToObject()" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagLICINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="WNDCLASS_D">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MSOCM">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="TOOLINFO_T">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="TOOLINFO_TOOLTIP">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagDVTARGETDEVICE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMTVDISPINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="POINTL">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="TCITEM_T">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagDISPPARAMS">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagEXCEPINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagFUNCDESC">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagVARDESC">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="DRAWITEMSTRUCT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MEASUREITEMSTRUCT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="HELPINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="ACCEL">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MINMAXINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagCAUUID">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="TOOLTIPTEXT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="TOOLTIPTEXTA">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="HDITEM2">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="TV_HITTESTINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMTVCUSTOMDRAW">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MCHITTESTINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMSELCHANGE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMDAYSTATE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMLVGETINFOTIP">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMLVKEYDOWN">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LVHITTESTINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LVBKIMAGE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LVCOLUMN_T">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LVITEM">
    <Method Sig="instance void Reset()" />
    <Method Sig="instance string ToString()" />
  </Type>
  <Type Name="LVCOLUMN">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LVGROUP">
    <Method Sig="instance string ToString()" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LVINSERTMARK">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="LVTILEVIEWINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMLVCACHEHINT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMLVDISPINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMLVDISPINFO_NOTEXT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMLVODSTATECHANGE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="CLIENTCREATESTRUCT">
    <Method Sig="instance void .ctor(intptr , int )" />
  </Type>
  <Type Name="NMDATETIMECHANGE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="COPYDATASTRUCT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="NMHEADER">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MOUSEHOOKSTRUCT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="CHARRANGE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="CHARFORMATW">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="CHARFORMATA">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="CHARFORMAT2A">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="TEXTRANGE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="GETTEXTLENGTHEX">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="SELCHANGE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="PARAFORMAT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="FINDTEXT">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="REPASTESPECIAL">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="ENLINK">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="OCPFIPARAMS">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="DOCHOSTUIINFO">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="ENDROPFILES">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="REQRESIZE">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="ENPROTECTED">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="ENPROTECTED64">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="ActiveX">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Util">
    <Method Sig="int MAKELONG(int , int )" />
    <Method Sig="intptr MAKELPARAM(int , int )" />
    <Method Sig="int HIWORD(int )" />
    <Method Sig="int HIWORD(intptr )" />
    <Method Sig="int LOWORD(int )" />
    <Method Sig="int LOWORD(intptr )" />
    <Method Sig="int SignedHIWORD(intptr )" />
    <Method Sig="int SignedLOWORD(intptr )" />
    <Method Sig="int SignedHIWORD(int )" />
    <Method Sig="int SignedLOWORD(int )" />
    <Method Sig="int GetPInvokeStringLength(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="tagTYPEDESC">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MonitorEnumProc">
    <Method Sig="instance void .ctor(object , intptr )" />
    <Method Sig="instance bool Invoke(intptr , intptr , intptr , intptr )" />
    <Method Sig="instance class IAsyncResult BeginInvoke(intptr , intptr , intptr , intptr , class AsyncCallback , object )" />
    <Method Sig="instance bool EndInvoke(class IAsyncResult )" />
  </Type>
  <Type Name="EVENTMSG">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagTYPEATTR">
    <Method Sig="instance class tagTYPEDESC Get_tdescAlias()" />
    <Method Sig="instance struct tagIDLDESC Get_idldescType()" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="tagELEMDESC">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="PropertyTabCollection">
    <Method Sig="instance int get_Count()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance class PropertyTab get_Item(int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance void AddTabType(class Type )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance void AddTabType(class Type , struct PropertyTabScope )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance void Clear(struct PropertyTabScope )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="instance void RemoveTabType(class Type )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
    <Method Sig="void .cctor()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
      </LinkDemand>
    </Method>
  </Type>
  <Type Name="RadioButtonAccessibleObject">
    <Method Sig="instance void .ctor(class RadioButton )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_DefaultAction()" />
    <Method Sig="instance struct AccessibleRole get_Role()" />
    <Method Sig="instance struct AccessibleStates get_State()" />
    <Method Sig="instance void DoDefaultAction()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="EnumValidator">
    <Method Sig="bool IsValidContentAlignment(struct ContentAlignment )" />
    <Method Sig="bool IsEnumWithinShiftedRange(class Enum , int , int , int )" />
    <Method Sig="bool IsValidTextImageRelation(struct TextImageRelation )" />
    <Method Sig="bool IsValidArrowDirection(struct ArrowDirection )" />
  </Type>
  <Type Name="ArraySubsetEnumerator">
    <Method Sig="instance void .ctor([] object , int )" />
    <Method Sig="instance bool MoveNext()" />
    <Method Sig="instance void Reset()" />
    <Method Sig="instance object get_Current()" />
  </Type>
  <Type Name="StatusBarPanelCollection">
    <Method Sig="instance void .ctor(class StatusBar )" />
    <Method Sig="instance class StatusBarPanel get_Item(int )" />
    <Method Sig="instance void set_Item(int , class StatusBarPanel )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class StatusBarPanel get_Item(string )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance class StatusBarPanel Add(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int Add(class StatusBarPanel )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] class StatusBarPanel )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(class StatusBarPanel )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance int IndexOf(class StatusBarPanel )" />
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance void Insert(int , class StatusBarPanel )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(class StatusBarPanel )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveByKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()" />
  </Type>
  <Type Name="Tool">
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="TabPageCollection">
    <Method Sig="instance void .ctor(class TabControl )" />
    <Method Sig="instance class TabPage get_Item(int )" />
    <Method Sig="instance void set_Item(int , class TabPage )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class TabPage get_Item(string )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance void Add(class TabPage )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Add(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Add(string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Add(string , string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Add(string , string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] class TabPage )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(class TabPage )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance int IndexOf(class TabPage )" />
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance void Insert(int , class TabPage )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string , string , int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Insert(int , string , string , string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()" />
    <Method Sig="instance void Remove(class TabPage )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveByKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="TabPageControlCollection">
    <Method Sig="instance void .ctor(class TabPage )" />
    <Method Sig="instance void Add(class Control )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="ToolBarButtonCollection">
    <Method Sig="instance void .ctor(class ToolBar )" />
    <Method Sig="instance class ToolBarButton get_Item(int )" />
    <Method Sig="instance void set_Item(int , class ToolBarButton )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class ToolBarButton get_Item(string )" />
    <Method Sig="instance int get_Count()" />
    <Method Sig="instance bool get_IsReadOnly()" />
    <Method Sig="instance int Add(class ToolBarButton )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance int Add(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void AddRange([] class ToolBarButton )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Clear()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance bool Contains(class ToolBarButton )" />
    <Method Sig="instance bool ContainsKey(string )" />
    <Method Sig="instance int IndexOf(class ToolBarButton )" />
    <Method Sig="instance int IndexOfKey(string )" />
    <Method Sig="instance void Insert(int , class ToolBarButton )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveAt(int )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void RemoveByKey(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Remove(class ToolBarButton )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class IEnumerator GetEnumerator()" />
  </Type>
  <Type Name="ToolStripPanelRowCollection">
    <Method Sig="instance void .ctor(class ToolStripPanel )" />
    <Method Sig="instance void .ctor(class ToolStripPanel , [] class ToolStripPanelRow )" />
    <Method Sig="instance class ToolStripPanelRow get_Item(int )" />
    <Method Sig="instance int Add(class ToolStripPanelRow )" />
    <Method Sig="instance void AddRange([] class ToolStripPanelRow )" />
    <Method Sig="instance void AddRange(class ToolStripPanelRowCollection )" />
    <Method Sig="instance bool Contains(class ToolStripPanelRow )" />
    <Method Sig="instance void Clear()" />
    <Method Sig="instance int IndexOf(class ToolStripPanelRow )" />
    <Method Sig="instance void Insert(int , class ToolStripPanelRow )" />
    <Method Sig="instance void Remove(class ToolStripPanelRow )" />
    <Method Sig="instance void RemoveAt(int )" />
    <Method Sig="instance void CopyTo([] class ToolStripPanelRow , int )" />
  </Type>
  <Type Name="XYComparer">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance int Compare(object , object )" />
  </Type>
  <Type Name="YXComparer">
    <Method Sig="instance void .ctor()" />
    <Method Sig="instance int Compare(object , object )" />
  </Type>
  <Type Name="ToolStripSplitButtonAccessibleObject">
    <Method Sig="instance void .ctor(class ToolStripSplitButton )" />
    <Method Sig="instance void DoDefaultAction()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="AboutBoxUITypeEditor">
    <Method Sig="instance object EditValue(class ITypeDescriptorContext , class IServiceProvider , object )" />
    <Method Sig="instance struct UITypeEditorEditStyle GetEditStyle(class ITypeDescriptorContext )" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="StructCache">
    <Method Sig="instance object GetStruct(class Type )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void ReleaseStruct(object )" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="MeasureTextCache">
    <Method Sig="instance void InvalidateCache()" />
    <Method Sig="instance struct Size GetTextSize(string , class Font , struct Size , struct TextFormatFlags )" />
    <Method Sig="instance bool TextRequiresWordBreak(string , class Font , struct Size , struct TextFormatFlags )" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="GridEntryAccessibleObject">
    <Method Sig="instance void .ctor(class GridEntry )" />
    <Method Sig="instance struct Rectangle get_Bounds()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_DefaultAction()" />
    <Method Sig="instance string get_Description()" />
    <Method Sig="instance void DoDefaultAction()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_Name()" />
    <Method Sig="instance class AccessibleObject get_Parent()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance struct AccessibleRole get_Role()" />
    <Method Sig="instance struct AccessibleStates get_State()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance string get_Value()">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void set_Value(string )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance class AccessibleObject GetFocused()" />
    <Method Sig="instance class AccessibleObject Navigate(struct AccessibleNavigation )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission Window="AllWindows" Clipboard="OwnClipboard" version="1" class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
    <Method Sig="instance void Select(struct AccessibleSelection )">
      <Demand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
          <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
        </PermissionSet>
      </Demand>
    </Method>
  </Type>
  <Type Name="DisplayNameSortComparer">
    <Method Sig="instance int Compare(object , object )" />
    <Method Sig="instance void .ctor()" />
  </Type>
  <Type Name="Button">
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="class VisualStyleElement get_Checked()" />
    <Method Sig="class VisualStyleElement get_HotChecked()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="PushButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="class VisualStyleElement get_Default()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="RadioButton">
    <Method Sig="class VisualStyleElement get_UncheckedNormal()" />
    <Method Sig="class VisualStyleElement get_UncheckedHot()" />
    <Method Sig="class VisualStyleElement get_UncheckedPressed()" />
    <Method Sig="class VisualStyleElement get_UncheckedDisabled()" />
    <Method Sig="class VisualStyleElement get_CheckedNormal()" />
    <Method Sig="class VisualStyleElement get_CheckedHot()" />
    <Method Sig="class VisualStyleElement get_CheckedPressed()" />
    <Method Sig="class VisualStyleElement get_CheckedDisabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="CheckBox">
    <Method Sig="class VisualStyleElement get_UncheckedNormal()" />
    <Method Sig="class VisualStyleElement get_UncheckedHot()" />
    <Method Sig="class VisualStyleElement get_UncheckedPressed()" />
    <Method Sig="class VisualStyleElement get_UncheckedDisabled()" />
    <Method Sig="class VisualStyleElement get_CheckedNormal()" />
    <Method Sig="class VisualStyleElement get_CheckedHot()" />
    <Method Sig="class VisualStyleElement get_CheckedPressed()" />
    <Method Sig="class VisualStyleElement get_CheckedDisabled()" />
    <Method Sig="class VisualStyleElement get_MixedNormal()" />
    <Method Sig="class VisualStyleElement get_MixedHot()" />
    <Method Sig="class VisualStyleElement get_MixedPressed()" />
    <Method Sig="class VisualStyleElement get_MixedDisabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="GroupBox">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="UserButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ComboBox">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="DropDownButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="class VisualStyleElement get_Checked()" />
    <Method Sig="class VisualStyleElement get_HotChecked()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Page">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Up">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Down">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="UpHorizontal">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="DownHorizontal">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Spin">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ScrollBar">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ArrowButton">
    <Method Sig="class VisualStyleElement get_UpNormal()" />
    <Method Sig="class VisualStyleElement get_UpHot()" />
    <Method Sig="class VisualStyleElement get_UpPressed()" />
    <Method Sig="class VisualStyleElement get_UpDisabled()" />
    <Method Sig="class VisualStyleElement get_DownNormal()" />
    <Method Sig="class VisualStyleElement get_DownHot()" />
    <Method Sig="class VisualStyleElement get_DownPressed()" />
    <Method Sig="class VisualStyleElement get_DownDisabled()" />
    <Method Sig="class VisualStyleElement get_LeftNormal()" />
    <Method Sig="class VisualStyleElement get_LeftHot()" />
    <Method Sig="class VisualStyleElement get_LeftPressed()" />
    <Method Sig="class VisualStyleElement get_LeftDisabled()" />
    <Method Sig="class VisualStyleElement get_RightNormal()" />
    <Method Sig="class VisualStyleElement get_RightHot()" />
    <Method Sig="class VisualStyleElement get_RightPressed()" />
    <Method Sig="class VisualStyleElement get_RightDisabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ThumbButtonHorizontal">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ThumbButtonVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="RightTrackHorizontal">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="LeftTrackHorizontal">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="LowerTrackVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="UpperTrackVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="GripperHorizontal">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="GripperVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SizeBox">
    <Method Sig="class VisualStyleElement get_RightAlign()" />
    <Method Sig="class VisualStyleElement get_LeftAlign()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Tab">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TabItem">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TabItemLeftEdge">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TabItemRightEdge">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TabItemBothEdges">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TopTabItem">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TopTabItemLeftEdge">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TopTabItemRightEdge">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TopTabItemBothEdges">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Pane">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Body">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ExplorerBar">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="HeaderBackground">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="HeaderClose">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="HeaderPin">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_SelectedNormal()" />
    <Method Sig="class VisualStyleElement get_SelectedHot()" />
    <Method Sig="class VisualStyleElement get_SelectedPressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="IEBarMenu">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="NormalGroupBackground">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="NormalGroupCollapse">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="NormalGroupExpand">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="NormalGroupHead">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SpecialGroupBackground">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SpecialGroupCollapse">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SpecialGroupExpand">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SpecialGroupHead">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Header">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Item">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Selected()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="class VisualStyleElement get_SelectedNotFocus()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Selected()" />
    <Method Sig="class VisualStyleElement get_Demoted()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Selected()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="class VisualStyleElement get_SelectedNotFocus()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ItemLeft">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ItemRight">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SortArrow">
    <Method Sig="class VisualStyleElement get_SortedUp()" />
    <Method Sig="class VisualStyleElement get_SortedDown()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ListView">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Group">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Detail">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SortedDetail">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="EmptyText">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MenuBand">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="NewApplicationButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="class VisualStyleElement get_Checked()" />
    <Method Sig="class VisualStyleElement get_HotChecked()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Separator">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Menu">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="DropDown">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="BarItem">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="BarDropDown">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Chevron">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ProgressBar">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Bar">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
  </Type>
  <Type Name="BarVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Chunk">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ChunkVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Rebar">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Gripper">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Band">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ChevronVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="StartPanel">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="UserPane">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MorePrograms">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MoreProgramsArrow">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ProgList">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ProgListSeparator">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="PlaceList">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="PlaceListSeparator">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="LogOff">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="LogOffButtons">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="UserPicture">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Preview">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Status">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="GripperPane">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TaskBand">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="GroupCount">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="FlashButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="FlashButtonGroupMenu">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TaskbarClock">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Time">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Taskbar">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="BackgroundBottom">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="BackgroundRight">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="BackgroundTop">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="BackgroundLeft">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SizingBarBottom">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SizingBarRight">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SizingBarTop">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SizingBarLeft">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ToolBar">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SplitButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="class VisualStyleElement get_Checked()" />
    <Method Sig="class VisualStyleElement get_HotChecked()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SplitButtonDropDown">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="class VisualStyleElement get_Checked()" />
    <Method Sig="class VisualStyleElement get_HotChecked()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SeparatorHorizontal">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SeparatorVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ToolTip">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Standard">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Link()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="StandardTitle">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Balloon">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Link()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="BalloonTitle">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Close">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TrackBar">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Track">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TrackVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Thumb">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Focused()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ThumbBottom">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Focused()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ThumbTop">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Focused()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ThumbVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Focused()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ThumbLeft">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Focused()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="ThumbRight">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Focused()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Ticks">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TicksVertical">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TreeView">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Glyph">
    <Method Sig="class VisualStyleElement get_Closed()" />
    <Method Sig="class VisualStyleElement get_Opened()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Branch">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TextBox">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TextEdit">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Selected()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="class VisualStyleElement get_Focused()" />
    <Method Sig="class VisualStyleElement get_ReadOnly()" />
    <Method Sig="class VisualStyleElement get_Assist()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Caret">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="TrayNotify">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Background">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="AnimateBackground">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Window">
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Caption">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallCaption">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MinCaption">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallMinCaption">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MaxCaption">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallMaxCaption">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="FrameLeft">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="FrameRight">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="FrameBottom">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallFrameLeft">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallFrameRight">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallFrameBottom">
    <Method Sig="class VisualStyleElement get_Active()" />
    <Method Sig="class VisualStyleElement get_Inactive()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SysButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MdiSysButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MinButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MdiMinButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MaxButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="CloseButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallCloseButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MdiCloseButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="RestoreButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MdiRestoreButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="HelpButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="MdiHelpButton">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="HorizontalScroll">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="HorizontalThumb">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="VerticalScroll">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="VerticalThumb">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="class VisualStyleElement get_Hot()" />
    <Method Sig="class VisualStyleElement get_Pressed()" />
    <Method Sig="class VisualStyleElement get_Disabled()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="Dialog">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="CaptionSizingTemplate">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallCaptionSizingTemplate">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="FrameLeftSizingTemplate">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallFrameLeftSizingTemplate">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="FrameRightSizingTemplate">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallFrameRightSizingTemplate">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="FrameBottomSizingTemplate">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
  <Type Name="SmallFrameBottomSizingTemplate">
    <Method Sig="class VisualStyleElement get_Normal()" />
    <Method Sig="void .cctor()" />
  </Type>
</Assembly>
