<?xml version="1.0"?>
<Assembly>
  <Type Name="&lt;Module&gt;">
    <Method Sig="void .cctor()" />
    <Method Sig="MOD_OPT CallConvStdcall * void SqlDependencyProcessDispatcherStorage.NativeGetData(MOD_OPT IsImplicitlyDereferenced * int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall bool SqlDependencyProcessDispatcherStorage.NativeSetData(* void , int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall * struct IUnknown SqlDependencyProcessDispatcherStorage.NativeGetDefaultAppDomain()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall int SNIServerEnumRead(* void , * ushort , int , * int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall * void SNIServerEnumOpen(* ushort , int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvCdecl * void new(uint )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="vararg MOD_OPT CallConvCdecl int _bidTraceA(uint , uint , * MOD_OPT IsConst MOD_OPT IsSignUnspecifiedByte sbyte )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall int CloseHandle(* void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIInitialize(* void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIWriteSync(* struct SNI_Conn , * struct SNI_Packet , * struct SNI_ProvInfo )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIRemoveProvider(* struct SNI_Conn , struct ProviderNum )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNISecGenClientContext(* struct SNI_Conn , * byte , MOD_OPT IsLong uint , * byte , * MOD_OPT IsLong uint , * int , * MOD_OPT IsSignUnspecifiedByte sbyte , MOD_OPT IsLong uint , * MOD_OPT IsConst ushort , * MOD_OPT IsConst ushort )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall void SNIGetLastError(* struct SNI_ERROR )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIOpen(* struct SNI_CONSUMER_INFO , * MOD_OPT IsSignUnspecifiedByte sbyte , * void , * * struct SNI_Conn , int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIAddProvider(* struct SNI_Conn , struct ProviderNum , * void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall void SNISetLastError(struct ProviderNum , MOD_OPT IsLong uint , MOD_OPT IsLong uint , * ushort , * ushort , MOD_OPT IsLong uint )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvCdecl void delete(* void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIReadAsync(* struct SNI_Conn , * * struct SNI_Packet , * void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvThiscall MOD_OPT IsLong int SNI_Conn.AddRef(MOD_OPT IsConst MOD_OPT IsConst * struct SNI_Conn , struct SNI_REF )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvThiscall MOD_OPT IsLong int SNI_Conn.Release(MOD_OPT IsConst MOD_OPT IsConst * struct SNI_Conn , struct SNI_REF )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIReadSync(* struct SNI_Conn , * * struct SNI_Packet , int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall * void LFStackPop(* struct tagLFSTACK )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall int LFStackPush(* struct tagLFSTACK , * void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall * void CreateEventA(* struct _SECURITY_ATTRIBUTES , int , int , * MOD_OPT IsConst MOD_OPT IsSignUnspecifiedByte sbyte )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNISetInfo(* struct SNI_Conn , uint , * void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIOpenEx(* struct SNI_CONSUMER_INFO , * MOD_OPT IsConst ushort , * * struct SNI_Conn , int , MOD_OPT IsLong uint , * byte , MOD_OPT IsConst MOD_OPT IsConst * byte , int , int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIWriteAsync(* struct SNI_Conn , * struct SNI_Packet , * struct SNI_ProvInfo )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNITerminate()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall void SNIQueryInfo(uint , * void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong int InterlockedDecrement(* MOD_REQD IsVolatile MOD_OPT IsLong int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNIClose(* struct SNI_Conn )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall int LFStackDestroy(* struct tagLFSTACK )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong uint SNISecInitPackage(* MOD_OPT IsLong uint )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall void SNIServerEnumClose(* void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvCdecl * void __InlineInterlockedCompareExchangePointer(* MOD_REQD IsVolatile MOD_REQD IsVolatile * void , * void , * void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvCdecl * void _getFiberPtrId()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvCdecl void _amsg_exit(int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong int InterlockedExchange(* MOD_REQD IsVolatile MOD_OPT IsLong int , MOD_OPT IsLong int )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall void Sleep(MOD_OPT IsLong uint )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong int CorBindToRuntimeEx(* MOD_OPT IsConst char , * MOD_OPT IsConst char , MOD_OPT IsLong uint , MOD_OPT IsImplicitlyDereferenced * MOD_OPT IsConst struct _GUID , MOD_OPT IsImplicitlyDereferenced * MOD_OPT IsConst struct _GUID , * * void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvCdecl void _cexit()">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvStdcall MOD_OPT IsLong int CoCreateInstance(MOD_OPT IsImplicitlyDereferenced * MOD_OPT IsConst struct _GUID , * struct IUnknown , MOD_OPT IsLong uint , MOD_OPT IsImplicitlyDereferenced * MOD_OPT IsConst struct _GUID , * * void )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
    <Method Sig="MOD_OPT CallConvCdecl int __FrameUnwindFilter(* struct _EXCEPTION_POINTERS )">
      <LinkDemand>
        <PermissionSet version="1" class="System.Security.PermissionSet">
          <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode" />
        </PermissionSet>
      </LinkDemand>
    </Method>
  </Type>
  <Namespace Name="Microsoft">
    <Namespace Name="SqlServer">
      <Namespace Name="Server">
        <Type Name="SqlContext">
          <Method Sig="bool get_IsAvailable()" />
          <Method Sig="class SqlPipe get_Pipe()" />
          <Method Sig="class SqlTriggerContext get_TriggerContext()" />
          <Method Sig="class WindowsIdentity get_WindowsIdentity()" />
        </Type>
        <Type Name="SqlDataRecord">
          <Method Sig="instance int get_FieldCount()" />
          <Method Sig="instance string GetName(int )" />
          <Method Sig="instance string GetDataTypeName(int )" />
          <Method Sig="instance class Type GetFieldType(int )" />
          <Method Sig="instance object GetValue(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetValues([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetOrdinal(string )" />
          <Method Sig="instance object get_Item(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Item(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool GetBoolean(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance byte GetByte(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance in64 GetBytes(int , in64 , [] byte , int , int )" />
          <Method Sig="instance char GetChar(int )" />
          <Method Sig="instance in64 GetChars(int , in64 , [] char , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Guid GetGuid(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance short GetInt16(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetInt32(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance in64 GetInt64(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance float GetFloat(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance double GetDouble(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string GetString(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Decimal GetDecimal(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DateTime GetDateTime(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool IsDBNull(int )" />
          <Method Sig="instance class SqlMetaData GetSqlMetaData(int )" />
          <Method Sig="instance class Type GetSqlFieldType(int )" />
          <Method Sig="instance object GetSqlValue(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetSqlValues([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlBinary GetSqlBinary(int )" />
          <Method Sig="instance class SqlBytes GetSqlBytes(int )" />
          <Method Sig="instance class SqlXml GetSqlXml(int )" />
          <Method Sig="instance struct SqlBoolean GetSqlBoolean(int )" />
          <Method Sig="instance struct SqlByte GetSqlByte(int )" />
          <Method Sig="instance class SqlChars GetSqlChars(int )" />
          <Method Sig="instance struct SqlInt16 GetSqlInt16(int )" />
          <Method Sig="instance struct SqlInt32 GetSqlInt32(int )" />
          <Method Sig="instance struct SqlInt64 GetSqlInt64(int )" />
          <Method Sig="instance struct SqlSingle GetSqlSingle(int )" />
          <Method Sig="instance struct SqlDouble GetSqlDouble(int )" />
          <Method Sig="instance struct SqlMoney GetSqlMoney(int )" />
          <Method Sig="instance struct SqlDateTime GetSqlDateTime(int )" />
          <Method Sig="instance struct SqlDecimal GetSqlDecimal(int )" />
          <Method Sig="instance struct SqlString GetSqlString(int )" />
          <Method Sig="instance struct SqlGuid GetSqlGuid(int )" />
          <Method Sig="instance int SetValues([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetValue(int , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetBoolean(int , bool )" />
          <Method Sig="instance void SetByte(int , byte )" />
          <Method Sig="instance void SetBytes(int , in64 , [] byte , int , int )" />
          <Method Sig="instance void SetChar(int , char )" />
          <Method Sig="instance void SetChars(int , in64 , [] char , int , int )" />
          <Method Sig="instance void SetInt16(int , short )" />
          <Method Sig="instance void SetInt32(int , int )" />
          <Method Sig="instance void SetInt64(int , in64 )" />
          <Method Sig="instance void SetFloat(int , float )" />
          <Method Sig="instance void SetDouble(int , double )" />
          <Method Sig="instance void SetString(int , string )" />
          <Method Sig="instance void SetDecimal(int , struct Decimal )" />
          <Method Sig="instance void SetDateTime(int , struct DateTime )" />
          <Method Sig="instance void SetGuid(int , struct Guid )" />
          <Method Sig="instance void SetSqlBoolean(int , struct SqlBoolean )" />
          <Method Sig="instance void SetSqlByte(int , struct SqlByte )" />
          <Method Sig="instance void SetSqlInt16(int , struct SqlInt16 )" />
          <Method Sig="instance void SetSqlInt32(int , struct SqlInt32 )" />
          <Method Sig="instance void SetSqlInt64(int , struct SqlInt64 )" />
          <Method Sig="instance void SetSqlSingle(int , struct SqlSingle )" />
          <Method Sig="instance void SetSqlDouble(int , struct SqlDouble )" />
          <Method Sig="instance void SetSqlMoney(int , struct SqlMoney )" />
          <Method Sig="instance void SetSqlDateTime(int , struct SqlDateTime )" />
          <Method Sig="instance void SetSqlXml(int , class SqlXml )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetSqlDecimal(int , struct SqlDecimal )" />
          <Method Sig="instance void SetSqlString(int , struct SqlString )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void SetSqlBinary(int , struct SqlBinary )" />
          <Method Sig="instance void SetSqlGuid(int , struct SqlGuid )" />
          <Method Sig="instance void SetSqlChars(int , class SqlChars )" />
          <Method Sig="instance void SetSqlBytes(int , class SqlBytes )" />
          <Method Sig="instance void .ctor([] class SqlMetaData )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="SqlPipe">
          <Method Sig="instance void ExecuteAndSend(class SqlCommand )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Diagnostics.EventLogPermission, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Send(string )" />
          <Method Sig="instance void Send(class SqlDataReader )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Send(class SqlDataRecord )" />
          <Method Sig="instance void SendResultsStart(class SqlDataRecord )" />
          <Method Sig="instance void SendResultsRow(class SqlDataRecord )" />
          <Method Sig="instance void SendResultsEnd()" />
          <Method Sig="instance bool get_IsSendingResults()" />
        </Type>
        <Type Name="SqlTriggerContext">
          <Method Sig="instance int get_ColumnCount()" />
          <Method Sig="instance class SqlXml get_EventData()" />
          <Method Sig="instance struct TriggerAction get_TriggerAction()" />
          <Method Sig="instance bool IsUpdatedColumn(int )" />
        </Type>
        <Type Name="InvalidUdtException">
          <Method Sig="instance void GetObjectData(class SerializationInfo , struct StreamingContext )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="SerializationFormatter" />
              </PermissionSet>
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="SqlFacetAttribute">
          <Method Sig="instance bool get_IsFixedLength()" />
          <Method Sig="instance void set_IsFixedLength(bool )" />
          <Method Sig="instance int get_MaxSize()" />
          <Method Sig="instance void set_MaxSize(int )" />
          <Method Sig="instance int get_Precision()" />
          <Method Sig="instance void set_Precision(int )" />
          <Method Sig="instance int get_Scale()" />
          <Method Sig="instance void set_Scale(int )" />
          <Method Sig="instance bool get_IsNullable()" />
          <Method Sig="instance void set_IsNullable(bool )" />
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="SqlFunctionAttribute">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_IsDeterministic()" />
          <Method Sig="instance void set_IsDeterministic(bool )" />
          <Method Sig="instance struct DataAccessKind get_DataAccess()" />
          <Method Sig="instance void set_DataAccess(struct DataAccessKind )" />
          <Method Sig="instance struct SystemDataAccessKind get_SystemDataAccess()" />
          <Method Sig="instance void set_SystemDataAccess(struct SystemDataAccessKind )" />
          <Method Sig="instance bool get_IsPrecise()" />
          <Method Sig="instance void set_IsPrecise(bool )" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance string get_TableDefinition()" />
          <Method Sig="instance void set_TableDefinition(string )" />
          <Method Sig="instance string get_FillRowMethodName()" />
          <Method Sig="instance void set_FillRowMethodName(string )" />
        </Type>
        <Type Name="SqlMetaData">
          <Method Sig="instance void .ctor(string , struct SqlDbType )" />
          <Method Sig="instance void .ctor(string , struct SqlDbType , in64 )" />
          <Method Sig="instance void .ctor(string , struct SqlDbType , class Type )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , struct SqlDbType , byte , byte )" />
          <Method Sig="instance void .ctor(string , struct SqlDbType , in64 , in64 , struct SqlCompareOptions )" />
          <Method Sig="instance void .ctor(string , struct SqlDbType , in64 , byte , byte , in64 , struct SqlCompareOptions , class Type )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , struct SqlDbType , string , string , string )" />
          <Method Sig="instance struct SqlCompareOptions get_CompareOptions()" />
          <Method Sig="instance struct DbType get_DbType()" />
          <Method Sig="instance in64 get_LocaleId()" />
          <Method Sig="in64 get_Max()" />
          <Method Sig="instance in64 get_MaxLength()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance byte get_Precision()" />
          <Method Sig="instance byte get_Scale()" />
          <Method Sig="instance struct SqlDbType get_SqlDbType()" />
          <Method Sig="instance class Type get_Type()" />
          <Method Sig="instance string get_TypeName()" />
          <Method Sig="instance string get_XmlSchemaCollectionDatabase()" />
          <Method Sig="instance string get_XmlSchemaCollectionName()" />
          <Method Sig="instance string get_XmlSchemaCollectionOwningSchema()" />
          <Method Sig="instance short Adjust(short )" />
          <Method Sig="instance int Adjust(int )" />
          <Method Sig="instance in64 Adjust(in64 )" />
          <Method Sig="instance float Adjust(float )" />
          <Method Sig="instance double Adjust(double )" />
          <Method Sig="instance string Adjust(string )" />
          <Method Sig="instance struct Decimal Adjust(struct Decimal )" />
          <Method Sig="instance struct DateTime Adjust(struct DateTime )" />
          <Method Sig="instance struct Guid Adjust(struct Guid )" />
          <Method Sig="instance struct SqlBoolean Adjust(struct SqlBoolean )" />
          <Method Sig="instance struct SqlByte Adjust(struct SqlByte )" />
          <Method Sig="instance struct SqlInt16 Adjust(struct SqlInt16 )" />
          <Method Sig="instance struct SqlInt32 Adjust(struct SqlInt32 )" />
          <Method Sig="instance struct SqlInt64 Adjust(struct SqlInt64 )" />
          <Method Sig="instance struct SqlSingle Adjust(struct SqlSingle )" />
          <Method Sig="instance struct SqlDouble Adjust(struct SqlDouble )" />
          <Method Sig="instance struct SqlMoney Adjust(struct SqlMoney )" />
          <Method Sig="instance struct SqlDateTime Adjust(struct SqlDateTime )" />
          <Method Sig="instance struct SqlDecimal Adjust(struct SqlDecimal )" />
          <Method Sig="instance struct SqlString Adjust(struct SqlString )" />
          <Method Sig="instance struct SqlBinary Adjust(struct SqlBinary )" />
          <Method Sig="instance struct SqlGuid Adjust(struct SqlGuid )" />
          <Method Sig="instance class SqlChars Adjust(class SqlChars )" />
          <Method Sig="instance class SqlBytes Adjust(class SqlBytes )" />
          <Method Sig="instance class SqlXml Adjust(class SqlXml )" />
          <Method Sig="instance object Adjust(object )" />
          <Method Sig="class SqlMetaData InferFromValue(object , string )" />
          <Method Sig="instance bool Adjust(bool )" />
          <Method Sig="instance byte Adjust(byte )" />
          <Method Sig="instance [] byte Adjust([] byte )" />
          <Method Sig="instance char Adjust(char )" />
          <Method Sig="instance [] char Adjust([] char )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlMethodAttribute">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance bool get_OnNullCall()" />
          <Method Sig="instance void set_OnNullCall(bool )" />
          <Method Sig="instance bool get_IsMutator()" />
          <Method Sig="instance void set_IsMutator(bool )" />
          <Method Sig="instance bool get_InvokeIfReceiverIsNull()" />
          <Method Sig="instance void set_InvokeIfReceiverIsNull(bool )" />
        </Type>
        <Type Name="SqlProcedureAttribute">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
        </Type>
        <Type Name="SqlTriggerAttribute">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
          <Method Sig="instance string get_Target()" />
          <Method Sig="instance void set_Target(string )" />
          <Method Sig="instance string get_Event()" />
          <Method Sig="instance void set_Event(string )" />
        </Type>
        <Type Name="SqlUserDefinedAggregateAttribute">
          <Method Sig="instance void .ctor(struct Format )" />
          <Method Sig="instance int get_MaxByteSize()" />
          <Method Sig="instance void set_MaxByteSize(int )" />
          <Method Sig="instance bool get_IsInvariantToDuplicates()" />
          <Method Sig="instance void set_IsInvariantToDuplicates(bool )" />
          <Method Sig="instance bool get_IsInvariantToNulls()" />
          <Method Sig="instance void set_IsInvariantToNulls(bool )" />
          <Method Sig="instance bool get_IsInvariantToOrder()" />
          <Method Sig="instance void set_IsInvariantToOrder(bool )" />
          <Method Sig="instance bool get_IsNullIfEmpty()" />
          <Method Sig="instance void set_IsNullIfEmpty(bool )" />
          <Method Sig="instance struct Format get_Format()" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
        </Type>
        <Type Name="SqlUserDefinedTypeAttribute">
          <Method Sig="instance void .ctor(struct Format )" />
          <Method Sig="instance int get_MaxByteSize()" />
          <Method Sig="instance void set_MaxByteSize(int )" />
          <Method Sig="instance bool get_IsFixedLength()" />
          <Method Sig="instance void set_IsFixedLength(bool )" />
          <Method Sig="instance bool get_IsByteOrdered()" />
          <Method Sig="instance void set_IsByteOrdered(bool )" />
          <Method Sig="instance struct Format get_Format()" />
          <Method Sig="instance string get_ValidationMethodName()" />
          <Method Sig="instance void set_ValidationMethodName(string )" />
          <Method Sig="instance string get_Name()" />
          <Method Sig="instance void set_Name(string )" />
        </Type>
      </Namespace>
    </Namespace>
  </Namespace>
  <Namespace Name="System">
    <Namespace Name="Data">
      <Type Name="InternalDataCollectionBase">
        <Method Sig="instance int get_Count()" />
        <Method Sig="instance void CopyTo(class Array , int )" />
        <Method Sig="instance class IEnumerator GetEnumerator()" />
        <Method Sig="instance bool get_IsReadOnly()" />
        <Method Sig="instance bool get_IsSynchronized()" />
        <Method Sig="instance object get_SyncRoot()" />
        <Method Sig="instance void .ctor()" />
        <Method Sig="void .cctor()" />
      </Type>
      <Type Name="Constraint">
        <Method Sig="instance string get_ConstraintName()" />
        <Method Sig="instance void set_ConstraintName(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable get_Table()" />
        <Method Sig="instance class PropertyCollection get_ExtendedProperties()" />
        <Method Sig="instance string ToString()" />
      </Type>
      <Type Name="ConstraintCollection">
        <Method Sig="instance class Constraint get_Item(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class Constraint get_Item(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Add(class Constraint )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class Constraint Add(string , [] class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class Constraint Add(string , class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class Constraint Add(string , class DataColumn , class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class Constraint Add(string , [] class DataColumn , [] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void AddRange([] class Constraint )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
        <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
        <Method Sig="instance bool CanRemove(class Constraint )" />
        <Method Sig="instance void Clear()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool Contains(string )" />
        <Method Sig="instance void CopyTo([] class Constraint , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int IndexOf(class Constraint )" />
        <Method Sig="instance int IndexOf(string )" />
        <Method Sig="instance void Remove(class Constraint )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void RemoveAt(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Remove(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
      </Type>
      <Type Name="DataColumn">
        <Method Sig="instance void .ctor()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , class Type )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , class Type , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , class Type , string , struct MappingType )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_AllowDBNull()" />
        <Method Sig="instance void set_AllowDBNull(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_AutoIncrement()" />
        <Method Sig="instance void set_AutoIncrement(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance in64 get_AutoIncrementSeed()" />
        <Method Sig="instance void set_AutoIncrementSeed(in64 )" />
        <Method Sig="instance in64 get_AutoIncrementStep()" />
        <Method Sig="instance void set_AutoIncrementStep(in64 )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_Caption()" />
        <Method Sig="instance void set_Caption(string )" />
        <Method Sig="instance string get_ColumnName()" />
        <Method Sig="instance void set_ColumnName(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_Prefix()" />
        <Method Sig="instance void set_Prefix(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class Type get_DataType()" />
        <Method Sig="instance void set_DataType(class Type )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct DataSetDateTime get_DateTimeMode()" />
        <Method Sig="instance void set_DateTimeMode(struct DataSetDateTime )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object get_DefaultValue()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_DefaultValue(object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_Expression()" />
        <Method Sig="instance void set_Expression(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class PropertyCollection get_ExtendedProperties()" />
        <Method Sig="instance int get_MaxLength()" />
        <Method Sig="instance void set_MaxLength(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_Namespace()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Namespace(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int get_Ordinal()" />
        <Method Sig="instance void SetOrdinal(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_ReadOnly()" />
        <Method Sig="instance void set_ReadOnly(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable get_Table()" />
        <Method Sig="instance bool get_Unique()" />
        <Method Sig="instance void set_Unique(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct MappingType get_ColumnMapping()" />
        <Method Sig="instance void set_ColumnMapping(struct MappingType )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string ToString()" />
      </Type>
      <Type Name="DataColumnChangeEventArgs">
        <Method Sig="instance void .ctor(class DataRow , class DataColumn , object )" />
        <Method Sig="instance class DataColumn get_Column()" />
        <Method Sig="instance class DataRow get_Row()" />
        <Method Sig="instance object get_ProposedValue()" />
        <Method Sig="instance void set_ProposedValue(object )" />
      </Type>
      <Type Name="DataColumnChangeEventHandler">
        <Method Sig="instance void .ctor(object , intptr )" />
        <Method Sig="instance void Invoke(object , class DataColumnChangeEventArgs )" />
        <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataColumnChangeEventArgs , class AsyncCallback , object )" />
        <Method Sig="instance void EndInvoke(class IAsyncResult )" />
      </Type>
      <Type Name="DataColumnCollection">
        <Method Sig="instance class DataColumn get_Item(int )" />
        <Method Sig="instance class DataColumn get_Item(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Add(class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void AddRange([] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataColumn Add(string , class Type , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataColumn Add(string , class Type )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataColumn Add(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataColumn Add()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
        <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
        <Method Sig="instance bool CanRemove(class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Clear()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool Contains(string )" />
        <Method Sig="instance void CopyTo([] class DataColumn , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int IndexOf(class DataColumn )" />
        <Method Sig="instance int IndexOf(string )" />
        <Method Sig="instance void Remove(class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void RemoveAt(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Remove(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
      </Type>
      <Type Name="DataException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="ConstraintException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="DeletedRowInaccessibleException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="DuplicateNameException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="InRowChangingEventException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="InvalidConstraintException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="MissingPrimaryKeyException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="NoNullAllowedException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="ReadOnlyException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="RowNotInTableException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="VersionNotFoundException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="DataRelation">
        <Method Sig="instance void .ctor(string , class DataColumn , class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , class DataColumn , class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , [] class DataColumn , [] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , [] class DataColumn , [] class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , string , string , [] string , [] string , bool )" />
        <Method Sig="instance void .ctor(string , string , string , string , string , [] string , [] string , bool )" />
        <Method Sig="instance [] class DataColumn get_ChildColumns()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable get_ChildTable()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataSet get_DataSet()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataColumn get_ParentColumns()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable get_ParentTable()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_RelationName()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_RelationName(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_Nested()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Nested(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class UniqueConstraint get_ParentKeyConstraint()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class ForeignKeyConstraint get_ChildKeyConstraint()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class PropertyCollection get_ExtendedProperties()" />
        <Method Sig="instance string ToString()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
      </Type>
      <Type Name="DataRelationCollection">
        <Method Sig="instance class DataRelation get_Item(int )" />
        <Method Sig="instance class DataRelation get_Item(string )" />
        <Method Sig="instance void Add(class DataRelation )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void AddRange([] class DataRelation )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRelation Add(string , [] class DataColumn , [] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRelation Add(string , [] class DataColumn , [] class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRelation Add([] class DataColumn , [] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRelation Add(string , class DataColumn , class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRelation Add(string , class DataColumn , class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRelation Add(class DataColumn , class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
        <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
        <Method Sig="instance void Clear()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool Contains(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void CopyTo([] class DataRelation , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int IndexOf(class DataRelation )" />
        <Method Sig="instance int IndexOf(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool CanRemove(class DataRelation )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Remove(class DataRelation )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void RemoveAt(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Remove(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
      </Type>
      <Type Name="DataRow">
        <Method Sig="instance string get_RowError()" />
        <Method Sig="instance void set_RowError(string )" />
        <Method Sig="instance struct DataRowState get_RowState()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable get_Table()" />
        <Method Sig="instance object get_Item(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Item(int , object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object get_Item(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Item(string , object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object get_Item(class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Item(class DataColumn , object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object get_Item(int , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object get_Item(string , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object get_Item(class DataColumn , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] object get_ItemArray()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_ItemArray([] object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void AcceptChanges()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void BeginEdit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void CancelEdit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Delete()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void EndEdit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void SetColumnError(int , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void SetColumnError(string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void SetColumnError(class DataColumn , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string GetColumnError(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string GetColumnError(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string GetColumnError(class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void ClearErrors()" />
        <Method Sig="instance bool get_HasErrors()" />
        <Method Sig="instance [] class DataColumn GetColumnsInError()" />
        <Method Sig="instance [] class DataRow GetChildRows(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow GetChildRows(string , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow GetChildRows(class DataRelation )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow GetChildRows(class DataRelation , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow GetParentRow(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow GetParentRow(string , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow GetParentRow(class DataRelation )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow GetParentRow(class DataRelation , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow GetParentRows(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow GetParentRows(string , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow GetParentRows(class DataRelation )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow GetParentRows(class DataRelation , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool HasVersion(struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool IsNull(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool IsNull(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool IsNull(class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool IsNull(class DataColumn , struct DataRowVersion )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void RejectChanges()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void SetParentRow(class DataRow )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void SetParentRow(class DataRow , class DataRelation )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void SetAdded()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void SetModified()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
      </Type>
      <Type Name="DataRowChangeEventArgs">
        <Method Sig="instance void .ctor(class DataRow , struct DataRowAction )" />
        <Method Sig="instance class DataRow get_Row()" />
        <Method Sig="instance struct DataRowAction get_Action()" />
      </Type>
      <Type Name="DataRowChangeEventHandler">
        <Method Sig="instance void .ctor(object , intptr )" />
        <Method Sig="instance void Invoke(object , class DataRowChangeEventArgs )" />
        <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataRowChangeEventArgs , class AsyncCallback , object )" />
        <Method Sig="instance void EndInvoke(class IAsyncResult )" />
      </Type>
      <Type Name="DataRowCollection">
        <Method Sig="instance int get_Count()" />
        <Method Sig="instance class DataRow get_Item(int )" />
        <Method Sig="instance void Add(class DataRow )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void InsertAt(class DataRow , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int IndexOf(class DataRow )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow Add([] object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow Find(object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow Find([] object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Clear()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool Contains(object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool Contains([] object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void CopyTo(class Array , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void CopyTo([] class DataRow , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class IEnumerator GetEnumerator()" />
        <Method Sig="instance void Remove(class DataRow )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void RemoveAt(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
      </Type>
      <Type Name="DataRowView">
        <Method Sig="instance bool Equals(object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int GetHashCode()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataView get_DataView()" />
        <Method Sig="instance object get_Item(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Item(int , object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object get_Item(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Item(string , object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct DataRowVersion get_RowVersion()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataView CreateChildView(class DataRelation )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataView CreateChildView(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow get_Row()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void BeginEdit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void CancelEdit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void EndEdit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_IsNew()" />
        <Method Sig="instance bool get_IsEdit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Delete()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void add_PropertyChanged(class PropertyChangedEventHandler )" />
        <Method Sig="instance void remove_PropertyChanged(class PropertyChangedEventHandler )" />
        <Method Sig="void .cctor()" />
      </Type>
      <Type Name="DataSet">
        <Method Sig="instance void .ctor()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct SerializationFormat get_RemotingFormat()" />
        <Method Sig="instance void set_RemotingFormat(struct SerializationFormat )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct SchemaSerializationMode get_SchemaSerializationMode()" />
        <Method Sig="instance void set_SchemaSerializationMode(struct SchemaSerializationMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void GetObjectData(class SerializationInfo , struct StreamingContext )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="SerializationFormatter" />
            </PermissionSet>
          </LinkDemand>
        </Method>
        <Method Sig="instance bool get_CaseSensitive()" />
        <Method Sig="instance void set_CaseSensitive(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataViewManager get_DefaultViewManager()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_EnforceConstraints()" />
        <Method Sig="instance void set_EnforceConstraints(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_DataSetName()" />
        <Method Sig="instance void set_DataSetName(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_Namespace()" />
        <Method Sig="instance void set_Namespace(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_Prefix()" />
        <Method Sig="instance void set_Prefix(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class PropertyCollection get_ExtendedProperties()" />
        <Method Sig="instance bool get_HasErrors()" />
        <Method Sig="instance bool get_IsInitialized()" />
        <Method Sig="instance class CultureInfo get_Locale()" />
        <Method Sig="instance void set_Locale(class CultureInfo )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class ISite get_Site()" />
        <Method Sig="instance void set_Site(class ISite )" />
        <Method Sig="instance class DataRelationCollection get_Relations()" />
        <Method Sig="instance class DataTableCollection get_Tables()" />
        <Method Sig="instance void AcceptChanges()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void add_MergeFailed(class MergeFailedEventHandler )" />
        <Method Sig="instance void remove_MergeFailed(class MergeFailedEventHandler )" />
        <Method Sig="instance void add_Initialized(class EventHandler )" />
        <Method Sig="instance void remove_Initialized(class EventHandler )" />
        <Method Sig="instance void BeginInit()" />
        <Method Sig="instance void EndInit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Clear()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataSet Clone()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataSet Copy()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataSet GetChanges()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataSet GetChanges(struct DataRowState )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string GetXml()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string GetXmlSchema()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool HasChanges()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool HasChanges(struct DataRowState )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void InferXmlSchema(class XmlReader , [] string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void InferXmlSchema(class Stream , [] string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void InferXmlSchema(class TextReader , [] string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void InferXmlSchema(string , [] string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void ReadXmlSchema(class XmlReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void ReadXmlSchema(class Stream )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void ReadXmlSchema(class TextReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void ReadXmlSchema(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(class Stream )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(class TextWriter )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(class XmlWriter )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(class XmlReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(class Stream )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(class TextReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(class XmlReader , struct XmlReadMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(class Stream , struct XmlReadMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(class TextReader , struct XmlReadMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(string , struct XmlReadMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class Stream )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class TextWriter )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class XmlWriter )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class Stream , struct XmlWriteMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class TextWriter , struct XmlWriteMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class XmlWriter , struct XmlWriteMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(string , struct XmlWriteMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge(class DataSet )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge(class DataSet , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge(class DataSet , bool , struct MissingSchemaAction )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge(class DataTable , bool , struct MissingSchemaAction )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge([] class DataRow )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge([] class DataRow , bool , struct MissingSchemaAction )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void RejectChanges()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Reset()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="class XmlSchemaComplexType GetDataSetSchema(class XmlSchemaSet )" />
        <Method Sig="instance void Load(class IDataReader , struct LoadOption , class FillErrorEventHandler , [] class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Load(class IDataReader , struct LoadOption , [] class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Load(class IDataReader , struct LoadOption , [] string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTableReader CreateDataReader()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTableReader CreateDataReader([] class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="void .cctor()" />
      </Type>
      <Type Name="DataSetSchemaImporterExtension">
        <Method Sig="instance string ImportSchemaType(string , string , class XmlSchemaObject , class XmlSchemas , class XmlSchemaImporter , class CodeCompileUnit , class CodeNamespace , struct CodeGenerationOptions , class CodeDomProvider )" />
        <Method Sig="instance string ImportSchemaType(class XmlSchemaType , class XmlSchemaObject , class XmlSchemas , class XmlSchemaImporter , class CodeCompileUnit , class CodeNamespace , struct CodeGenerationOptions , class CodeDomProvider )" />
        <Method Sig="instance void .ctor()" />
      </Type>
      <Type Name="DataSysDescriptionAttribute">
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance string get_Description()" />
      </Type>
      <Type Name="DataTable">
        <Method Sig="instance void .ctor()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void GetObjectData(class SerializationInfo , struct StreamingContext )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="SerializationFormatter" />
            </PermissionSet>
          </LinkDemand>
        </Method>
        <Method Sig="instance bool get_CaseSensitive()" />
        <Method Sig="instance void set_CaseSensitive(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_IsInitialized()" />
        <Method Sig="instance struct SerializationFormat get_RemotingFormat()" />
        <Method Sig="instance void set_RemotingFormat(struct SerializationFormat )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRelationCollection get_ChildRelations()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataColumnCollection get_Columns()" />
        <Method Sig="instance class ConstraintCollection get_Constraints()" />
        <Method Sig="instance class DataSet get_DataSet()" />
        <Method Sig="instance class DataView get_DefaultView()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_DisplayExpression()" />
        <Method Sig="instance void set_DisplayExpression(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class PropertyCollection get_ExtendedProperties()" />
        <Method Sig="instance bool get_HasErrors()" />
        <Method Sig="instance class CultureInfo get_Locale()" />
        <Method Sig="instance void set_Locale(class CultureInfo )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int get_MinimumCapacity()" />
        <Method Sig="instance void set_MinimumCapacity(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRelationCollection get_ParentRelations()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataColumn get_PrimaryKey()" />
        <Method Sig="instance void set_PrimaryKey([] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRowCollection get_Rows()" />
        <Method Sig="instance string get_TableName()" />
        <Method Sig="instance void set_TableName(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_Namespace()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Namespace(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void BeginInit()" />
        <Method Sig="instance void EndInit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_Prefix()" />
        <Method Sig="instance void set_Prefix(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void AcceptChanges()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable Clone()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable Copy()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void add_ColumnChanging(class DataColumnChangeEventHandler )" />
        <Method Sig="instance void remove_ColumnChanging(class DataColumnChangeEventHandler )" />
        <Method Sig="instance void add_ColumnChanged(class DataColumnChangeEventHandler )" />
        <Method Sig="instance void remove_ColumnChanged(class DataColumnChangeEventHandler )" />
        <Method Sig="instance void add_Initialized(class EventHandler )" />
        <Method Sig="instance void remove_Initialized(class EventHandler )" />
        <Method Sig="instance void add_RowChanged(class DataRowChangeEventHandler )" />
        <Method Sig="instance void remove_RowChanged(class DataRowChangeEventHandler )" />
        <Method Sig="instance void add_RowChanging(class DataRowChangeEventHandler )" />
        <Method Sig="instance void remove_RowChanging(class DataRowChangeEventHandler )" />
        <Method Sig="instance void add_RowDeleting(class DataRowChangeEventHandler )" />
        <Method Sig="instance void remove_RowDeleting(class DataRowChangeEventHandler )" />
        <Method Sig="instance void add_RowDeleted(class DataRowChangeEventHandler )" />
        <Method Sig="instance void remove_RowDeleted(class DataRowChangeEventHandler )" />
        <Method Sig="instance void add_TableClearing(class DataTableClearEventHandler )" />
        <Method Sig="instance void remove_TableClearing(class DataTableClearEventHandler )" />
        <Method Sig="instance void add_TableCleared(class DataTableClearEventHandler )" />
        <Method Sig="instance void remove_TableCleared(class DataTableClearEventHandler )" />
        <Method Sig="instance void add_TableNewRow(class DataTableNewRowEventHandler )" />
        <Method Sig="instance void remove_TableNewRow(class DataTableNewRowEventHandler )" />
        <Method Sig="instance class ISite get_Site()" />
        <Method Sig="instance void set_Site(class ISite )" />
        <Method Sig="instance void Clear()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object Compute(string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable GetChanges()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable GetChanges(struct DataRowState )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow GetErrors()" />
        <Method Sig="instance void ImportRow(class DataRow )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow NewRow()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void RejectChanges()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Reset()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow Select()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow Select(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow Select(string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRow Select(string , string , struct DataViewRowState )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string ToString()" />
        <Method Sig="instance void BeginLoadData()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void EndLoadData()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow LoadDataRow([] object , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRow LoadDataRow([] object , struct LoadOption )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge(class DataTable , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Merge(class DataTable , bool , struct MissingSchemaAction )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Load(class IDataReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Load(class IDataReader , struct LoadOption )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Load(class IDataReader , struct LoadOption , class FillErrorEventHandler )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTableReader CreateDataReader()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class Stream )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class Stream , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class TextWriter )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class TextWriter , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class XmlWriter )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class XmlWriter , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(string , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class Stream , struct XmlWriteMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class Stream , struct XmlWriteMode , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class TextWriter , struct XmlWriteMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class TextWriter , struct XmlWriteMode , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class XmlWriter , struct XmlWriteMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(class XmlWriter , struct XmlWriteMode , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(string , struct XmlWriteMode )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXml(string , struct XmlWriteMode , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(class Stream )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(class Stream , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(class TextWriter )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(class TextWriter , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(class XmlWriter )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(class XmlWriter , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void WriteXmlSchema(string , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(class Stream )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(class TextReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct XmlReadMode ReadXml(class XmlReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void ReadXmlSchema(class Stream )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void ReadXmlSchema(class TextReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void ReadXmlSchema(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void ReadXmlSchema(class XmlReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="class XmlSchemaComplexType GetDataTableSchema(class XmlSchemaSet )" />
        <Method Sig="void .cctor()" />
      </Type>
      <Type Name="DataTableClearEventArgs">
        <Method Sig="instance void .ctor(class DataTable )" />
        <Method Sig="instance class DataTable get_Table()" />
        <Method Sig="instance string get_TableName()" />
        <Method Sig="instance string get_TableNamespace()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
      </Type>
      <Type Name="DataTableClearEventHandler">
        <Method Sig="instance void .ctor(object , intptr )" />
        <Method Sig="instance void Invoke(object , class DataTableClearEventArgs )" />
        <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataTableClearEventArgs , class AsyncCallback , object )" />
        <Method Sig="instance void EndInvoke(class IAsyncResult )" />
      </Type>
      <Type Name="DataTableCollection">
        <Method Sig="instance class DataTable get_Item(int )" />
        <Method Sig="instance class DataTable get_Item(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable get_Item(string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Add(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void AddRange([] class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable Add(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable Add(string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable Add()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void add_CollectionChanged(class CollectionChangeEventHandler )" />
        <Method Sig="instance void remove_CollectionChanged(class CollectionChangeEventHandler )" />
        <Method Sig="instance void add_CollectionChanging(class CollectionChangeEventHandler )" />
        <Method Sig="instance void remove_CollectionChanging(class CollectionChangeEventHandler )" />
        <Method Sig="instance bool CanRemove(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Clear()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool Contains(string )" />
        <Method Sig="instance bool Contains(string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void CopyTo([] class DataTable , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int IndexOf(class DataTable )" />
        <Method Sig="instance int IndexOf(string )" />
        <Method Sig="instance int IndexOf(string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Remove(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void RemoveAt(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Remove(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Remove(string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
      </Type>
      <Type Name="DataTableNewRowEventHandler">
        <Method Sig="instance void .ctor(object , intptr )" />
        <Method Sig="instance void Invoke(object , class DataTableNewRowEventArgs )" />
        <Method Sig="instance class IAsyncResult BeginInvoke(object , class DataTableNewRowEventArgs , class AsyncCallback , object )" />
        <Method Sig="instance void EndInvoke(class IAsyncResult )" />
      </Type>
      <Type Name="DataTableNewRowEventArgs">
        <Method Sig="instance void .ctor(class DataRow )" />
        <Method Sig="instance class DataRow get_Row()" />
      </Type>
      <Namespace Name="Common">
        <Type Name="DbDataReader">
          <Method Sig="instance int get_Depth()" />
          <Method Sig="instance int get_FieldCount()" />
          <Method Sig="instance bool get_HasRows()" />
          <Method Sig="instance bool get_IsClosed()" />
          <Method Sig="instance int get_RecordsAffected()" />
          <Method Sig="instance int get_VisibleFieldCount()" />
          <Method Sig="instance object get_Item(int )" />
          <Method Sig="instance object get_Item(string )" />
          <Method Sig="instance void Close()" />
          <Method Sig="instance void Dispose()" />
          <Method Sig="instance string GetDataTypeName(int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance class Type GetFieldType(int )" />
          <Method Sig="instance string GetName(int )" />
          <Method Sig="instance int GetOrdinal(string )" />
          <Method Sig="instance class DataTable GetSchemaTable()" />
          <Method Sig="instance bool GetBoolean(int )" />
          <Method Sig="instance byte GetByte(int )" />
          <Method Sig="instance in64 GetBytes(int , in64 , [] byte , int , int )" />
          <Method Sig="instance char GetChar(int )" />
          <Method Sig="instance in64 GetChars(int , in64 , [] char , int , int )" />
          <Method Sig="instance class DbDataReader GetData(int )" />
          <Method Sig="instance struct DateTime GetDateTime(int )" />
          <Method Sig="instance struct Decimal GetDecimal(int )" />
          <Method Sig="instance double GetDouble(int )" />
          <Method Sig="instance float GetFloat(int )" />
          <Method Sig="instance struct Guid GetGuid(int )" />
          <Method Sig="instance short GetInt16(int )" />
          <Method Sig="instance int GetInt32(int )" />
          <Method Sig="instance in64 GetInt64(int )" />
          <Method Sig="instance class Type GetProviderSpecificFieldType(int )" />
          <Method Sig="instance object GetProviderSpecificValue(int )" />
          <Method Sig="instance int GetProviderSpecificValues([] object )" />
          <Method Sig="instance string GetString(int )" />
          <Method Sig="instance object GetValue(int )" />
          <Method Sig="instance int GetValues([] object )" />
          <Method Sig="instance bool IsDBNull(int )" />
          <Method Sig="instance bool NextResult()" />
          <Method Sig="instance bool Read()" />
        </Type>
        <Type Name="DataAdapter">
          <Method Sig="instance bool get_AcceptChangesDuringFill()" />
          <Method Sig="instance void set_AcceptChangesDuringFill(bool )" />
          <Method Sig="instance bool ShouldSerializeAcceptChangesDuringFill()" />
          <Method Sig="instance bool get_AcceptChangesDuringUpdate()" />
          <Method Sig="instance void set_AcceptChangesDuringUpdate(bool )" />
          <Method Sig="instance bool get_ContinueUpdateOnError()" />
          <Method Sig="instance void set_ContinueUpdateOnError(bool )" />
          <Method Sig="instance struct LoadOption get_FillLoadOption()" />
          <Method Sig="instance void set_FillLoadOption(struct LoadOption )" />
          <Method Sig="instance void ResetFillLoadOption()" />
          <Method Sig="instance bool ShouldSerializeFillLoadOption()" />
          <Method Sig="instance struct MissingMappingAction get_MissingMappingAction()" />
          <Method Sig="instance void set_MissingMappingAction(struct MissingMappingAction )" />
          <Method Sig="instance struct MissingSchemaAction get_MissingSchemaAction()" />
          <Method Sig="instance void set_MissingSchemaAction(struct MissingSchemaAction )" />
          <Method Sig="instance bool get_ReturnProviderSpecificTypes()" />
          <Method Sig="instance void set_ReturnProviderSpecificTypes(bool )" />
          <Method Sig="instance class DataTableMappingCollection get_TableMappings()" />
          <Method Sig="instance void add_FillError(class FillErrorEventHandler )" />
          <Method Sig="instance void remove_FillError(class FillErrorEventHandler )" />
          <Method Sig="instance [] class DataTable FillSchema(class DataSet , struct SchemaType )" />
          <Method Sig="instance int Fill(class DataSet )" />
          <Method Sig="instance [] class IDataParameter GetFillParameters()" />
          <Method Sig="instance int Update(class DataSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DataColumnMapping">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string , string )" />
          <Method Sig="instance string get_DataSetColumn()" />
          <Method Sig="instance void set_DataSetColumn(string )" />
          <Method Sig="instance string get_SourceColumn()" />
          <Method Sig="instance void set_SourceColumn(string )" />
          <Method Sig="instance class DataColumn GetDataColumnBySchemaAction(class DataTable , class Type , struct MissingSchemaAction )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class DataColumn GetDataColumnBySchemaAction(string , string , class DataTable , class Type , struct MissingSchemaAction )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="DataColumnMappingCollection">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class DataColumnMapping get_Item(int )" />
          <Method Sig="instance void set_Item(int , class DataColumnMapping )" />
          <Method Sig="instance class DataColumnMapping get_Item(string )" />
          <Method Sig="instance void set_Item(string , class DataColumnMapping )" />
          <Method Sig="instance int Add(object )" />
          <Method Sig="instance class DataColumnMapping Add(string , string )" />
          <Method Sig="instance void AddRange([] class DataColumnMapping )" />
          <Method Sig="instance void AddRange(class Array )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance bool Contains(object )" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance void CopyTo([] class DataColumnMapping , int )" />
          <Method Sig="instance class DataColumnMapping GetByDataSetColumn(string )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance int IndexOf(object )" />
          <Method Sig="instance int IndexOf(string )" />
          <Method Sig="instance int IndexOfDataSetColumn(string )" />
          <Method Sig="instance void Insert(int , object )" />
          <Method Sig="instance void Insert(int , class DataColumnMapping )" />
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance void RemoveAt(string )" />
          <Method Sig="instance void Remove(object )" />
          <Method Sig="instance void Remove(class DataColumnMapping )" />
          <Method Sig="class DataColumn GetDataColumn(class DataColumnMappingCollection , string , class Type , class DataTable , struct MissingMappingAction , struct MissingSchemaAction )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class DataColumnMapping GetColumnMappingBySchemaAction(class DataColumnMappingCollection , string , struct MissingMappingAction )" />
        </Type>
        <Type Name="DataTableMapping">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string , string )" />
          <Method Sig="instance void .ctor(string , string , [] class DataColumnMapping )" />
          <Method Sig="instance class DataColumnMappingCollection get_ColumnMappings()" />
          <Method Sig="instance string get_DataSetTable()" />
          <Method Sig="instance void set_DataSetTable(string )" />
          <Method Sig="instance string get_SourceTable()" />
          <Method Sig="instance void set_SourceTable(string )" />
          <Method Sig="instance class DataColumn GetDataColumn(string , class Type , class DataTable , struct MissingMappingAction , struct MissingSchemaAction )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataColumnMapping GetColumnMappingBySchemaAction(string , struct MissingMappingAction )" />
          <Method Sig="instance class DataTable GetDataTableBySchemaAction(class DataSet , struct MissingSchemaAction )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="DataTableMappingCollection">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class DataTableMapping get_Item(int )" />
          <Method Sig="instance void set_Item(int , class DataTableMapping )" />
          <Method Sig="instance class DataTableMapping get_Item(string )" />
          <Method Sig="instance void set_Item(string , class DataTableMapping )" />
          <Method Sig="instance int Add(object )" />
          <Method Sig="instance void AddRange([] class DataTableMapping )" />
          <Method Sig="instance void AddRange(class Array )" />
          <Method Sig="instance class DataTableMapping Add(string , string )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance bool Contains(object )" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance void CopyTo([] class DataTableMapping , int )" />
          <Method Sig="instance class DataTableMapping GetByDataSetTable(string )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance int IndexOf(object )" />
          <Method Sig="instance int IndexOf(string )" />
          <Method Sig="instance int IndexOfDataSetTable(string )" />
          <Method Sig="instance void Insert(int , object )" />
          <Method Sig="instance void Insert(int , class DataTableMapping )" />
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance void RemoveAt(string )" />
          <Method Sig="instance void Remove(object )" />
          <Method Sig="instance void Remove(class DataTableMapping )" />
          <Method Sig="class DataTableMapping GetTableMappingBySchemaAction(class DataTableMappingCollection , string , string , struct MissingMappingAction )" />
        </Type>
        <Type Name="DbCommand">
          <Method Sig="instance string get_CommandText()" />
          <Method Sig="instance void set_CommandText(string )" />
          <Method Sig="instance int get_CommandTimeout()" />
          <Method Sig="instance void set_CommandTimeout(int )" />
          <Method Sig="instance struct CommandType get_CommandType()" />
          <Method Sig="instance void set_CommandType(struct CommandType )" />
          <Method Sig="instance class DbConnection get_Connection()" />
          <Method Sig="instance void set_Connection(class DbConnection )" />
          <Method Sig="instance bool get_DesignTimeVisible()" />
          <Method Sig="instance void set_DesignTimeVisible(bool )" />
          <Method Sig="instance class DbParameterCollection get_Parameters()" />
          <Method Sig="instance class DbTransaction get_Transaction()" />
          <Method Sig="instance void set_Transaction(class DbTransaction )" />
          <Method Sig="instance struct UpdateRowSource get_UpdatedRowSource()" />
          <Method Sig="instance void set_UpdatedRowSource(struct UpdateRowSource )" />
          <Method Sig="instance void Cancel()" />
          <Method Sig="instance class DbParameter CreateParameter()" />
          <Method Sig="instance int ExecuteNonQuery()" />
          <Method Sig="instance class DbDataReader ExecuteReader()" />
          <Method Sig="instance class DbDataReader ExecuteReader(struct CommandBehavior )" />
          <Method Sig="instance object ExecuteScalar()" />
          <Method Sig="instance void Prepare()" />
        </Type>
        <Type Name="DbCommandBuilder">
          <Method Sig="instance struct ConflictOption get_ConflictOption()" />
          <Method Sig="instance void set_ConflictOption(struct ConflictOption )" />
          <Method Sig="instance struct CatalogLocation get_CatalogLocation()" />
          <Method Sig="instance void set_CatalogLocation(struct CatalogLocation )" />
          <Method Sig="instance string get_CatalogSeparator()" />
          <Method Sig="instance void set_CatalogSeparator(string )" />
          <Method Sig="instance class DbDataAdapter get_DataAdapter()" />
          <Method Sig="instance void set_DataAdapter(class DbDataAdapter )" />
          <Method Sig="instance string get_QuotePrefix()" />
          <Method Sig="instance void set_QuotePrefix(string )" />
          <Method Sig="instance string get_QuoteSuffix()" />
          <Method Sig="instance void set_QuoteSuffix(string )" />
          <Method Sig="instance string get_SchemaSeparator()" />
          <Method Sig="instance void set_SchemaSeparator(string )" />
          <Method Sig="instance bool get_SetAllValues()" />
          <Method Sig="instance void set_SetAllValues(bool )" />
          <Method Sig="instance class DbCommand GetInsertCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbCommand GetInsertCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbCommand GetUpdateCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbCommand GetUpdateCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbCommand GetDeleteCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbCommand GetDeleteCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string QuoteIdentifier(string )" />
          <Method Sig="instance void RefreshSchema()" />
          <Method Sig="instance string UnquoteIdentifier(string )" />
        </Type>
        <Type Name="DbConnection">
          <Method Sig="instance string get_ConnectionString()" />
          <Method Sig="instance void set_ConnectionString(string )" />
          <Method Sig="instance int get_ConnectionTimeout()" />
          <Method Sig="instance string get_Database()" />
          <Method Sig="instance string get_DataSource()" />
          <Method Sig="instance string get_ServerVersion()" />
          <Method Sig="instance struct ConnectionState get_State()" />
          <Method Sig="instance void add_StateChange(class StateChangeEventHandler )" />
          <Method Sig="instance void remove_StateChange(class StateChangeEventHandler )" />
          <Method Sig="instance class DbTransaction BeginTransaction()" />
          <Method Sig="instance class DbTransaction BeginTransaction(struct IsolationLevel )" />
          <Method Sig="instance void Close()" />
          <Method Sig="instance void ChangeDatabase(string )" />
          <Method Sig="instance class DbCommand CreateCommand()" />
          <Method Sig="instance void EnlistTransaction(class Transaction )" />
          <Method Sig="instance class DataTable GetSchema()" />
          <Method Sig="instance class DataTable GetSchema(string )" />
          <Method Sig="instance class DataTable GetSchema(string , [] string )" />
          <Method Sig="instance void Open()" />
        </Type>
        <Type Name="DbConnectionStringBuilder">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(bool )" />
          <Method Sig="instance object get_Item(string )" />
          <Method Sig="instance void set_Item(string , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_BrowsableConnectionString()" />
          <Method Sig="instance void set_BrowsableConnectionString(bool )" />
          <Method Sig="instance string get_ConnectionString()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_ConnectionString(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance bool get_IsFixedSize()" />
          <Method Sig="instance class ICollection get_Keys()" />
          <Method Sig="instance class ICollection get_Values()" />
          <Method Sig="instance void Add(string , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void AppendKeyValuePair(class StringBuilder , string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void AppendKeyValuePair(class StringBuilder , string , string , bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool ContainsKey(string )" />
          <Method Sig="instance bool EquivalentTo(class DbConnectionStringBuilder )" />
          <Method Sig="instance bool Remove(string )" />
          <Method Sig="instance bool ShouldSerialize(string )" />
          <Method Sig="instance string ToString()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool TryGetValue(string , &amp; object )" />
        </Type>
        <Type Name="DbDataAdapter">
          <Method Sig="instance class DbCommand get_DeleteCommand()" />
          <Method Sig="instance void set_DeleteCommand(class DbCommand )" />
          <Method Sig="instance class DbCommand get_InsertCommand()" />
          <Method Sig="instance void set_InsertCommand(class DbCommand )" />
          <Method Sig="instance class DbCommand get_SelectCommand()" />
          <Method Sig="instance void set_SelectCommand(class DbCommand )" />
          <Method Sig="instance int get_UpdateBatchSize()" />
          <Method Sig="instance void set_UpdateBatchSize(int )" />
          <Method Sig="instance class DbCommand get_UpdateCommand()" />
          <Method Sig="instance void set_UpdateCommand(class DbCommand )" />
          <Method Sig="instance class DataTable FillSchema(class DataTable , struct SchemaType )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] class DataTable FillSchema(class DataSet , struct SchemaType )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] class DataTable FillSchema(class DataSet , struct SchemaType , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Fill(class DataSet )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Fill(class DataSet , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Fill(class DataSet , int , int , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Fill(class DataTable )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Fill(int , int , [] class DataTable )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance [] class IDataParameter GetFillParameters()" />
          <Method Sig="instance int Update(class DataSet )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Update([] class DataRow )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Update(class DataTable )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Update(class DataSet , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DBDataPermission">
          <Method Sig="instance bool get_AllowBlankPassword()" />
          <Method Sig="instance void set_AllowBlankPassword(bool )" />
          <Method Sig="instance void Add(string , string , struct KeyRestrictionBehavior )" />
          <Method Sig="instance class IPermission Copy()" />
          <Method Sig="instance class IPermission Intersect(class IPermission )" />
          <Method Sig="instance bool IsSubsetOf(class IPermission )" />
          <Method Sig="instance bool IsUnrestricted()" />
          <Method Sig="instance class IPermission Union(class IPermission )" />
          <Method Sig="instance void FromXml(class SecurityElement )" />
          <Method Sig="instance class SecurityElement ToXml()" />
        </Type>
        <Type Name="DBDataPermissionAttribute">
          <Method Sig="instance bool get_AllowBlankPassword()" />
          <Method Sig="instance void set_AllowBlankPassword(bool )" />
          <Method Sig="instance string get_ConnectionString()" />
          <Method Sig="instance void set_ConnectionString(string )" />
          <Method Sig="instance struct KeyRestrictionBehavior get_KeyRestrictionBehavior()" />
          <Method Sig="instance void set_KeyRestrictionBehavior(struct KeyRestrictionBehavior )" />
          <Method Sig="instance string get_KeyRestrictions()" />
          <Method Sig="instance void set_KeyRestrictions(string )" />
          <Method Sig="instance bool ShouldSerializeConnectionString()" />
          <Method Sig="instance bool ShouldSerializeKeyRestrictions()" />
        </Type>
        <Type Name="DbDataRecord">
          <Method Sig="instance int get_FieldCount()" />
          <Method Sig="instance int GetValues([] object )" />
          <Method Sig="instance string GetName(int )" />
          <Method Sig="instance object GetValue(int )" />
          <Method Sig="instance string GetDataTypeName(int )" />
          <Method Sig="instance class Type GetFieldType(int )" />
          <Method Sig="instance int GetOrdinal(string )" />
          <Method Sig="instance object get_Item(int )" />
          <Method Sig="instance object get_Item(string )" />
          <Method Sig="instance bool GetBoolean(int )" />
          <Method Sig="instance byte GetByte(int )" />
          <Method Sig="instance in64 GetBytes(int , in64 , [] byte , int , int )" />
          <Method Sig="instance char GetChar(int )" />
          <Method Sig="instance in64 GetChars(int , in64 , [] char , int , int )" />
          <Method Sig="instance struct Guid GetGuid(int )" />
          <Method Sig="instance short GetInt16(int )" />
          <Method Sig="instance int GetInt32(int )" />
          <Method Sig="instance in64 GetInt64(int )" />
          <Method Sig="instance float GetFloat(int )" />
          <Method Sig="instance double GetDouble(int )" />
          <Method Sig="instance string GetString(int )" />
          <Method Sig="instance struct Decimal GetDecimal(int )" />
          <Method Sig="instance struct DateTime GetDateTime(int )" />
          <Method Sig="instance class IDataReader GetData(int )" />
          <Method Sig="instance bool IsDBNull(int )" />
        </Type>
        <Type Name="DbDataSourceEnumerator">
          <Method Sig="instance class DataTable GetDataSources()" />
        </Type>
        <Type Name="DbEnumerator">
          <Method Sig="instance void .ctor(class IDataReader )" />
          <Method Sig="instance void .ctor(class IDataReader , bool )" />
          <Method Sig="instance object get_Current()" />
          <Method Sig="instance bool MoveNext()" />
          <Method Sig="instance void Reset()" />
        </Type>
        <Type Name="DbParameter">
          <Method Sig="instance struct DbType get_DbType()" />
          <Method Sig="instance void set_DbType(struct DbType )" />
          <Method Sig="instance void ResetDbType()" />
          <Method Sig="instance struct ParameterDirection get_Direction()" />
          <Method Sig="instance void set_Direction(struct ParameterDirection )" />
          <Method Sig="instance bool get_IsNullable()" />
          <Method Sig="instance void set_IsNullable(bool )" />
          <Method Sig="instance string get_ParameterName()" />
          <Method Sig="instance void set_ParameterName(string )" />
          <Method Sig="instance int get_Size()" />
          <Method Sig="instance void set_Size(int )" />
          <Method Sig="instance string get_SourceColumn()" />
          <Method Sig="instance void set_SourceColumn(string )" />
          <Method Sig="instance bool get_SourceColumnNullMapping()" />
          <Method Sig="instance void set_SourceColumnNullMapping(bool )" />
          <Method Sig="instance struct DataRowVersion get_SourceVersion()" />
          <Method Sig="instance void set_SourceVersion(struct DataRowVersion )" />
          <Method Sig="instance object get_Value()" />
          <Method Sig="instance void set_Value(object )" />
        </Type>
        <Type Name="DbParameterCollection">
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance bool get_IsFixedSize()" />
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance bool get_IsSynchronized()" />
          <Method Sig="instance object get_SyncRoot()" />
          <Method Sig="instance class DbParameter get_Item(int )" />
          <Method Sig="instance void set_Item(int , class DbParameter )" />
          <Method Sig="instance class DbParameter get_Item(string )" />
          <Method Sig="instance void set_Item(string , class DbParameter )" />
          <Method Sig="instance int Add(object )" />
          <Method Sig="instance void AddRange(class Array )" />
          <Method Sig="instance bool Contains(object )" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance int IndexOf(object )" />
          <Method Sig="instance int IndexOf(string )" />
          <Method Sig="instance void Insert(int , object )" />
          <Method Sig="instance void Remove(object )" />
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance void RemoveAt(string )" />
        </Type>
        <Type Name="DbProviderConfigurationHandler">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance object Create(object , object , class XmlNode )" />
        </Type>
        <Type Name="DbProviderFactories">
          <Method Sig="class DbProviderFactory GetFactory(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class DbProviderFactory GetFactory(class DataRow )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class DataTable GetFactoryClasses()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DbProviderFactoriesConfigurationHandler">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance object Create(object , object , class XmlNode )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="DbProviderFactory">
          <Method Sig="instance bool get_CanCreateDataSourceEnumerator()" />
          <Method Sig="instance class DbCommand CreateCommand()" />
          <Method Sig="instance class DbCommandBuilder CreateCommandBuilder()" />
          <Method Sig="instance class DbConnection CreateConnection()" />
          <Method Sig="instance class DbConnectionStringBuilder CreateConnectionStringBuilder()" />
          <Method Sig="instance class DbDataAdapter CreateDataAdapter()" />
          <Method Sig="instance class DbParameter CreateParameter()" />
          <Method Sig="instance class CodeAccessPermission CreatePermission(struct PermissionState )" />
          <Method Sig="instance class DbDataSourceEnumerator CreateDataSourceEnumerator()" />
        </Type>
        <Type Name="DbProviderSpecificTypePropertyAttribute">
          <Method Sig="instance void .ctor(bool )" />
          <Method Sig="instance bool get_IsProviderSpecificTypeProperty()" />
        </Type>
        <Type Name="DbTransaction">
          <Method Sig="instance class DbConnection get_Connection()" />
          <Method Sig="instance struct IsolationLevel get_IsolationLevel()" />
          <Method Sig="instance void Commit()" />
          <Method Sig="instance void Dispose()" />
          <Method Sig="instance void Rollback()" />
        </Type>
        <Type Name="RowUpdatedEventArgs">
          <Method Sig="instance void .ctor(class DataRow , class IDbCommand , struct StatementType , class DataTableMapping )" />
          <Method Sig="instance class IDbCommand get_Command()" />
          <Method Sig="instance class Exception get_Errors()" />
          <Method Sig="instance void set_Errors(class Exception )" />
          <Method Sig="instance int get_RecordsAffected()" />
          <Method Sig="instance class DataRow get_Row()" />
          <Method Sig="instance int get_RowCount()" />
          <Method Sig="instance struct StatementType get_StatementType()" />
          <Method Sig="instance struct UpdateStatus get_Status()" />
          <Method Sig="instance void set_Status(struct UpdateStatus )" />
          <Method Sig="instance class DataTableMapping get_TableMapping()" />
          <Method Sig="instance void CopyToRows([] class DataRow )" />
          <Method Sig="instance void CopyToRows([] class DataRow , int )" />
        </Type>
        <Type Name="RowUpdatingEventArgs">
          <Method Sig="instance void .ctor(class DataRow , class IDbCommand , struct StatementType , class DataTableMapping )" />
          <Method Sig="instance class IDbCommand get_Command()" />
          <Method Sig="instance void set_Command(class IDbCommand )" />
          <Method Sig="instance class Exception get_Errors()" />
          <Method Sig="instance void set_Errors(class Exception )" />
          <Method Sig="instance class DataRow get_Row()" />
          <Method Sig="instance struct StatementType get_StatementType()" />
          <Method Sig="instance struct UpdateStatus get_Status()" />
          <Method Sig="instance void set_Status(struct UpdateStatus )" />
          <Method Sig="instance class DataTableMapping get_TableMapping()" />
        </Type>
        <Type Name="SchemaTableColumn">
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SchemaTableOptionalColumn">
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DbMetaDataCollectionNames">
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="DbMetaDataColumnNames">
          <Method Sig="void .cctor()" />
        </Type>
      </Namespace>
      <Type Name="DataTableReader">
        <Method Sig="instance void .ctor(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor([] class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Close()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable GetSchemaTable()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool NextResult()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool Read()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int get_Depth()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_IsClosed()" />
        <Method Sig="instance int get_RecordsAffected()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_HasRows()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object get_Item(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object get_Item(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int get_FieldCount()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class Type GetProviderSpecificFieldType(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object GetProviderSpecificValue(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int GetProviderSpecificValues([] object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool GetBoolean(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance byte GetByte(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance in64 GetBytes(int , in64 , [] byte , int , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance char GetChar(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance in64 GetChars(int , in64 , [] char , int , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string GetDataTypeName(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct DateTime GetDateTime(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct Decimal GetDecimal(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance double GetDouble(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class Type GetFieldType(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance float GetFloat(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct Guid GetGuid(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance short GetInt16(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int GetInt32(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance in64 GetInt64(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string GetName(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int GetOrdinal(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string GetString(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance object GetValue(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int GetValues([] object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool IsDBNull(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class IEnumerator GetEnumerator()" />
      </Type>
      <Type Name="DataView">
        <Method Sig="instance void .ctor()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(class DataTable , string , string , struct DataViewRowState )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_AllowDelete()" />
        <Method Sig="instance void set_AllowDelete(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_ApplyDefaultSort()" />
        <Method Sig="instance void set_ApplyDefaultSort(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_AllowEdit()" />
        <Method Sig="instance void set_AllowEdit(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool get_AllowNew()" />
        <Method Sig="instance void set_AllowNew(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int get_Count()" />
        <Method Sig="instance class DataViewManager get_DataViewManager()" />
        <Method Sig="instance bool get_IsInitialized()" />
        <Method Sig="instance string get_RowFilter()" />
        <Method Sig="instance void set_RowFilter(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance struct DataViewRowState get_RowStateFilter()" />
        <Method Sig="instance void set_RowStateFilter(struct DataViewRowState )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance string get_Sort()" />
        <Method Sig="instance void set_Sort(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable get_Table()" />
        <Method Sig="instance void set_Table(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRowView get_Item(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataRowView AddNew()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void BeginInit()" />
        <Method Sig="instance void EndInit()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void CopyTo(class Array , int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Delete(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int Find(object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance int Find([] object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRowView FindRows(object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataRowView FindRows([] object )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class IEnumerator GetEnumerator()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void add_ListChanged(class ListChangedEventHandler )" />
        <Method Sig="instance void remove_ListChanged(class ListChangedEventHandler )" />
        <Method Sig="instance void add_Initialized(class EventHandler )" />
        <Method Sig="instance void remove_Initialized(class EventHandler )" />
        <Method Sig="instance class DataTable ToTable()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable ToTable(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable ToTable(bool , [] string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataTable ToTable(string , bool , [] string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance bool Equals(class DataView )" />
        <Method Sig="void .cctor()" />
      </Type>
      <Type Name="DataViewManager">
        <Method Sig="instance void .ctor()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(class DataSet )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataSet get_DataSet()" />
        <Method Sig="instance void set_DataSet(class DataSet )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataViewSettingCollection get_DataViewSettings()" />
        <Method Sig="instance string get_DataViewSettingCollectionString()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_DataViewSettingCollectionString(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void add_ListChanged(class ListChangedEventHandler )" />
        <Method Sig="instance void remove_ListChanged(class ListChangedEventHandler )" />
        <Method Sig="instance class DataView CreateDataView(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="void .cctor()" />
      </Type>
      <Type Name="DataViewSetting">
        <Method Sig="instance bool get_ApplyDefaultSort()" />
        <Method Sig="instance void set_ApplyDefaultSort(bool )" />
        <Method Sig="instance class DataViewManager get_DataViewManager()" />
        <Method Sig="instance class DataTable get_Table()" />
        <Method Sig="instance string get_RowFilter()" />
        <Method Sig="instance void set_RowFilter(string )" />
        <Method Sig="instance struct DataViewRowState get_RowStateFilter()" />
        <Method Sig="instance void set_RowStateFilter(struct DataViewRowState )" />
        <Method Sig="instance string get_Sort()" />
        <Method Sig="instance void set_Sort(string )" />
      </Type>
      <Type Name="DataViewSettingCollection">
        <Method Sig="instance class DataViewSetting get_Item(class DataTable )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Item(class DataTable , class DataViewSetting )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataViewSetting get_Item(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class DataViewSetting get_Item(int )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void set_Item(int , class DataViewSetting )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void CopyTo(class Array , int )" />
        <Method Sig="instance void CopyTo([] class DataViewSetting , int )" />
        <Method Sig="instance int get_Count()" />
        <Method Sig="instance class IEnumerator GetEnumerator()" />
        <Method Sig="instance bool get_IsReadOnly()" />
        <Method Sig="instance bool get_IsSynchronized()" />
        <Method Sig="instance object get_SyncRoot()" />
      </Type>
      <Type Name="DBConcurrencyException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
        <Method Sig="instance void .ctor(string , class Exception , [] class DataRow )" />
        <Method Sig="instance void GetObjectData(class SerializationInfo , struct StreamingContext )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="SerializationFormatter" />
            </PermissionSet>
          </LinkDemand>
        </Method>
        <Method Sig="instance class DataRow get_Row()" />
        <Method Sig="instance void set_Row(class DataRow )" />
        <Method Sig="instance int get_RowCount()" />
        <Method Sig="instance void CopyToRows([] class DataRow )" />
        <Method Sig="instance void CopyToRows([] class DataRow , int )" />
      </Type>
      <Type Name="FillErrorEventArgs">
        <Method Sig="instance void .ctor(class DataTable , [] object )" />
        <Method Sig="instance bool get_Continue()" />
        <Method Sig="instance void set_Continue(bool )" />
        <Method Sig="instance class DataTable get_DataTable()" />
        <Method Sig="instance class Exception get_Errors()" />
        <Method Sig="instance void set_Errors(class Exception )" />
        <Method Sig="instance [] object get_Values()" />
      </Type>
      <Type Name="FillErrorEventHandler">
        <Method Sig="instance void .ctor(object , intptr )" />
        <Method Sig="instance void Invoke(object , class FillErrorEventArgs )" />
        <Method Sig="instance class IAsyncResult BeginInvoke(object , class FillErrorEventArgs , class AsyncCallback , object )" />
        <Method Sig="instance void EndInvoke(class IAsyncResult )" />
      </Type>
      <Type Name="ForeignKeyConstraint">
        <Method Sig="instance void .ctor(class DataColumn , class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , class DataColumn , class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor([] class DataColumn , [] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , [] class DataColumn , [] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , string , [] string , [] string , struct AcceptRejectRule , struct Rule , struct Rule )" />
        <Method Sig="instance void .ctor(string , string , string , [] string , [] string , struct AcceptRejectRule , struct Rule , struct Rule )" />
        <Method Sig="instance [] class DataColumn get_Columns()" />
        <Method Sig="instance class DataTable get_Table()" />
        <Method Sig="instance struct AcceptRejectRule get_AcceptRejectRule()" />
        <Method Sig="instance void set_AcceptRejectRule(struct AcceptRejectRule )" />
        <Method Sig="instance struct Rule get_DeleteRule()" />
        <Method Sig="instance void set_DeleteRule(struct Rule )" />
        <Method Sig="instance bool Equals(object )" />
        <Method Sig="instance int GetHashCode()" />
        <Method Sig="instance [] class DataColumn get_RelatedColumns()" />
        <Method Sig="instance class DataTable get_RelatedTable()" />
        <Method Sig="instance struct Rule get_UpdateRule()" />
        <Method Sig="instance void set_UpdateRule(struct Rule )" />
      </Type>
      <Type Name="MergeFailedEventArgs">
        <Method Sig="instance void .ctor(class DataTable , string )" />
        <Method Sig="instance class DataTable get_Table()" />
        <Method Sig="instance string get_Conflict()" />
      </Type>
      <Type Name="MergeFailedEventHandler">
        <Method Sig="instance void .ctor(object , intptr )" />
        <Method Sig="instance void Invoke(object , class MergeFailedEventArgs )" />
        <Method Sig="instance class IAsyncResult BeginInvoke(object , class MergeFailedEventArgs , class AsyncCallback , object )" />
        <Method Sig="instance void EndInvoke(class IAsyncResult )" />
      </Type>
      <Type Name="PropertyCollection">
        <Method Sig="instance void .ctor()" />
      </Type>
      <Type Name="StatementCompletedEventArgs">
        <Method Sig="instance void .ctor(int )" />
        <Method Sig="instance int get_RecordCount()" />
      </Type>
      <Type Name="StatementCompletedEventHandler">
        <Method Sig="instance void .ctor(object , intptr )" />
        <Method Sig="instance void Invoke(object , class StatementCompletedEventArgs )" />
        <Method Sig="instance class IAsyncResult BeginInvoke(object , class StatementCompletedEventArgs , class AsyncCallback , object )" />
        <Method Sig="instance void EndInvoke(class IAsyncResult )" />
      </Type>
      <Type Name="StateChangeEventArgs">
        <Method Sig="instance void .ctor(struct ConnectionState , struct ConnectionState )" />
        <Method Sig="instance struct ConnectionState get_CurrentState()" />
        <Method Sig="instance struct ConnectionState get_OriginalState()" />
      </Type>
      <Type Name="StateChangeEventHandler">
        <Method Sig="instance void .ctor(object , intptr )" />
        <Method Sig="instance void Invoke(object , class StateChangeEventArgs )" />
        <Method Sig="instance class IAsyncResult BeginInvoke(object , class StateChangeEventArgs , class AsyncCallback , object )" />
        <Method Sig="instance void EndInvoke(class IAsyncResult )" />
      </Type>
      <Type Name="UniqueConstraint">
        <Method Sig="instance void .ctor(string , class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , [] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor([] class DataColumn )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , [] string , bool )" />
        <Method Sig="instance void .ctor(string , class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(string , [] class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor([] class DataColumn , bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance [] class DataColumn get_Columns()" />
        <Method Sig="instance bool get_IsPrimaryKey()" />
        <Method Sig="instance bool Equals(object )" />
        <Method Sig="instance int GetHashCode()" />
        <Method Sig="instance class DataTable get_Table()" />
      </Type>
      <Type Name="TypedDataSetGenerator">
        <Method Sig="void Generate(class DataSet , class CodeNamespace , class ICodeGenerator )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="string GenerateIdName(string , class ICodeGenerator )" />
        <Method Sig="instance void .ctor()" />
      </Type>
      <Type Name="StrongTypingException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="TypedDataSetGeneratorException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
        <Method Sig="instance void .ctor(class ArrayList )" />
        <Method Sig="instance class ArrayList get_ErrorList()" />
        <Method Sig="instance void GetObjectData(class SerializationInfo , struct StreamingContext )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
          <LinkDemand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="SerializationFormatter" />
            </PermissionSet>
          </LinkDemand>
        </Method>
      </Type>
      <Type Name="InvalidExpressionException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="EvaluateException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Type Name="SyntaxErrorException">
        <Method Sig="instance void .ctor()" />
        <Method Sig="instance void .ctor(string )" />
        <Method Sig="instance void .ctor(string , class Exception )" />
      </Type>
      <Namespace Name="Odbc">
        <Type Name="OdbcCommand">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(string , class OdbcConnection )" />
          <Method Sig="instance void .ctor(string , class OdbcConnection , class OdbcTransaction )" />
          <Method Sig="instance string get_CommandText()" />
          <Method Sig="instance void set_CommandText(string )" />
          <Method Sig="instance int get_CommandTimeout()" />
          <Method Sig="instance void set_CommandTimeout(int )" />
          <Method Sig="instance void ResetCommandTimeout()" />
          <Method Sig="instance struct CommandType get_CommandType()" />
          <Method Sig="instance void set_CommandType(struct CommandType )" />
          <Method Sig="instance class OdbcConnection get_Connection()" />
          <Method Sig="instance void set_Connection(class OdbcConnection )" />
          <Method Sig="instance bool get_DesignTimeVisible()" />
          <Method Sig="instance void set_DesignTimeVisible(bool )" />
          <Method Sig="instance class OdbcParameterCollection get_Parameters()" />
          <Method Sig="instance class OdbcTransaction get_Transaction()" />
          <Method Sig="instance void set_Transaction(class OdbcTransaction )" />
          <Method Sig="instance struct UpdateRowSource get_UpdatedRowSource()" />
          <Method Sig="instance void set_UpdatedRowSource(struct UpdateRowSource )" />
          <Method Sig="instance void Cancel()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OdbcParameter CreateParameter()" />
          <Method Sig="instance int ExecuteNonQuery()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OdbcDataReader ExecuteReader()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OdbcDataReader ExecuteReader(struct CommandBehavior )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object ExecuteScalar()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Prepare()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="OdbcCommandBuilder">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class OdbcDataAdapter )" />
          <Method Sig="instance class OdbcDataAdapter get_DataAdapter()" />
          <Method Sig="instance void set_DataAdapter(class OdbcDataAdapter )" />
          <Method Sig="instance class OdbcCommand GetInsertCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OdbcCommand GetInsertCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OdbcCommand GetUpdateCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OdbcCommand GetUpdateCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OdbcCommand GetDeleteCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OdbcCommand GetDeleteCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void DeriveParameters(class OdbcCommand )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string QuoteIdentifier(string )" />
          <Method Sig="instance string QuoteIdentifier(string , class OdbcConnection )" />
          <Method Sig="instance string UnquoteIdentifier(string )" />
          <Method Sig="instance string UnquoteIdentifier(string , class OdbcConnection )" />
        </Type>
        <Type Name="OdbcConnection">
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ConnectionString()" />
          <Method Sig="instance void set_ConnectionString(string )" />
          <Method Sig="instance int get_ConnectionTimeout()" />
          <Method Sig="instance void set_ConnectionTimeout(int )" />
          <Method Sig="instance string get_Database()" />
          <Method Sig="instance string get_DataSource()" />
          <Method Sig="instance string get_ServerVersion()" />
          <Method Sig="instance string get_Driver()" />
          <Method Sig="instance void add_InfoMessage(class OdbcInfoMessageEventHandler )" />
          <Method Sig="instance void remove_InfoMessage(class OdbcInfoMessageEventHandler )" />
          <Method Sig="instance class OdbcTransaction BeginTransaction()" />
          <Method Sig="instance class OdbcTransaction BeginTransaction(struct IsolationLevel )" />
          <Method Sig="instance void ChangeDatabase(string )" />
          <Method Sig="instance class OdbcCommand CreateCommand()" />
          <Method Sig="instance void Close()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EnlistDistributedTransaction(class ITransaction )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Open()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ReleaseObjectPool()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Data.Odbc.OdbcPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ConnectionState get_State()" />
          <Method Sig="instance void EnlistTransaction(class Transaction )" />
          <Method Sig="instance class DataTable GetSchema()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetSchema(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetSchema(string , [] string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OdbcConnectionStringBuilder">
          <Method Sig="void .cctor()" />
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Item(string )" />
          <Method Sig="instance void set_Item(string , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Driver()" />
          <Method Sig="instance void set_Driver(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Dsn()" />
          <Method Sig="instance void set_Dsn(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ICollection get_Keys()" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool ContainsKey(string )" />
          <Method Sig="instance bool Remove(string )" />
          <Method Sig="instance bool TryGetValue(string , &amp; object )" />
        </Type>
        <Type Name="OdbcDataAdapter">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class OdbcCommand )" />
          <Method Sig="instance void .ctor(string , class OdbcConnection )" />
          <Method Sig="instance void .ctor(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OdbcCommand get_DeleteCommand()" />
          <Method Sig="instance void set_DeleteCommand(class OdbcCommand )" />
          <Method Sig="instance class OdbcCommand get_InsertCommand()" />
          <Method Sig="instance void set_InsertCommand(class OdbcCommand )" />
          <Method Sig="instance class OdbcCommand get_SelectCommand()" />
          <Method Sig="instance void set_SelectCommand(class OdbcCommand )" />
          <Method Sig="instance class OdbcCommand get_UpdateCommand()" />
          <Method Sig="instance void set_UpdateCommand(class OdbcCommand )" />
          <Method Sig="instance void add_RowUpdated(class OdbcRowUpdatedEventHandler )" />
          <Method Sig="instance void remove_RowUpdated(class OdbcRowUpdatedEventHandler )" />
          <Method Sig="instance void add_RowUpdating(class OdbcRowUpdatingEventHandler )" />
          <Method Sig="instance void remove_RowUpdating(class OdbcRowUpdatingEventHandler )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OdbcDataReader">
          <Method Sig="instance int get_Depth()" />
          <Method Sig="instance int get_FieldCount()" />
          <Method Sig="instance bool get_HasRows()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsClosed()" />
          <Method Sig="instance int get_RecordsAffected()" />
          <Method Sig="instance object get_Item(int )" />
          <Method Sig="instance object get_Item(string )" />
          <Method Sig="instance void Close()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string GetDataTypeName(int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance class Type GetFieldType(int )" />
          <Method Sig="instance string GetName(int )" />
          <Method Sig="instance int GetOrdinal(string )" />
          <Method Sig="instance object GetValue(int )" />
          <Method Sig="instance int GetValues([] object )" />
          <Method Sig="instance bool IsDBNull(int )" />
          <Method Sig="instance byte GetByte(int )" />
          <Method Sig="instance char GetChar(int )" />
          <Method Sig="instance short GetInt16(int )" />
          <Method Sig="instance int GetInt32(int )" />
          <Method Sig="instance in64 GetInt64(int )" />
          <Method Sig="instance bool GetBoolean(int )" />
          <Method Sig="instance float GetFloat(int )" />
          <Method Sig="instance struct DateTime GetDate(int )" />
          <Method Sig="instance struct DateTime GetDateTime(int )" />
          <Method Sig="instance struct Decimal GetDecimal(int )" />
          <Method Sig="instance double GetDouble(int )" />
          <Method Sig="instance struct Guid GetGuid(int )" />
          <Method Sig="instance string GetString(int )" />
          <Method Sig="instance struct TimeSpan GetTime(int )" />
          <Method Sig="instance in64 GetBytes(int , in64 , [] byte , int , int )" />
          <Method Sig="instance in64 GetChars(int , in64 , [] char , int , int )" />
          <Method Sig="instance bool Read()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool NextResult()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetSchemaTable()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="OdbcError">
          <Method Sig="instance string get_Message()" />
          <Method Sig="instance string get_SQLState()" />
          <Method Sig="instance int get_NativeError()" />
          <Method Sig="instance string get_Source()" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="OdbcErrorCollection">
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class OdbcError get_Item(int )" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance void CopyTo([] class OdbcError , int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
        </Type>
        <Type Name="OdbcException">
          <Method Sig="instance class OdbcErrorCollection get_Errors()" />
          <Method Sig="instance void GetObjectData(class SerializationInfo , struct StreamingContext )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="SerializationFormatter" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance string get_Source()" />
        </Type>
        <Type Name="OdbcFactory">
          <Method Sig="instance class DbCommand CreateCommand()" />
          <Method Sig="instance class DbCommandBuilder CreateCommandBuilder()" />
          <Method Sig="instance class DbConnection CreateConnection()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbConnectionStringBuilder CreateConnectionStringBuilder()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbDataAdapter CreateDataAdapter()" />
          <Method Sig="instance class DbParameter CreateParameter()" />
          <Method Sig="instance class CodeAccessPermission CreatePermission(struct PermissionState )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OdbcInfoMessageEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class OdbcInfoMessageEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class OdbcInfoMessageEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="OdbcInfoMessageEventArgs">
          <Method Sig="instance class OdbcErrorCollection get_Errors()" />
          <Method Sig="instance string get_Message()" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="OdbcMetaDataCollectionNames">
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OdbcMetaDataColumnNames">
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OdbcParameter">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string , object )" />
          <Method Sig="instance void .ctor(string , struct OdbcType )" />
          <Method Sig="instance void .ctor(string , struct OdbcType , int )" />
          <Method Sig="instance void .ctor(string , struct OdbcType , int , string )" />
          <Method Sig="instance void .ctor(string , struct OdbcType , int , struct ParameterDirection , bool , byte , byte , string , struct DataRowVersion , object )" />
          <Method Sig="instance void .ctor(string , struct OdbcType , int , struct ParameterDirection , byte , byte , string , struct DataRowVersion , bool , object )" />
          <Method Sig="instance struct DbType get_DbType()" />
          <Method Sig="instance void set_DbType(struct DbType )" />
          <Method Sig="instance void ResetDbType()" />
          <Method Sig="instance struct OdbcType get_OdbcType()" />
          <Method Sig="instance void set_OdbcType(struct OdbcType )" />
          <Method Sig="instance void ResetOdbcType()" />
          <Method Sig="instance string get_ParameterName()" />
          <Method Sig="instance void set_ParameterName(string )" />
          <Method Sig="instance byte get_Precision()" />
          <Method Sig="instance void set_Precision(byte )" />
          <Method Sig="instance byte get_Scale()" />
          <Method Sig="instance void set_Scale(byte )" />
          <Method Sig="instance object get_Value()" />
          <Method Sig="instance void set_Value(object )" />
          <Method Sig="instance struct ParameterDirection get_Direction()" />
          <Method Sig="instance void set_Direction(struct ParameterDirection )" />
          <Method Sig="instance bool get_IsNullable()" />
          <Method Sig="instance void set_IsNullable(bool )" />
          <Method Sig="instance int get_Size()" />
          <Method Sig="instance void set_Size(int )" />
          <Method Sig="instance string get_SourceColumn()" />
          <Method Sig="instance void set_SourceColumn(string )" />
          <Method Sig="instance bool get_SourceColumnNullMapping()" />
          <Method Sig="instance void set_SourceColumnNullMapping(bool )" />
          <Method Sig="instance struct DataRowVersion get_SourceVersion()" />
          <Method Sig="instance void set_SourceVersion(struct DataRowVersion )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="OdbcParameterCollection">
          <Method Sig="instance class OdbcParameter get_Item(int )" />
          <Method Sig="instance void set_Item(int , class OdbcParameter )" />
          <Method Sig="instance class OdbcParameter get_Item(string )" />
          <Method Sig="instance void set_Item(string , class OdbcParameter )" />
          <Method Sig="instance class OdbcParameter Add(class OdbcParameter )" />
          <Method Sig="instance class OdbcParameter Add(string , object )" />
          <Method Sig="instance class OdbcParameter AddWithValue(string , object )" />
          <Method Sig="instance class OdbcParameter Add(string , struct OdbcType )" />
          <Method Sig="instance class OdbcParameter Add(string , struct OdbcType , int )" />
          <Method Sig="instance class OdbcParameter Add(string , struct OdbcType , int , string )" />
          <Method Sig="instance void AddRange([] class OdbcParameter )" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance bool Contains(class OdbcParameter )" />
          <Method Sig="instance void CopyTo([] class OdbcParameter , int )" />
          <Method Sig="instance int IndexOf(class OdbcParameter )" />
          <Method Sig="instance void Insert(int , class OdbcParameter )" />
          <Method Sig="instance void Remove(class OdbcParameter )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance bool get_IsFixedSize()" />
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance bool get_IsSynchronized()" />
          <Method Sig="instance object get_SyncRoot()" />
          <Method Sig="instance int Add(object )" />
          <Method Sig="instance void AddRange(class Array )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(object )" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance int IndexOf(string )" />
          <Method Sig="instance int IndexOf(object )" />
          <Method Sig="instance void Insert(int , object )" />
          <Method Sig="instance void Remove(object )" />
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance void RemoveAt(string )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OdbcPermission">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(struct PermissionState )" />
          <Method Sig="instance void .ctor(struct PermissionState , bool )" />
          <Method Sig="instance void Add(string , string , struct KeyRestrictionBehavior )" />
          <Method Sig="instance class IPermission Copy()" />
        </Type>
        <Type Name="OdbcPermissionAttribute">
          <Method Sig="instance void .ctor(struct SecurityAction )" />
          <Method Sig="instance class IPermission CreatePermission()" />
        </Type>
        <Type Name="OdbcRowUpdatingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class OdbcRowUpdatingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class OdbcRowUpdatingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="OdbcRowUpdatedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class OdbcRowUpdatedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class OdbcRowUpdatedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="OdbcRowUpdatingEventArgs">
          <Method Sig="instance void .ctor(class DataRow , class IDbCommand , struct StatementType , class DataTableMapping )" />
          <Method Sig="instance class OdbcCommand get_Command()" />
          <Method Sig="instance void set_Command(class OdbcCommand )" />
        </Type>
        <Type Name="OdbcRowUpdatedEventArgs">
          <Method Sig="instance void .ctor(class DataRow , class IDbCommand , struct StatementType , class DataTableMapping )" />
          <Method Sig="instance class OdbcCommand get_Command()" />
        </Type>
        <Type Name="OdbcTransaction">
          <Method Sig="instance class OdbcConnection get_Connection()" />
          <Method Sig="instance struct IsolationLevel get_IsolationLevel()" />
          <Method Sig="instance void Commit()" />
          <Method Sig="instance void Rollback()" />
        </Type>
      </Namespace>
      <Namespace Name="OleDb">
        <Type Name="OleDbCommand">
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class OleDbConnection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class OleDbConnection , class OleDbTransaction )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_CommandText()" />
          <Method Sig="instance void set_CommandText(string )" />
          <Method Sig="instance int get_CommandTimeout()" />
          <Method Sig="instance void set_CommandTimeout(int )" />
          <Method Sig="instance void ResetCommandTimeout()" />
          <Method Sig="instance struct CommandType get_CommandType()" />
          <Method Sig="instance void set_CommandType(struct CommandType )" />
          <Method Sig="instance class OleDbConnection get_Connection()" />
          <Method Sig="instance void set_Connection(class OleDbConnection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_DesignTimeVisible()" />
          <Method Sig="instance void set_DesignTimeVisible(bool )" />
          <Method Sig="instance class OleDbParameterCollection get_Parameters()" />
          <Method Sig="instance class OleDbTransaction get_Transaction()" />
          <Method Sig="instance void set_Transaction(class OleDbTransaction )" />
          <Method Sig="instance struct UpdateRowSource get_UpdatedRowSource()" />
          <Method Sig="instance void set_UpdatedRowSource(struct UpdateRowSource )" />
          <Method Sig="instance void Cancel()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbCommand Clone()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbParameter CreateParameter()" />
          <Method Sig="instance class OleDbDataReader ExecuteReader()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance class OleDbDataReader ExecuteReader(struct CommandBehavior )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance int ExecuteNonQuery()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance object ExecuteScalar()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="instance void Prepare()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="OleDbCommandBuilder">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class OleDbDataAdapter )" />
          <Method Sig="instance class OleDbDataAdapter get_DataAdapter()" />
          <Method Sig="instance void set_DataAdapter(class OleDbDataAdapter )" />
          <Method Sig="instance class OleDbCommand GetInsertCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbCommand GetInsertCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbCommand GetUpdateCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbCommand GetUpdateCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbCommand GetDeleteCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbCommand GetDeleteCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void DeriveParameters(class OleDbCommand )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string QuoteIdentifier(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string QuoteIdentifier(string , class OleDbConnection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string UnquoteIdentifier(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string UnquoteIdentifier(string , class OleDbConnection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="OleDbConnection">
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Data.OleDb.OleDbPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ConnectionString()" />
          <Method Sig="instance void set_ConnectionString(string )" />
          <Method Sig="instance int get_ConnectionTimeout()" />
          <Method Sig="instance string get_Database()" />
          <Method Sig="instance string get_DataSource()" />
          <Method Sig="instance string get_Provider()" />
          <Method Sig="instance string get_ServerVersion()" />
          <Method Sig="instance void ResetState()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_InfoMessage(class OleDbInfoMessageEventHandler )" />
          <Method Sig="instance void remove_InfoMessage(class OleDbInfoMessageEventHandler )" />
          <Method Sig="instance class OleDbTransaction BeginTransaction()" />
          <Method Sig="instance class OleDbTransaction BeginTransaction(struct IsolationLevel )" />
          <Method Sig="instance void ChangeDatabase(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Close()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbCommand CreateCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void EnlistDistributedTransaction(class ITransaction )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetOleDbSchemaTable(struct Guid , [] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Open()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ReleaseObjectPool()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Data.OleDb.OleDbPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Data.OleDb.OleDbPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ConnectionState get_State()" />
          <Method Sig="instance void EnlistTransaction(class Transaction )" />
          <Method Sig="instance class DataTable GetSchema()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetSchema(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetSchema(string , [] string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OleDbConnectionStringBuilder">
          <Method Sig="void .cctor()" />
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Item(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Item(string , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_DataSource()" />
          <Method Sig="instance void set_DataSource(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_FileName()" />
          <Method Sig="instance void set_FileName(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_OleDbServices()" />
          <Method Sig="instance void set_OleDbServices(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_PersistSecurityInfo()" />
          <Method Sig="instance void set_PersistSecurityInfo(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Provider()" />
          <Method Sig="instance void set_Provider(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class ICollection get_Keys()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool ContainsKey(string )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Remove(string )" />
          <Method Sig="instance bool TryGetValue(string , &amp; object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="OleDbDataAdapter">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class OleDbCommand )" />
          <Method Sig="instance void .ctor(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Data.OleDb.OleDbPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class OleDbConnection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbCommand get_DeleteCommand()" />
          <Method Sig="instance void set_DeleteCommand(class OleDbCommand )" />
          <Method Sig="instance class OleDbCommand get_InsertCommand()" />
          <Method Sig="instance void set_InsertCommand(class OleDbCommand )" />
          <Method Sig="instance class OleDbCommand get_SelectCommand()" />
          <Method Sig="instance void set_SelectCommand(class OleDbCommand )" />
          <Method Sig="instance class OleDbCommand get_UpdateCommand()" />
          <Method Sig="instance void set_UpdateCommand(class OleDbCommand )" />
          <Method Sig="instance void add_RowUpdated(class OleDbRowUpdatedEventHandler )" />
          <Method Sig="instance void remove_RowUpdated(class OleDbRowUpdatedEventHandler )" />
          <Method Sig="instance void add_RowUpdating(class OleDbRowUpdatingEventHandler )" />
          <Method Sig="instance void remove_RowUpdating(class OleDbRowUpdatingEventHandler )" />
          <Method Sig="instance int Fill(class DataTable , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int Fill(class DataSet , object , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OleDbDataReader">
          <Method Sig="instance int get_Depth()" />
          <Method Sig="instance int get_FieldCount()" />
          <Method Sig="instance bool get_HasRows()" />
          <Method Sig="instance bool get_IsClosed()" />
          <Method Sig="instance int get_RecordsAffected()" />
          <Method Sig="instance object get_Item(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Item(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetSchemaTable()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Close()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool GetBoolean(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance byte GetByte(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance in64 GetBytes(int , in64 , [] byte , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance in64 GetChars(int , in64 , [] char , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance char GetChar(int )" />
          <Method Sig="instance class OleDbDataReader GetData(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string GetDataTypeName(int )" />
          <Method Sig="instance struct DateTime GetDateTime(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Decimal GetDecimal(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance double GetDouble(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance class Type GetFieldType(int )" />
          <Method Sig="instance float GetFloat(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Guid GetGuid(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance short GetInt16(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetInt32(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance in64 GetInt64(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string GetName(int )" />
          <Method Sig="instance int GetOrdinal(string )" />
          <Method Sig="instance string GetString(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct TimeSpan GetTimeSpan(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object GetValue(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetValues([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool IsDBNull(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_VisibleFieldCount()" />
          <Method Sig="instance bool NextResult()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Read()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="OleDbEnumerator">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance class DataTable GetElements()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class OleDbDataReader GetEnumerator(class Type )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class OleDbDataReader GetRootEnumerator()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="OleDbError">
          <Method Sig="instance string get_Message()" />
          <Method Sig="instance int get_NativeError()" />
          <Method Sig="instance string get_Source()" />
          <Method Sig="instance string get_SQLState()" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="OleDbErrorCollection">
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class OleDbError get_Item(int )" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance void CopyTo([] class OleDbError , int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
        </Type>
        <Type Name="OleDbException">
          <Method Sig="instance void GetObjectData(class SerializationInfo , struct StreamingContext )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="SerializationFormatter" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance int get_ErrorCode()" />
          <Method Sig="instance class OleDbErrorCollection get_Errors()" />
        </Type>
        <Type Name="OleDbFactory">
          <Method Sig="instance class DbCommand CreateCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbCommandBuilder CreateCommandBuilder()" />
          <Method Sig="instance class DbConnection CreateConnection()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Data.OleDb.OleDbPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbConnectionStringBuilder CreateConnectionStringBuilder()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbDataAdapter CreateDataAdapter()" />
          <Method Sig="instance class DbParameter CreateParameter()" />
          <Method Sig="instance class CodeAccessPermission CreatePermission(struct PermissionState )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OleDbInfoMessageEventArgs">
          <Method Sig="instance int get_ErrorCode()" />
          <Method Sig="instance class OleDbErrorCollection get_Errors()" />
          <Method Sig="instance string get_Message()" />
          <Method Sig="instance string get_Source()" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="OleDbInfoMessageEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class OleDbInfoMessageEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class OleDbInfoMessageEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="OleDbMetaDataCollectionNames">
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OleDbMetaDataColumnNames">
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OleDbParameter">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string , object )" />
          <Method Sig="instance void .ctor(string , struct OleDbType )" />
          <Method Sig="instance void .ctor(string , struct OleDbType , int )" />
          <Method Sig="instance void .ctor(string , struct OleDbType , int , string )" />
          <Method Sig="instance void .ctor(string , struct OleDbType , int , struct ParameterDirection , bool , byte , byte , string , struct DataRowVersion , object )" />
          <Method Sig="instance void .ctor(string , struct OleDbType , int , struct ParameterDirection , byte , byte , string , struct DataRowVersion , bool , object )" />
          <Method Sig="instance struct DbType get_DbType()" />
          <Method Sig="instance void set_DbType(struct DbType )" />
          <Method Sig="instance void ResetDbType()" />
          <Method Sig="instance struct OleDbType get_OleDbType()" />
          <Method Sig="instance void set_OleDbType(struct OleDbType )" />
          <Method Sig="instance void ResetOleDbType()" />
          <Method Sig="instance string get_ParameterName()" />
          <Method Sig="instance void set_ParameterName(string )" />
          <Method Sig="instance byte get_Precision()" />
          <Method Sig="instance void set_Precision(byte )" />
          <Method Sig="instance byte get_Scale()" />
          <Method Sig="instance void set_Scale(byte )" />
          <Method Sig="instance object get_Value()" />
          <Method Sig="instance void set_Value(object )" />
          <Method Sig="instance struct ParameterDirection get_Direction()" />
          <Method Sig="instance void set_Direction(struct ParameterDirection )" />
          <Method Sig="instance bool get_IsNullable()" />
          <Method Sig="instance void set_IsNullable(bool )" />
          <Method Sig="instance int get_Size()" />
          <Method Sig="instance void set_Size(int )" />
          <Method Sig="instance string get_SourceColumn()" />
          <Method Sig="instance void set_SourceColumn(string )" />
          <Method Sig="instance bool get_SourceColumnNullMapping()" />
          <Method Sig="instance void set_SourceColumnNullMapping(bool )" />
          <Method Sig="instance struct DataRowVersion get_SourceVersion()" />
          <Method Sig="instance void set_SourceVersion(struct DataRowVersion )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="OleDbParameterCollection">
          <Method Sig="instance class OleDbParameter get_Item(int )" />
          <Method Sig="instance void set_Item(int , class OleDbParameter )" />
          <Method Sig="instance class OleDbParameter get_Item(string )" />
          <Method Sig="instance void set_Item(string , class OleDbParameter )" />
          <Method Sig="instance class OleDbParameter Add(class OleDbParameter )" />
          <Method Sig="instance class OleDbParameter Add(string , object )" />
          <Method Sig="instance class OleDbParameter AddWithValue(string , object )" />
          <Method Sig="instance class OleDbParameter Add(string , struct OleDbType )" />
          <Method Sig="instance class OleDbParameter Add(string , struct OleDbType , int )" />
          <Method Sig="instance class OleDbParameter Add(string , struct OleDbType , int , string )" />
          <Method Sig="instance void AddRange([] class OleDbParameter )" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance bool Contains(class OleDbParameter )" />
          <Method Sig="instance void CopyTo([] class OleDbParameter , int )" />
          <Method Sig="instance int IndexOf(class OleDbParameter )" />
          <Method Sig="instance void Insert(int , class OleDbParameter )" />
          <Method Sig="instance void Remove(class OleDbParameter )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance bool get_IsFixedSize()" />
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance bool get_IsSynchronized()" />
          <Method Sig="instance object get_SyncRoot()" />
          <Method Sig="instance int Add(object )" />
          <Method Sig="instance void AddRange(class Array )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(object )" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance int IndexOf(string )" />
          <Method Sig="instance int IndexOf(object )" />
          <Method Sig="instance void Insert(int , object )" />
          <Method Sig="instance void Remove(object )" />
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance void RemoveAt(string )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OleDbPermission">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(struct PermissionState )" />
          <Method Sig="instance void .ctor(struct PermissionState , bool )" />
          <Method Sig="instance string get_Provider()" />
          <Method Sig="instance void set_Provider(string )" />
          <Method Sig="instance class IPermission Copy()" />
        </Type>
        <Type Name="OleDbPermissionAttribute">
          <Method Sig="instance void .ctor(struct SecurityAction )" />
          <Method Sig="instance string get_Provider()" />
          <Method Sig="instance void set_Provider(string )" />
          <Method Sig="instance class IPermission CreatePermission()" />
        </Type>
        <Type Name="OleDbRowUpdatedEventArgs">
          <Method Sig="instance void .ctor(class DataRow , class IDbCommand , struct StatementType , class DataTableMapping )" />
          <Method Sig="instance class OleDbCommand get_Command()" />
        </Type>
        <Type Name="OleDbRowUpdatedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class OleDbRowUpdatedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class OleDbRowUpdatedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="OleDbRowUpdatingEventArgs">
          <Method Sig="instance void .ctor(class DataRow , class IDbCommand , struct StatementType , class DataTableMapping )" />
          <Method Sig="instance class OleDbCommand get_Command()" />
          <Method Sig="instance void set_Command(class OleDbCommand )" />
        </Type>
        <Type Name="OleDbRowUpdatingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class OleDbRowUpdatingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class OleDbRowUpdatingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="OleDbSchemaGuid">
          <Method Sig="instance void .ctor()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="OleDbTransaction">
          <Method Sig="instance class OleDbConnection get_Connection()" />
          <Method Sig="instance struct IsolationLevel get_IsolationLevel()" />
          <Method Sig="instance class OleDbTransaction Begin(struct IsolationLevel )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class OleDbTransaction Begin()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Commit()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Rollback()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
      </Namespace>
      <Namespace Name="Sql">
        <Type Name="SqlDataSourceEnumerator">
          <Method Sig="class SqlDataSourceEnumerator get_Instance()" />
          <Method Sig="instance class DataTable GetDataSources()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlNotificationRequest">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string , string , int )" />
          <Method Sig="instance string get_Options()" />
          <Method Sig="instance void set_Options(string )" />
          <Method Sig="instance int get_Timeout()" />
          <Method Sig="instance void set_Timeout(int )" />
          <Method Sig="instance string get_UserData()" />
          <Method Sig="instance void set_UserData(string )" />
        </Type>
      </Namespace>
      <Namespace Name="SqlClient">
        <Type Name="OnChangeEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class SqlNotificationEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class SqlNotificationEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SqlRowsCopiedEventArgs">
          <Method Sig="instance void .ctor(in64 )" />
          <Method Sig="instance bool get_Abort()" />
          <Method Sig="instance void set_Abort(bool )" />
          <Method Sig="instance in64 get_RowsCopied()" />
        </Type>
        <Type Name="SqlRowsCopiedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class SqlRowsCopiedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class SqlRowsCopiedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SqlBulkCopy">
          <Method Sig="instance void .ctor(class SqlConnection )" />
          <Method Sig="instance void .ctor(class SqlConnection , struct SqlBulkCopyOptions , class SqlTransaction )" />
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , struct SqlBulkCopyOptions )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_BatchSize()" />
          <Method Sig="instance void set_BatchSize(int )" />
          <Method Sig="instance int get_BulkCopyTimeout()" />
          <Method Sig="instance void set_BulkCopyTimeout(int )" />
          <Method Sig="instance class SqlBulkCopyColumnMappingCollection get_ColumnMappings()" />
          <Method Sig="instance string get_DestinationTableName()" />
          <Method Sig="instance void set_DestinationTableName(string )" />
          <Method Sig="instance int get_NotifyAfter()" />
          <Method Sig="instance void set_NotifyAfter(int )" />
          <Method Sig="instance void add_SqlRowsCopied(class SqlRowsCopiedEventHandler )" />
          <Method Sig="instance void remove_SqlRowsCopied(class SqlRowsCopiedEventHandler )" />
          <Method Sig="instance void Close()" />
          <Method Sig="instance void WriteToServer(class IDataReader )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void WriteToServer(class DataTable )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void WriteToServer(class DataTable , struct DataRowState )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void WriteToServer([] class DataRow )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="SqlBulkCopyColumnMapping">
          <Method Sig="instance string get_DestinationColumn()" />
          <Method Sig="instance void set_DestinationColumn(string )" />
          <Method Sig="instance int get_DestinationOrdinal()" />
          <Method Sig="instance void set_DestinationOrdinal(int )" />
          <Method Sig="instance string get_SourceColumn()" />
          <Method Sig="instance void set_SourceColumn(string )" />
          <Method Sig="instance int get_SourceOrdinal()" />
          <Method Sig="instance void set_SourceOrdinal(int )" />
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string , string )" />
          <Method Sig="instance void .ctor(int , string )" />
          <Method Sig="instance void .ctor(string , int )" />
          <Method Sig="instance void .ctor(int , int )" />
        </Type>
        <Type Name="SqlBulkCopyColumnMappingCollection">
          <Method Sig="instance class SqlBulkCopyColumnMapping get_Item(int )" />
          <Method Sig="instance class SqlBulkCopyColumnMapping Add(class SqlBulkCopyColumnMapping )" />
          <Method Sig="instance class SqlBulkCopyColumnMapping Add(string , string )" />
          <Method Sig="instance class SqlBulkCopyColumnMapping Add(int , string )" />
          <Method Sig="instance class SqlBulkCopyColumnMapping Add(string , int )" />
          <Method Sig="instance class SqlBulkCopyColumnMapping Add(int , int )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(class SqlBulkCopyColumnMapping )" />
          <Method Sig="instance void CopyTo([] class SqlBulkCopyColumnMapping , int )" />
          <Method Sig="instance int IndexOf(class SqlBulkCopyColumnMapping )" />
          <Method Sig="instance void Insert(int , class SqlBulkCopyColumnMapping )" />
          <Method Sig="instance void Remove(class SqlBulkCopyColumnMapping )" />
          <Method Sig="instance void RemoveAt(int )" />
        </Type>
        <Type Name="SqlClientFactory">
          <Method Sig="instance bool get_CanCreateDataSourceEnumerator()" />
          <Method Sig="instance class DbCommand CreateCommand()" />
          <Method Sig="instance class DbCommandBuilder CreateCommandBuilder()" />
          <Method Sig="instance class DbConnection CreateConnection()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbConnectionStringBuilder CreateConnectionStringBuilder()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DbDataAdapter CreateDataAdapter()" />
          <Method Sig="instance class DbParameter CreateParameter()" />
          <Method Sig="instance class CodeAccessPermission CreatePermission(struct PermissionState )" />
          <Method Sig="instance class DbDataSourceEnumerator CreateDataSourceEnumerator()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlClientMetaDataCollectionNames">
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlClientPermission">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(struct PermissionState )" />
          <Method Sig="instance void .ctor(struct PermissionState , bool )" />
          <Method Sig="instance void Add(string , string , struct KeyRestrictionBehavior )" />
          <Method Sig="instance class IPermission Copy()" />
        </Type>
        <Type Name="SqlClientPermissionAttribute">
          <Method Sig="instance void .ctor(struct SecurityAction )" />
          <Method Sig="instance class IPermission CreatePermission()" />
        </Type>
        <Type Name="SqlCommand">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(string , class SqlConnection )" />
          <Method Sig="instance void .ctor(string , class SqlConnection , class SqlTransaction )" />
          <Method Sig="instance class SqlConnection get_Connection()" />
          <Method Sig="instance void set_Connection(class SqlConnection )" />
          <Method Sig="instance bool get_NotificationAutoEnlist()" />
          <Method Sig="instance void set_NotificationAutoEnlist(bool )" />
          <Method Sig="instance class SqlNotificationRequest get_Notification()" />
          <Method Sig="instance void set_Notification(class SqlNotificationRequest )" />
          <Method Sig="instance class SqlTransaction get_Transaction()" />
          <Method Sig="instance void set_Transaction(class SqlTransaction )" />
          <Method Sig="instance string get_CommandText()" />
          <Method Sig="instance void set_CommandText(string )" />
          <Method Sig="instance int get_CommandTimeout()" />
          <Method Sig="instance void set_CommandTimeout(int )" />
          <Method Sig="instance void ResetCommandTimeout()" />
          <Method Sig="instance struct CommandType get_CommandType()" />
          <Method Sig="instance void set_CommandType(struct CommandType )" />
          <Method Sig="instance bool get_DesignTimeVisible()" />
          <Method Sig="instance void set_DesignTimeVisible(bool )" />
          <Method Sig="instance class SqlParameterCollection get_Parameters()" />
          <Method Sig="instance struct UpdateRowSource get_UpdatedRowSource()" />
          <Method Sig="instance void set_UpdatedRowSource(struct UpdateRowSource )" />
          <Method Sig="instance void add_StatementCompleted(class StatementCompletedEventHandler )" />
          <Method Sig="instance void remove_StatementCompleted(class StatementCompletedEventHandler )" />
          <Method Sig="instance void Prepare()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Cancel()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlParameter CreateParameter()" />
          <Method Sig="instance object ExecuteScalar()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int ExecuteNonQuery()" />
          <Method Sig="instance class IAsyncResult BeginExecuteNonQuery()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IAsyncResult BeginExecuteNonQuery(class AsyncCallback , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int EndExecuteNonQuery(class IAsyncResult )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class XmlReader ExecuteXmlReader()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IAsyncResult BeginExecuteXmlReader()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IAsyncResult BeginExecuteXmlReader(class AsyncCallback , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class XmlReader EndExecuteXmlReader(class IAsyncResult )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IAsyncResult BeginExecuteReader()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IAsyncResult BeginExecuteReader(class AsyncCallback , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlDataReader ExecuteReader()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlDataReader ExecuteReader(struct CommandBehavior )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IAsyncResult BeginExecuteReader(struct CommandBehavior )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class IAsyncResult BeginExecuteReader(class AsyncCallback , object , struct CommandBehavior )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlDataReader EndExecuteReader(class IAsyncResult )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlCommand Clone()" />
        </Type>
        <Type Name="SqlCommandBuilder">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class SqlDataAdapter )" />
          <Method Sig="instance struct CatalogLocation get_CatalogLocation()" />
          <Method Sig="instance void set_CatalogLocation(struct CatalogLocation )" />
          <Method Sig="instance string get_CatalogSeparator()" />
          <Method Sig="instance void set_CatalogSeparator(string )" />
          <Method Sig="instance class SqlDataAdapter get_DataAdapter()" />
          <Method Sig="instance void set_DataAdapter(class SqlDataAdapter )" />
          <Method Sig="instance string get_QuotePrefix()" />
          <Method Sig="instance void set_QuotePrefix(string )" />
          <Method Sig="instance string get_QuoteSuffix()" />
          <Method Sig="instance void set_QuoteSuffix(string )" />
          <Method Sig="instance string get_SchemaSeparator()" />
          <Method Sig="instance void set_SchemaSeparator(string )" />
          <Method Sig="instance class SqlCommand GetInsertCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlCommand GetInsertCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlCommand GetUpdateCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlCommand GetUpdateCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlCommand GetDeleteCommand()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlCommand GetDeleteCommand(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void DeriveParameters(class SqlCommand )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string QuoteIdentifier(string )" />
          <Method Sig="instance string UnquoteIdentifier(string )" />
        </Type>
        <Type Name="SqlConnection">
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_StatisticsEnabled()" />
          <Method Sig="instance void set_StatisticsEnabled(bool )" />
          <Method Sig="instance string get_ConnectionString()" />
          <Method Sig="instance void set_ConnectionString(string )" />
          <Method Sig="instance int get_ConnectionTimeout()" />
          <Method Sig="instance string get_Database()" />
          <Method Sig="instance string get_DataSource()" />
          <Method Sig="instance int get_PacketSize()" />
          <Method Sig="instance string get_ServerVersion()" />
          <Method Sig="instance string get_WorkstationId()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="COMPUTERNAME" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void add_InfoMessage(class SqlInfoMessageEventHandler )" />
          <Method Sig="instance void remove_InfoMessage(class SqlInfoMessageEventHandler )" />
          <Method Sig="instance bool get_FireInfoMessageEventOnUserErrors()" />
          <Method Sig="instance void set_FireInfoMessageEventOnUserErrors(bool )" />
          <Method Sig="instance class SqlTransaction BeginTransaction()" />
          <Method Sig="instance class SqlTransaction BeginTransaction(struct IsolationLevel )" />
          <Method Sig="instance class SqlTransaction BeginTransaction(string )" />
          <Method Sig="instance class SqlTransaction BeginTransaction(struct IsolationLevel , string )" />
          <Method Sig="instance void ChangeDatabase(string )" />
          <Method Sig="void ClearAllPools()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ClearPool(class SqlConnection )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Close()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlCommand CreateCommand()" />
          <Method Sig="instance void EnlistDistributedTransaction(class ITransaction )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Open()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlAppDomain" />
                <IPermission version="1" class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Diagnostics.EventLogPermission, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void ChangePassword(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="NUMBER_OF_PROCESSORS" />
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Diagnostics.EventLogPermission, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void ResetStatistics()" />
          <Method Sig="instance class IDictionary RetrieveStatistics()" />
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct ConnectionState get_State()" />
          <Method Sig="instance void EnlistTransaction(class Transaction )" />
          <Method Sig="instance class DataTable GetSchema()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetSchema(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetSchema(string , [] string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SQLDebugging">
          <Method Sig="instance void .ctor()">
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet" Unrestricted="true" />
            </LinkDemand>
          </Method>
        </Type>
        <Type Name="SqlConnectionStringBuilder">
          <Method Sig="void .cctor()" />
          <Method Sig="instance void .ctor()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Item(string )" />
          <Method Sig="instance void set_Item(string , object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_ApplicationName()" />
          <Method Sig="instance void set_ApplicationName(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_AsynchronousProcessing()" />
          <Method Sig="instance void set_AsynchronousProcessing(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_AttachDBFilename()" />
          <Method Sig="instance void set_AttachDBFilename(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ConnectionReset()" />
          <Method Sig="instance void set_ConnectionReset(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_ContextConnection()" />
          <Method Sig="instance void set_ContextConnection(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_ConnectTimeout()" />
          <Method Sig="instance void set_ConnectTimeout(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_CurrentLanguage()" />
          <Method Sig="instance void set_CurrentLanguage(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_DataSource()" />
          <Method Sig="instance void set_DataSource(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Encrypt()" />
          <Method Sig="instance void set_Encrypt(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_TrustServerCertificate()" />
          <Method Sig="instance void set_TrustServerCertificate(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Enlist()" />
          <Method Sig="instance void set_Enlist(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_FailoverPartner()" />
          <Method Sig="instance void set_FailoverPartner(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_InitialCatalog()" />
          <Method Sig="instance void set_InitialCatalog(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IntegratedSecurity()" />
          <Method Sig="instance void set_IntegratedSecurity(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_LoadBalanceTimeout()" />
          <Method Sig="instance void set_LoadBalanceTimeout(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_MaxPoolSize()" />
          <Method Sig="instance void set_MaxPoolSize(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_MinPoolSize()" />
          <Method Sig="instance void set_MinPoolSize(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_MultipleActiveResultSets()" />
          <Method Sig="instance void set_MultipleActiveResultSets(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_NetworkLibrary()" />
          <Method Sig="instance void set_NetworkLibrary(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int get_PacketSize()" />
          <Method Sig="instance void set_PacketSize(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_Password()" />
          <Method Sig="instance void set_Password(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_PersistSecurityInfo()" />
          <Method Sig="instance void set_PersistSecurityInfo(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Pooling()" />
          <Method Sig="instance void set_Pooling(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_Replication()" />
          <Method Sig="instance void set_Replication(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_TypeSystemVersion()" />
          <Method Sig="instance void set_TypeSystemVersion(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_UserID()" />
          <Method Sig="instance void set_UserID(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_UserInstance()" />
          <Method Sig="instance void set_UserInstance(bool )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string get_WorkstationID()" />
          <Method Sig="instance void set_WorkstationID(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsFixedSize()" />
          <Method Sig="instance class ICollection get_Keys()" />
          <Method Sig="instance class ICollection get_Values()" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool ContainsKey(string )" />
          <Method Sig="instance bool Remove(string )" />
          <Method Sig="instance bool ShouldSerialize(string )" />
          <Method Sig="instance bool TryGetValue(string , &amp; object )" />
        </Type>
        <Type Name="SqlDataAdapter">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class SqlCommand )" />
          <Method Sig="instance void .ctor(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void .ctor(string , class SqlConnection )" />
          <Method Sig="instance class SqlCommand get_DeleteCommand()" />
          <Method Sig="instance void set_DeleteCommand(class SqlCommand )" />
          <Method Sig="instance class SqlCommand get_InsertCommand()" />
          <Method Sig="instance void set_InsertCommand(class SqlCommand )" />
          <Method Sig="instance class SqlCommand get_SelectCommand()" />
          <Method Sig="instance void set_SelectCommand(class SqlCommand )" />
          <Method Sig="instance int get_UpdateBatchSize()" />
          <Method Sig="instance void set_UpdateBatchSize(int )" />
          <Method Sig="instance class SqlCommand get_UpdateCommand()" />
          <Method Sig="instance void set_UpdateCommand(class SqlCommand )" />
          <Method Sig="instance void add_RowUpdated(class SqlRowUpdatedEventHandler )" />
          <Method Sig="instance void remove_RowUpdated(class SqlRowUpdatedEventHandler )" />
          <Method Sig="instance void add_RowUpdating(class SqlRowUpdatingEventHandler )" />
          <Method Sig="instance void remove_RowUpdating(class SqlRowUpdatingEventHandler )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlDataReader">
          <Method Sig="instance int get_Depth()" />
          <Method Sig="instance int get_FieldCount()" />
          <Method Sig="instance bool get_HasRows()" />
          <Method Sig="instance bool get_IsClosed()" />
          <Method Sig="instance int get_RecordsAffected()" />
          <Method Sig="instance int get_VisibleFieldCount()" />
          <Method Sig="instance object get_Item(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object get_Item(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Close()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string GetDataTypeName(int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance class Type GetFieldType(int )" />
          <Method Sig="instance string GetName(int )" />
          <Method Sig="instance class Type GetProviderSpecificFieldType(int )" />
          <Method Sig="instance int GetOrdinal(string )" />
          <Method Sig="instance object GetProviderSpecificValue(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetProviderSpecificValues([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class DataTable GetSchemaTable()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool GetBoolean(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance byte GetByte(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance in64 GetBytes(int , in64 , [] byte , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance char GetChar(int )" />
          <Method Sig="instance in64 GetChars(int , in64 , [] char , int , int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct DateTime GetDateTime(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Decimal GetDecimal(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance double GetDouble(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance float GetFloat(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct Guid GetGuid(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance short GetInt16(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetInt32(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance in64 GetInt64(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlBoolean GetSqlBoolean(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlBinary GetSqlBinary(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlByte GetSqlByte(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlBytes GetSqlBytes(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlChars GetSqlChars(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlDateTime GetSqlDateTime(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlDecimal GetSqlDecimal(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlGuid GetSqlGuid(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlDouble GetSqlDouble(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlInt16 GetSqlInt16(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlInt32 GetSqlInt32(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlInt64 GetSqlInt64(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlMoney GetSqlMoney(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlSingle GetSqlSingle(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance struct SqlString GetSqlString(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance class SqlXml GetSqlXml(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object GetSqlValue(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetSqlValues([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance string GetString(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance object GetValue(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance int GetValues([] object )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool IsDBNull(int )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool NextResult()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool Read()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
        </Type>
        <Type Name="SqlDependency">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class SqlCommand )" />
          <Method Sig="instance void .ctor(class SqlCommand , string , int )" />
          <Method Sig="instance bool get_HasChanges()" />
          <Method Sig="instance string get_Id()" />
          <Method Sig="instance void add_OnChange(class OnChangeEventHandler )" />
          <Method Sig="instance void remove_OnChange(class OnChangeEventHandler )" />
          <Method Sig="instance void AddCommandDependency(class SqlCommand )" />
          <Method Sig="bool Start(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Diagnostics.EventLogPermission, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool Start(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Diagnostics.EventLogPermission, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool Stop(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="bool Stop(string , string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlError">
          <Method Sig="instance string ToString()" />
          <Method Sig="instance string get_Source()" />
          <Method Sig="instance int get_Number()" />
          <Method Sig="instance byte get_State()" />
          <Method Sig="instance byte get_Class()" />
          <Method Sig="instance string get_Server()" />
          <Method Sig="instance string get_Message()" />
          <Method Sig="instance string get_Procedure()" />
          <Method Sig="instance int get_LineNumber()" />
        </Type>
        <Type Name="SqlErrorCollection">
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance void CopyTo([] class SqlError , int )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance class SqlError get_Item(int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
        </Type>
        <Type Name="SqlException">
          <Method Sig="instance void GetObjectData(class SerializationInfo , struct StreamingContext )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
            <LinkDemand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="SerializationFormatter" />
              </PermissionSet>
            </LinkDemand>
          </Method>
          <Method Sig="instance class SqlErrorCollection get_Errors()" />
          <Method Sig="instance byte get_Class()" />
          <Method Sig="instance int get_LineNumber()" />
          <Method Sig="instance int get_Number()" />
          <Method Sig="instance string get_Procedure()" />
          <Method Sig="instance string get_Server()" />
          <Method Sig="instance byte get_State()" />
          <Method Sig="instance string get_Source()" />
        </Type>
        <Type Name="SqlInfoMessageEventArgs">
          <Method Sig="instance class SqlErrorCollection get_Errors()" />
          <Method Sig="instance string get_Message()" />
          <Method Sig="instance string get_Source()" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="SqlInfoMessageEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class SqlInfoMessageEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class SqlInfoMessageEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SqlNotificationEventArgs">
          <Method Sig="instance void .ctor(struct SqlNotificationType , struct SqlNotificationInfo , struct SqlNotificationSource )" />
          <Method Sig="instance struct SqlNotificationType get_Type()" />
          <Method Sig="instance struct SqlNotificationInfo get_Info()" />
          <Method Sig="instance struct SqlNotificationSource get_Source()" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlParameter">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string , struct SqlDbType , int , struct ParameterDirection , bool , byte , byte , string , struct DataRowVersion , object )" />
          <Method Sig="instance void .ctor(string , struct SqlDbType , int , struct ParameterDirection , byte , byte , string , struct DataRowVersion , bool , object , string , string , string )" />
          <Method Sig="instance void .ctor(string , struct SqlDbType )" />
          <Method Sig="instance void .ctor(string , object )" />
          <Method Sig="instance void .ctor(string , struct SqlDbType , int )" />
          <Method Sig="instance void .ctor(string , struct SqlDbType , int , string )" />
          <Method Sig="instance struct SqlCompareOptions get_CompareInfo()" />
          <Method Sig="instance void set_CompareInfo(struct SqlCompareOptions )" />
          <Method Sig="instance string get_XmlSchemaCollectionDatabase()" />
          <Method Sig="instance void set_XmlSchemaCollectionDatabase(string )" />
          <Method Sig="instance string get_XmlSchemaCollectionOwningSchema()" />
          <Method Sig="instance void set_XmlSchemaCollectionOwningSchema(string )" />
          <Method Sig="instance string get_XmlSchemaCollectionName()" />
          <Method Sig="instance void set_XmlSchemaCollectionName(string )" />
          <Method Sig="instance struct DbType get_DbType()" />
          <Method Sig="instance void set_DbType(struct DbType )" />
          <Method Sig="instance void ResetDbType()" />
          <Method Sig="instance int get_LocaleId()" />
          <Method Sig="instance void set_LocaleId(int )" />
          <Method Sig="instance string get_ParameterName()" />
          <Method Sig="instance void set_ParameterName(string )" />
          <Method Sig="instance byte get_Precision()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Precision(byte )" />
          <Method Sig="instance byte get_Scale()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Scale(byte )" />
          <Method Sig="instance struct SqlDbType get_SqlDbType()" />
          <Method Sig="instance void set_SqlDbType(struct SqlDbType )" />
          <Method Sig="instance void ResetSqlDbType()" />
          <Method Sig="instance object get_SqlValue()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_SqlValue(object )" />
          <Method Sig="instance string get_UdtTypeName()" />
          <Method Sig="instance void set_UdtTypeName(string )" />
          <Method Sig="instance object get_Value()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Value(object )" />
          <Method Sig="instance struct ParameterDirection get_Direction()" />
          <Method Sig="instance void set_Direction(struct ParameterDirection )" />
          <Method Sig="instance bool get_IsNullable()" />
          <Method Sig="instance void set_IsNullable(bool )" />
          <Method Sig="instance int get_Offset()" />
          <Method Sig="instance void set_Offset(int )" />
          <Method Sig="instance int get_Size()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void set_Size(int )" />
          <Method Sig="instance string get_SourceColumn()" />
          <Method Sig="instance void set_SourceColumn(string )" />
          <Method Sig="instance bool get_SourceColumnNullMapping()" />
          <Method Sig="instance void set_SourceColumnNullMapping(bool )" />
          <Method Sig="instance struct DataRowVersion get_SourceVersion()" />
          <Method Sig="instance void set_SourceVersion(struct DataRowVersion )" />
          <Method Sig="instance string ToString()" />
        </Type>
        <Type Name="SqlParameterCollection">
          <Method Sig="instance class SqlParameter get_Item(int )" />
          <Method Sig="instance void set_Item(int , class SqlParameter )" />
          <Method Sig="instance class SqlParameter get_Item(string )" />
          <Method Sig="instance void set_Item(string , class SqlParameter )" />
          <Method Sig="instance class SqlParameter Add(class SqlParameter )" />
          <Method Sig="instance class SqlParameter Add(string , object )" />
          <Method Sig="instance class SqlParameter AddWithValue(string , object )" />
          <Method Sig="instance class SqlParameter Add(string , struct SqlDbType )" />
          <Method Sig="instance class SqlParameter Add(string , struct SqlDbType , int )" />
          <Method Sig="instance class SqlParameter Add(string , struct SqlDbType , int , string )" />
          <Method Sig="instance void AddRange([] class SqlParameter )" />
          <Method Sig="instance bool Contains(string )" />
          <Method Sig="instance bool Contains(class SqlParameter )" />
          <Method Sig="instance void CopyTo([] class SqlParameter , int )" />
          <Method Sig="instance int IndexOf(class SqlParameter )" />
          <Method Sig="instance void Insert(int , class SqlParameter )" />
          <Method Sig="instance void Remove(class SqlParameter )" />
          <Method Sig="instance int get_Count()" />
          <Method Sig="instance bool get_IsFixedSize()" />
          <Method Sig="instance bool get_IsReadOnly()" />
          <Method Sig="instance bool get_IsSynchronized()" />
          <Method Sig="instance object get_SyncRoot()" />
          <Method Sig="instance int Add(object )" />
          <Method Sig="instance void AddRange(class Array )" />
          <Method Sig="instance void Clear()" />
          <Method Sig="instance bool Contains(object )" />
          <Method Sig="instance void CopyTo(class Array , int )" />
          <Method Sig="instance class IEnumerator GetEnumerator()" />
          <Method Sig="instance int IndexOf(string )" />
          <Method Sig="instance int IndexOf(object )" />
          <Method Sig="instance void Insert(int , object )" />
          <Method Sig="instance void Remove(object )" />
          <Method Sig="instance void RemoveAt(int )" />
          <Method Sig="instance void RemoveAt(string )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlRowUpdatedEventArgs">
          <Method Sig="instance void .ctor(class DataRow , class IDbCommand , struct StatementType , class DataTableMapping )" />
          <Method Sig="instance class SqlCommand get_Command()" />
        </Type>
        <Type Name="SqlRowUpdatedEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class SqlRowUpdatedEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class SqlRowUpdatedEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SqlRowUpdatingEventArgs">
          <Method Sig="instance void .ctor(class DataRow , class IDbCommand , struct StatementType , class DataTableMapping )" />
          <Method Sig="instance class SqlCommand get_Command()" />
          <Method Sig="instance void set_Command(class SqlCommand )" />
        </Type>
        <Type Name="SqlRowUpdatingEventHandler">
          <Method Sig="instance void .ctor(object , intptr )" />
          <Method Sig="instance void Invoke(object , class SqlRowUpdatingEventArgs )" />
          <Method Sig="instance class IAsyncResult BeginInvoke(object , class SqlRowUpdatingEventArgs , class AsyncCallback , object )" />
          <Method Sig="instance void EndInvoke(class IAsyncResult )" />
        </Type>
        <Type Name="SqlTransaction">
          <Method Sig="instance class SqlConnection get_Connection()" />
          <Method Sig="instance struct IsolationLevel get_IsolationLevel()" />
          <Method Sig="instance void Commit()" />
          <Method Sig="instance void Rollback()" />
          <Method Sig="instance void Rollback(string )">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
                <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
                <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="UnmanagedCode, ControlEvidence" />
                <IPermission version="1" class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance void Save(string )" />
        </Type>
      </Namespace>
      <Namespace Name="SqlTypes">
        <Type Name="SqlBinary">
          <Method Sig="instance void .ctor([] byte )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance [] byte get_Value()" />
          <Method Sig="instance byte get_Item(int )" />
          <Method Sig="instance int get_Length()" />
          <Method Sig="struct SqlBinary op_Implicit([] byte )" />
          <Method Sig="[] byte op_Explicit(struct SqlBinary )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlBinary op_Addition(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBinary op_Explicit(struct SqlGuid )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBinary Add(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBinary Concat(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlBinary , struct SqlBinary )" />
          <Method Sig="instance struct SqlGuid ToSqlGuid()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlBinary )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlBoolean">
          <Method Sig="instance void .ctor(bool )" />
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance bool get_Value()" />
          <Method Sig="instance bool get_IsTrue()" />
          <Method Sig="instance bool get_IsFalse()" />
          <Method Sig="struct SqlBoolean op_Implicit(bool )" />
          <Method Sig="bool op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_LogicalNot(struct SqlBoolean )" />
          <Method Sig="bool op_True(struct SqlBoolean )" />
          <Method Sig="bool op_False(struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_BitwiseAnd(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_BitwiseOr(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="instance byte get_ByteValue()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlBoolean Parse(string )" />
          <Method Sig="struct SqlBoolean op_OnesComplement(struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_ExclusiveOr(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_Explicit(struct SqlByte )" />
          <Method Sig="struct SqlBoolean op_Explicit(struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean op_Explicit(struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean op_Explicit(struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean op_Explicit(struct SqlDouble )" />
          <Method Sig="struct SqlBoolean op_Explicit(struct SqlSingle )" />
          <Method Sig="struct SqlBoolean op_Explicit(struct SqlMoney )" />
          <Method Sig="struct SqlBoolean op_Explicit(struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean OnesComplement(struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean And(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean Or(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean Xor(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEquals(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="struct SqlBoolean LessThanOrEquals(struct SqlBoolean , struct SqlBoolean )" />
          <Method Sig="instance struct SqlByte ToSqlByte()" />
          <Method Sig="instance struct SqlDouble ToSqlDouble()" />
          <Method Sig="instance struct SqlInt16 ToSqlInt16()" />
          <Method Sig="instance struct SqlInt32 ToSqlInt32()" />
          <Method Sig="instance struct SqlInt64 ToSqlInt64()" />
          <Method Sig="instance struct SqlMoney ToSqlMoney()" />
          <Method Sig="instance struct SqlDecimal ToSqlDecimal()" />
          <Method Sig="instance struct SqlSingle ToSqlSingle()" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlBoolean )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlByte">
          <Method Sig="instance void .ctor(byte )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance byte get_Value()" />
          <Method Sig="struct SqlByte op_Implicit(byte )" />
          <Method Sig="byte op_Explicit(struct SqlByte )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlByte Parse(string )" />
          <Method Sig="struct SqlByte op_OnesComplement(struct SqlByte )" />
          <Method Sig="struct SqlByte op_Addition(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte op_Subtraction(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte op_Multiply(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte op_Division(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte op_Modulus(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte op_BitwiseAnd(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte op_BitwiseOr(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte op_ExclusiveOr(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlByte op_Explicit(struct SqlMoney )" />
          <Method Sig="struct SqlByte op_Explicit(struct SqlInt16 )" />
          <Method Sig="struct SqlByte op_Explicit(struct SqlInt32 )" />
          <Method Sig="struct SqlByte op_Explicit(struct SqlInt64 )" />
          <Method Sig="struct SqlByte op_Explicit(struct SqlSingle )" />
          <Method Sig="struct SqlByte op_Explicit(struct SqlDouble )" />
          <Method Sig="struct SqlByte op_Explicit(struct SqlDecimal )" />
          <Method Sig="struct SqlByte op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte OnesComplement(struct SqlByte )" />
          <Method Sig="struct SqlByte Add(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte Subtract(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte Multiply(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte Divide(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte Mod(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte Modulus(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte BitwiseAnd(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte BitwiseOr(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlByte Xor(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlByte , struct SqlByte )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlByte , struct SqlByte )" />
          <Method Sig="instance struct SqlBoolean ToSqlBoolean()" />
          <Method Sig="instance struct SqlDouble ToSqlDouble()" />
          <Method Sig="instance struct SqlInt16 ToSqlInt16()" />
          <Method Sig="instance struct SqlInt32 ToSqlInt32()" />
          <Method Sig="instance struct SqlInt64 ToSqlInt64()" />
          <Method Sig="instance struct SqlMoney ToSqlMoney()" />
          <Method Sig="instance struct SqlDecimal ToSqlDecimal()" />
          <Method Sig="instance struct SqlSingle ToSqlSingle()" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlByte )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlBytes">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor([] byte )" />
          <Method Sig="instance void .ctor(struct SqlBinary )" />
          <Method Sig="instance void .ctor(class Stream )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance [] byte get_Buffer()" />
          <Method Sig="instance in64 get_Length()" />
          <Method Sig="instance in64 get_MaxLength()" />
          <Method Sig="instance [] byte get_Value()" />
          <Method Sig="instance byte get_Item(in64 )" />
          <Method Sig="instance void set_Item(in64 , byte )" />
          <Method Sig="instance struct StorageState get_Storage()" />
          <Method Sig="instance class Stream get_Stream()" />
          <Method Sig="instance void set_Stream(class Stream )" />
          <Method Sig="instance void SetNull()" />
          <Method Sig="instance void SetLength(in64 )" />
          <Method Sig="instance in64 Read(in64 , [] byte , int , int )" />
          <Method Sig="instance void Write(in64 , [] byte , int , int )" />
          <Method Sig="instance struct SqlBinary ToSqlBinary()" />
          <Method Sig="struct SqlBinary op_Explicit(class SqlBytes )" />
          <Method Sig="class SqlBytes op_Explicit(struct SqlBinary )" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="class SqlBytes get_Null()" />
        </Type>
        <Type Name="SqlChars">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor([] char )" />
          <Method Sig="instance void .ctor(struct SqlString )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance [] char get_Buffer()" />
          <Method Sig="instance in64 get_Length()" />
          <Method Sig="instance in64 get_MaxLength()" />
          <Method Sig="instance [] char get_Value()" />
          <Method Sig="instance char get_Item(in64 )" />
          <Method Sig="instance void set_Item(in64 , char )" />
          <Method Sig="instance struct StorageState get_Storage()" />
          <Method Sig="instance void SetNull()" />
          <Method Sig="instance void SetLength(in64 )" />
          <Method Sig="instance in64 Read(in64 , [] char , int , int )" />
          <Method Sig="instance void Write(in64 , [] char , int , int )" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="struct SqlString op_Explicit(class SqlChars )" />
          <Method Sig="class SqlChars op_Explicit(struct SqlString )" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="class SqlChars get_Null()" />
        </Type>
        <Type Name="SqlDateTime">
          <Method Sig="instance void .ctor(struct DateTime )" />
          <Method Sig="instance void .ctor(int , int , int )" />
          <Method Sig="instance void .ctor(int , int , int , int , int , int )" />
          <Method Sig="instance void .ctor(int , int , int , int , int , int , double )" />
          <Method Sig="instance void .ctor(int , int , int , int , int , int , int )" />
          <Method Sig="instance void .ctor(int , int )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance struct DateTime get_Value()" />
          <Method Sig="instance int get_DayTicks()" />
          <Method Sig="instance int get_TimeTicks()" />
          <Method Sig="struct SqlDateTime op_Implicit(struct DateTime )" />
          <Method Sig="struct DateTime op_Explicit(struct SqlDateTime )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlDateTime Parse(string )" />
          <Method Sig="struct SqlDateTime op_Addition(struct SqlDateTime , struct TimeSpan )" />
          <Method Sig="struct SqlDateTime op_Subtraction(struct SqlDateTime , struct TimeSpan )" />
          <Method Sig="struct SqlDateTime Add(struct SqlDateTime , struct TimeSpan )" />
          <Method Sig="struct SqlDateTime Subtract(struct SqlDateTime , struct TimeSpan )" />
          <Method Sig="struct SqlDateTime op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlDateTime , struct SqlDateTime )" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlDateTime )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlDecimal">
          <Method Sig="instance void .ctor(struct Decimal )" />
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance void .ctor(in64 )" />
          <Method Sig="instance void .ctor(byte , byte , bool , [] int )" />
          <Method Sig="instance void .ctor(byte , byte , bool , int , int , int , int )" />
          <Method Sig="instance void .ctor(double )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance struct Decimal get_Value()" />
          <Method Sig="instance bool get_IsPositive()" />
          <Method Sig="instance byte get_Precision()" />
          <Method Sig="instance byte get_Scale()" />
          <Method Sig="instance [] int get_Data()" />
          <Method Sig="instance [] byte get_BinData()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlDecimal Parse(string )" />
          <Method Sig="instance double ToDouble()" />
          <Method Sig="struct SqlDecimal op_Implicit(struct Decimal )" />
          <Method Sig="struct SqlDecimal op_Explicit(double )" />
          <Method Sig="struct SqlDecimal op_Implicit(in64 )" />
          <Method Sig="struct Decimal op_Explicit(struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal op_UnaryNegation(struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal op_Addition(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal op_Subtraction(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal op_Multiply(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal op_Division(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlDecimal op_Implicit(struct SqlByte )" />
          <Method Sig="struct SqlDecimal op_Implicit(struct SqlInt16 )" />
          <Method Sig="struct SqlDecimal op_Implicit(struct SqlInt32 )" />
          <Method Sig="struct SqlDecimal op_Implicit(struct SqlInt64 )" />
          <Method Sig="struct SqlDecimal op_Implicit(struct SqlMoney )" />
          <Method Sig="struct SqlDecimal op_Explicit(struct SqlSingle )" />
          <Method Sig="struct SqlDecimal op_Explicit(struct SqlDouble )" />
          <Method Sig="struct SqlDecimal op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlDecimal AdjustScale(struct SqlDecimal , int , bool )" />
          <Method Sig="struct SqlDecimal ConvertToPrecScale(struct SqlDecimal , int , int )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal Add(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal Subtract(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal Multiply(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal Divide(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlDecimal , struct SqlDecimal )" />
          <Method Sig="instance struct SqlBoolean ToSqlBoolean()" />
          <Method Sig="instance struct SqlByte ToSqlByte()" />
          <Method Sig="instance struct SqlDouble ToSqlDouble()" />
          <Method Sig="instance struct SqlInt16 ToSqlInt16()" />
          <Method Sig="instance struct SqlInt32 ToSqlInt32()" />
          <Method Sig="instance struct SqlInt64 ToSqlInt64()" />
          <Method Sig="instance struct SqlMoney ToSqlMoney()" />
          <Method Sig="instance struct SqlSingle ToSqlSingle()" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="struct SqlDecimal Abs(struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal Ceiling(struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal Floor(struct SqlDecimal )" />
          <Method Sig="struct SqlInt32 Sign(struct SqlDecimal )" />
          <Method Sig="struct SqlDecimal Round(struct SqlDecimal , int )" />
          <Method Sig="struct SqlDecimal Truncate(struct SqlDecimal , int )" />
          <Method Sig="struct SqlDecimal Power(struct SqlDecimal , double )" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlDecimal )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlDouble">
          <Method Sig="instance void .ctor(double )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance double get_Value()" />
          <Method Sig="struct SqlDouble op_Implicit(double )" />
          <Method Sig="double op_Explicit(struct SqlDouble )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlDouble Parse(string )" />
          <Method Sig="struct SqlDouble op_UnaryNegation(struct SqlDouble )" />
          <Method Sig="struct SqlDouble op_Addition(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlDouble op_Subtraction(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlDouble op_Multiply(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlDouble op_Division(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlDouble op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlDouble op_Implicit(struct SqlByte )" />
          <Method Sig="struct SqlDouble op_Implicit(struct SqlInt16 )" />
          <Method Sig="struct SqlDouble op_Implicit(struct SqlInt32 )" />
          <Method Sig="struct SqlDouble op_Implicit(struct SqlInt64 )" />
          <Method Sig="struct SqlDouble op_Implicit(struct SqlSingle )" />
          <Method Sig="struct SqlDouble op_Implicit(struct SqlMoney )" />
          <Method Sig="struct SqlDouble op_Implicit(struct SqlDecimal )" />
          <Method Sig="struct SqlDouble op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlDouble Add(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlDouble Subtract(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlDouble Multiply(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlDouble Divide(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlDouble , struct SqlDouble )" />
          <Method Sig="instance struct SqlBoolean ToSqlBoolean()" />
          <Method Sig="instance struct SqlByte ToSqlByte()" />
          <Method Sig="instance struct SqlInt16 ToSqlInt16()" />
          <Method Sig="instance struct SqlInt32 ToSqlInt32()" />
          <Method Sig="instance struct SqlInt64 ToSqlInt64()" />
          <Method Sig="instance struct SqlMoney ToSqlMoney()" />
          <Method Sig="instance struct SqlDecimal ToSqlDecimal()" />
          <Method Sig="instance struct SqlSingle ToSqlSingle()" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlDouble )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlGuid">
          <Method Sig="instance void .ctor([] byte )" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(struct Guid )" />
          <Method Sig="instance void .ctor(int , short , short , byte , byte , byte , byte , byte , byte , byte , byte )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance struct Guid get_Value()" />
          <Method Sig="struct SqlGuid op_Implicit(struct Guid )" />
          <Method Sig="struct Guid op_Explicit(struct SqlGuid )" />
          <Method Sig="instance [] byte ToByteArray()" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlGuid Parse(string )" />
          <Method Sig="struct SqlGuid op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlGuid op_Explicit(struct SqlBinary )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlGuid , struct SqlGuid )" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance struct SqlBinary ToSqlBinary()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlGuid )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlInt16">
          <Method Sig="instance void .ctor(short )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance short get_Value()" />
          <Method Sig="struct SqlInt16 op_Implicit(short )" />
          <Method Sig="short op_Explicit(struct SqlInt16 )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlInt16 Parse(string )" />
          <Method Sig="struct SqlInt16 op_UnaryNegation(struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_OnesComplement(struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_Addition(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_Subtraction(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_Multiply(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_Division(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_Modulus(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_BitwiseAnd(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_BitwiseOr(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_ExclusiveOr(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlInt16 op_Implicit(struct SqlByte )" />
          <Method Sig="struct SqlInt16 op_Explicit(struct SqlInt32 )" />
          <Method Sig="struct SqlInt16 op_Explicit(struct SqlInt64 )" />
          <Method Sig="struct SqlInt16 op_Explicit(struct SqlSingle )" />
          <Method Sig="struct SqlInt16 op_Explicit(struct SqlDouble )" />
          <Method Sig="struct SqlInt16 op_Explicit(struct SqlMoney )" />
          <Method Sig="struct SqlInt16 op_Explicit(struct SqlDecimal )" />
          <Method Sig="struct SqlInt16 op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 OnesComplement(struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 Add(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 Subtract(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 Multiply(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 Divide(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 Mod(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 Modulus(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 BitwiseAnd(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 BitwiseOr(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlInt16 Xor(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlInt16 , struct SqlInt16 )" />
          <Method Sig="instance struct SqlBoolean ToSqlBoolean()" />
          <Method Sig="instance struct SqlByte ToSqlByte()" />
          <Method Sig="instance struct SqlDouble ToSqlDouble()" />
          <Method Sig="instance struct SqlInt32 ToSqlInt32()" />
          <Method Sig="instance struct SqlInt64 ToSqlInt64()" />
          <Method Sig="instance struct SqlMoney ToSqlMoney()" />
          <Method Sig="instance struct SqlDecimal ToSqlDecimal()" />
          <Method Sig="instance struct SqlSingle ToSqlSingle()" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlInt16 )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlInt32">
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance int get_Value()" />
          <Method Sig="struct SqlInt32 op_Implicit(int )" />
          <Method Sig="int op_Explicit(struct SqlInt32 )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlInt32 Parse(string )" />
          <Method Sig="struct SqlInt32 op_UnaryNegation(struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_OnesComplement(struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_Addition(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_Subtraction(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_Multiply(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_Division(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_Modulus(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_BitwiseAnd(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_BitwiseOr(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_ExclusiveOr(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlInt32 op_Implicit(struct SqlByte )" />
          <Method Sig="struct SqlInt32 op_Implicit(struct SqlInt16 )" />
          <Method Sig="struct SqlInt32 op_Explicit(struct SqlInt64 )" />
          <Method Sig="struct SqlInt32 op_Explicit(struct SqlSingle )" />
          <Method Sig="struct SqlInt32 op_Explicit(struct SqlDouble )" />
          <Method Sig="struct SqlInt32 op_Explicit(struct SqlMoney )" />
          <Method Sig="struct SqlInt32 op_Explicit(struct SqlDecimal )" />
          <Method Sig="struct SqlInt32 op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 OnesComplement(struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 Add(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 Subtract(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 Multiply(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 Divide(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 Mod(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 Modulus(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 BitwiseAnd(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 BitwiseOr(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlInt32 Xor(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlInt32 , struct SqlInt32 )" />
          <Method Sig="instance struct SqlBoolean ToSqlBoolean()" />
          <Method Sig="instance struct SqlByte ToSqlByte()" />
          <Method Sig="instance struct SqlDouble ToSqlDouble()" />
          <Method Sig="instance struct SqlInt16 ToSqlInt16()" />
          <Method Sig="instance struct SqlInt64 ToSqlInt64()" />
          <Method Sig="instance struct SqlMoney ToSqlMoney()" />
          <Method Sig="instance struct SqlDecimal ToSqlDecimal()" />
          <Method Sig="instance struct SqlSingle ToSqlSingle()" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlInt32 )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlInt64">
          <Method Sig="instance void .ctor(in64 )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance in64 get_Value()" />
          <Method Sig="struct SqlInt64 op_Implicit(in64 )" />
          <Method Sig="in64 op_Explicit(struct SqlInt64 )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlInt64 Parse(string )" />
          <Method Sig="struct SqlInt64 op_UnaryNegation(struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_OnesComplement(struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_Addition(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_Subtraction(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_Multiply(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_Division(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_Modulus(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_BitwiseAnd(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_BitwiseOr(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_ExclusiveOr(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlInt64 op_Implicit(struct SqlByte )" />
          <Method Sig="struct SqlInt64 op_Implicit(struct SqlInt16 )" />
          <Method Sig="struct SqlInt64 op_Implicit(struct SqlInt32 )" />
          <Method Sig="struct SqlInt64 op_Explicit(struct SqlSingle )" />
          <Method Sig="struct SqlInt64 op_Explicit(struct SqlDouble )" />
          <Method Sig="struct SqlInt64 op_Explicit(struct SqlMoney )" />
          <Method Sig="struct SqlInt64 op_Explicit(struct SqlDecimal )" />
          <Method Sig="struct SqlInt64 op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 OnesComplement(struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 Add(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 Subtract(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 Multiply(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 Divide(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 Mod(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 Modulus(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 BitwiseAnd(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 BitwiseOr(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlInt64 Xor(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlInt64 , struct SqlInt64 )" />
          <Method Sig="instance struct SqlBoolean ToSqlBoolean()" />
          <Method Sig="instance struct SqlByte ToSqlByte()" />
          <Method Sig="instance struct SqlDouble ToSqlDouble()" />
          <Method Sig="instance struct SqlInt16 ToSqlInt16()" />
          <Method Sig="instance struct SqlInt32 ToSqlInt32()" />
          <Method Sig="instance struct SqlMoney ToSqlMoney()" />
          <Method Sig="instance struct SqlDecimal ToSqlDecimal()" />
          <Method Sig="instance struct SqlSingle ToSqlSingle()" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlInt64 )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlMoney">
          <Method Sig="instance void .ctor(int )" />
          <Method Sig="instance void .ctor(in64 )" />
          <Method Sig="instance void .ctor(struct Decimal )" />
          <Method Sig="instance void .ctor(double )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance struct Decimal get_Value()" />
          <Method Sig="instance struct Decimal ToDecimal()" />
          <Method Sig="instance in64 ToInt64()" />
          <Method Sig="instance int ToInt32()" />
          <Method Sig="instance double ToDouble()" />
          <Method Sig="struct SqlMoney op_Implicit(struct Decimal )" />
          <Method Sig="struct SqlMoney op_Explicit(double )" />
          <Method Sig="struct SqlMoney op_Implicit(in64 )" />
          <Method Sig="struct Decimal op_Explicit(struct SqlMoney )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlMoney Parse(string )" />
          <Method Sig="struct SqlMoney op_UnaryNegation(struct SqlMoney )" />
          <Method Sig="struct SqlMoney op_Addition(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlMoney op_Subtraction(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlMoney op_Multiply(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlMoney op_Division(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlMoney op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlMoney op_Implicit(struct SqlByte )" />
          <Method Sig="struct SqlMoney op_Implicit(struct SqlInt16 )" />
          <Method Sig="struct SqlMoney op_Implicit(struct SqlInt32 )" />
          <Method Sig="struct SqlMoney op_Implicit(struct SqlInt64 )" />
          <Method Sig="struct SqlMoney op_Explicit(struct SqlSingle )" />
          <Method Sig="struct SqlMoney op_Explicit(struct SqlDouble )" />
          <Method Sig="struct SqlMoney op_Explicit(struct SqlDecimal )" />
          <Method Sig="struct SqlMoney op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlMoney Add(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlMoney Subtract(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlMoney Multiply(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlMoney Divide(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlMoney , struct SqlMoney )" />
          <Method Sig="instance struct SqlBoolean ToSqlBoolean()" />
          <Method Sig="instance struct SqlByte ToSqlByte()" />
          <Method Sig="instance struct SqlDouble ToSqlDouble()" />
          <Method Sig="instance struct SqlInt16 ToSqlInt16()" />
          <Method Sig="instance struct SqlInt32 ToSqlInt32()" />
          <Method Sig="instance struct SqlInt64 ToSqlInt64()" />
          <Method Sig="instance struct SqlDecimal ToSqlDecimal()" />
          <Method Sig="instance struct SqlSingle ToSqlSingle()" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlMoney )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlSingle">
          <Method Sig="instance void .ctor(float )" />
          <Method Sig="instance void .ctor(double )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance float get_Value()" />
          <Method Sig="struct SqlSingle op_Implicit(float )" />
          <Method Sig="float op_Explicit(struct SqlSingle )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="struct SqlSingle Parse(string )" />
          <Method Sig="struct SqlSingle op_UnaryNegation(struct SqlSingle )" />
          <Method Sig="struct SqlSingle op_Addition(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlSingle op_Subtraction(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlSingle op_Multiply(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlSingle op_Division(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlSingle op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlSingle op_Implicit(struct SqlByte )" />
          <Method Sig="struct SqlSingle op_Implicit(struct SqlInt16 )" />
          <Method Sig="struct SqlSingle op_Implicit(struct SqlInt32 )" />
          <Method Sig="struct SqlSingle op_Implicit(struct SqlInt64 )" />
          <Method Sig="struct SqlSingle op_Implicit(struct SqlMoney )" />
          <Method Sig="struct SqlSingle op_Implicit(struct SqlDecimal )" />
          <Method Sig="struct SqlSingle op_Explicit(struct SqlDouble )" />
          <Method Sig="struct SqlSingle op_Explicit(struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlSingle Add(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlSingle Subtract(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlSingle Multiply(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlSingle Divide(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlSingle , struct SqlSingle )" />
          <Method Sig="instance struct SqlBoolean ToSqlBoolean()" />
          <Method Sig="instance struct SqlByte ToSqlByte()" />
          <Method Sig="instance struct SqlDouble ToSqlDouble()" />
          <Method Sig="instance struct SqlInt16 ToSqlInt16()" />
          <Method Sig="instance struct SqlInt32 ToSqlInt32()" />
          <Method Sig="instance struct SqlInt64 ToSqlInt64()" />
          <Method Sig="instance struct SqlMoney ToSqlMoney()" />
          <Method Sig="instance struct SqlDecimal ToSqlDecimal()" />
          <Method Sig="instance struct SqlString ToSqlString()" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlSingle )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlString">
          <Method Sig="instance void .ctor(int , struct SqlCompareOptions , [] byte , int , int , bool )" />
          <Method Sig="instance void .ctor(int , struct SqlCompareOptions , [] byte , bool )" />
          <Method Sig="instance void .ctor(int , struct SqlCompareOptions , [] byte , int , int )" />
          <Method Sig="instance void .ctor(int , struct SqlCompareOptions , [] byte )" />
          <Method Sig="instance void .ctor(string , int , struct SqlCompareOptions )" />
          <Method Sig="instance void .ctor(string , int )" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance string get_Value()" />
          <Method Sig="instance int get_LCID()" />
          <Method Sig="instance class CultureInfo get_CultureInfo()" />
          <Method Sig="instance class CompareInfo get_CompareInfo()" />
          <Method Sig="instance struct SqlCompareOptions get_SqlCompareOptions()" />
          <Method Sig="struct SqlString op_Implicit(string )" />
          <Method Sig="string op_Explicit(struct SqlString )" />
          <Method Sig="instance string ToString()" />
          <Method Sig="instance [] byte GetUnicodeBytes()" />
          <Method Sig="instance [] byte GetNonUnicodeBytes()" />
          <Method Sig="struct SqlString op_Addition(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlBoolean )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlByte )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlInt16 )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlInt32 )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlInt64 )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlSingle )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlDouble )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlDecimal )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlMoney )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlDateTime )" />
          <Method Sig="struct SqlString op_Explicit(struct SqlGuid )" />
          <Method Sig="instance struct SqlString Clone()" />
          <Method Sig="struct SqlBoolean op_Equality(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean op_Inequality(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean op_LessThan(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean op_GreaterThan(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean op_LessThanOrEqual(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean op_GreaterThanOrEqual(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlString Concat(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlString Add(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean Equals(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean NotEquals(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean LessThan(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean GreaterThan(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean LessThanOrEqual(struct SqlString , struct SqlString )" />
          <Method Sig="struct SqlBoolean GreaterThanOrEqual(struct SqlString , struct SqlString )" />
          <Method Sig="instance struct SqlBoolean ToSqlBoolean()" />
          <Method Sig="instance struct SqlByte ToSqlByte()" />
          <Method Sig="instance struct SqlDateTime ToSqlDateTime()" />
          <Method Sig="instance struct SqlDouble ToSqlDouble()" />
          <Method Sig="instance struct SqlInt16 ToSqlInt16()" />
          <Method Sig="instance struct SqlInt32 ToSqlInt32()" />
          <Method Sig="instance struct SqlInt64 ToSqlInt64()" />
          <Method Sig="instance struct SqlMoney ToSqlMoney()" />
          <Method Sig="instance struct SqlDecimal ToSqlDecimal()" />
          <Method Sig="instance struct SqlSingle ToSqlSingle()" />
          <Method Sig="instance struct SqlGuid ToSqlGuid()" />
          <Method Sig="struct CompareOptions CompareOptionsFromSqlCompareOptions(struct SqlCompareOptions )" />
          <Method Sig="instance int CompareTo(object )" />
          <Method Sig="instance int CompareTo(struct SqlString )" />
          <Method Sig="instance bool Equals(object )" />
          <Method Sig="instance int GetHashCode()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="SqlTypesSchemaImporterExtensionHelper">
          <Method Sig="instance void .ctor(string , string , [] string , [] class CodeNamespaceImport , string , bool )" />
          <Method Sig="instance void .ctor(string , string )" />
          <Method Sig="instance void .ctor(string , string , bool )" />
          <Method Sig="instance string ImportSchemaType(string , string , class XmlSchemaObject , class XmlSchemas , class XmlSchemaImporter , class CodeCompileUnit , class CodeNamespace , struct CodeGenerationOptions , class CodeDomProvider )" />
          <Method Sig="instance string ImportSchemaType(class XmlSchemaType , class XmlSchemaObject , class XmlSchemas , class XmlSchemaImporter , class CodeCompileUnit , class CodeNamespace , struct CodeGenerationOptions , class CodeDomProvider )" />
          <Method Sig="void .cctor()" />
        </Type>
        <Type Name="TypeCharSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeNCharSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeVarCharSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeNVarCharSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeTextSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeNTextSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeVarBinarySchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeBinarySchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeVarImageSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeDecimalSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeNumericSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeBigIntSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeIntSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeSmallIntSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeTinyIntSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeBitSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeFloatSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeRealSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeDateTimeSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeSmallDateTimeSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeMoneySchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeSmallMoneySchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="TypeUniqueIdentifierSchemaImporterExtension">
          <Method Sig="instance void .ctor()" />
        </Type>
        <Type Name="SqlTypeException">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(string , class Exception )" />
        </Type>
        <Type Name="SqlNullValueException">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(string , class Exception )" />
        </Type>
        <Type Name="SqlTruncateException">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(string , class Exception )" />
        </Type>
        <Type Name="SqlNotFilledException">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(string , class Exception )" />
        </Type>
        <Type Name="SqlAlreadyFilledException">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(string )" />
          <Method Sig="instance void .ctor(string , class Exception )" />
        </Type>
        <Type Name="SqlXml">
          <Method Sig="instance void .ctor()" />
          <Method Sig="instance void .ctor(class XmlReader )" />
          <Method Sig="instance void .ctor(class Stream )" />
          <Method Sig="instance class XmlReader CreateReader()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="instance bool get_IsNull()" />
          <Method Sig="instance string get_Value()">
            <Demand>
              <PermissionSet version="1" class="System.Security.PermissionSet">
                <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              </PermissionSet>
            </Demand>
          </Method>
          <Method Sig="class SqlXml get_Null()" />
          <Method Sig="class XmlQualifiedName GetXsdType(class XmlSchemaSet )" />
        </Type>
      </Namespace>
    </Namespace>
    <Namespace Name="Xml">
      <Type Name="XmlDataDocument">
        <Method Sig="instance class XmlElement CreateElement(string , string , string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class XmlEntityReference CreateEntityReference(string )" />
        <Method Sig="instance class DataSet get_DataSet()" />
        <Method Sig="instance class DataRow GetRowFromElement(class XmlElement )" />
        <Method Sig="instance class XmlElement GetElementFromRow(class DataRow )" />
        <Method Sig="instance class XmlNode CloneNode(bool )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="MemberAccess" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Load(string )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Load(class Stream )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Load(class TextReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void Load(class XmlReader )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" PathDiscovery="*AllFiles*" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor()">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance void .ctor(class DataSet )">
          <Demand>
            <PermissionSet version="1" class="System.Security.PermissionSet">
              <IPermission version="1" class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Unrestricted="true" />
              <IPermission version="1" class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" Flags="ControlEvidence" />
            </PermissionSet>
          </Demand>
        </Method>
        <Method Sig="instance class XmlElement GetElementById(string )" />
        <Method Sig="instance class XmlNodeList GetElementsByTagName(string )" />
      </Type>
    </Namespace>
  </Namespace>
</Assembly>
